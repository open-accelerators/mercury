/*
  Account Reconciliation

  This Service Domain handles account reconciliation tasks

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.accountreconciliation.v10.api.craccountreconciliationprocedureservice;

import "google/protobuf/empty.proto";
import public "v10/model/control_account_reconciliation_procedure_request.proto";
import public "v10/model/control_account_reconciliation_procedure_response.proto";
import public "v10/model/exchange_account_reconciliation_procedure_request.proto";
import public "v10/model/exchange_account_reconciliation_procedure_response.proto";
import public "v10/model/execute_account_reconciliation_procedure_request.proto";
import public "v10/model/execute_account_reconciliation_procedure_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_account_reconciliation_procedure_request.proto";
import public "v10/model/initiate_account_reconciliation_procedure_response.proto";
import public "v10/model/notify_account_reconciliation_procedure_response.proto";
import public "v10/model/request_account_reconciliation_procedure_request.proto";
import public "v10/model/request_account_reconciliation_procedure_response.proto";
import public "v10/model/retrieve_account_reconciliation_procedure_response.proto";
import public "v10/model/update_account_reconciliation_procedure_request.proto";
import public "v10/model/update_account_reconciliation_procedure_response.proto";

service CRAccountReconciliationProcedureService {
  rpc Control (ControlRequest) returns (ControlAccountReconciliationProcedureResponse);

  rpc Exchange (ExchangeRequest) returns (ExchangeAccountReconciliationProcedureResponse);

  rpc Execute (ExecuteRequest) returns (ExecuteAccountReconciliationProcedureResponse);

  rpc Initiate (InitiateRequest) returns (InitiateAccountReconciliationProcedureResponse);

  rpc Notify (NotifyRequest) returns (NotifyAccountReconciliationProcedureResponse);

  rpc Request (RequestRequest) returns (RequestAccountReconciliationProcedureResponse);

  rpc Retrieve (RetrieveRequest) returns (RetrieveAccountReconciliationProcedureResponse);

  rpc Update (UpdateRequest) returns (UpdateAccountReconciliationProcedureResponse);

}

message ControlRequest {
  string accountreconciliationId = 1;
  ControlAccountReconciliationProcedureRequest controlAccountReconciliationProcedureRequest = 2;

}

message ExchangeRequest {
  string accountreconciliationId = 1;
  ExchangeAccountReconciliationProcedureRequest exchangeAccountReconciliationProcedureRequest = 2;

}

message ExecuteRequest {
  string accountreconciliationId = 1;
  ExecuteAccountReconciliationProcedureRequest executeAccountReconciliationProcedureRequest = 2;

}

message InitiateRequest {
  InitiateAccountReconciliationProcedureRequest initiateAccountReconciliationProcedureRequest = 1;

}

message NotifyRequest {
  string accountreconciliationId = 1;

}

message RequestRequest {
  string accountreconciliationId = 1;
  RequestAccountReconciliationProcedureRequest requestAccountReconciliationProcedureRequest = 2;

}

message RetrieveRequest {
  string accountreconciliationId = 1;

}

message UpdateRequest {
  string accountreconciliationId = 1;
  UpdateAccountReconciliationProcedureRequest updateAccountReconciliationProcedureRequest = 2;

}

