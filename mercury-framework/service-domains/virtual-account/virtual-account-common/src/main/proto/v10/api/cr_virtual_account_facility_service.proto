/*
  Virtual Account

  A Virtual Account is a bank account that is defined on an underlying real account. It can receive and send payments for the underlying account while behaving towards the outside as a separate account.

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.virtualaccount.v10.api.crvirtualaccountfacilityservice;

import "google/protobuf/empty.proto";
import public "v10/model/capture_virtual_account_facility_request.proto";
import public "v10/model/capture_virtual_account_facility_response.proto";
import public "v10/model/control_virtual_account_facility_request.proto";
import public "v10/model/control_virtual_account_facility_response.proto";
import public "v10/model/exchange_virtual_account_facility_request.proto";
import public "v10/model/exchange_virtual_account_facility_response.proto";
import public "v10/model/execute_virtual_account_facility_request.proto";
import public "v10/model/execute_virtual_account_facility_response.proto";
import public "v10/model/grant_virtual_account_facility_request.proto";
import public "v10/model/grant_virtual_account_facility_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_virtual_account_facility_request.proto";
import public "v10/model/initiate_virtual_account_facility_response.proto";
import public "v10/model/request_virtual_account_facility_request.proto";
import public "v10/model/request_virtual_account_facility_response.proto";
import public "v10/model/retrieve_virtual_account_facility_response.proto";
import public "v10/model/update_virtual_account_facility_request.proto";
import public "v10/model/update_virtual_account_facility_response.proto";

service CRVirtualAccountFacilityService {
  rpc Capture (CaptureRequest) returns (CaptureVirtualAccountFacilityResponse);

  rpc Control (ControlRequest) returns (ControlVirtualAccountFacilityResponse);

  rpc Exchange (ExchangeRequest) returns (ExchangeVirtualAccountFacilityResponse);

  rpc Execute (ExecuteRequest) returns (ExecuteVirtualAccountFacilityResponse);

  rpc Grant (GrantRequest) returns (GrantVirtualAccountFacilityResponse);

  rpc Initiate (InitiateRequest) returns (InitiateVirtualAccountFacilityResponse);

  rpc Request (RequestRequest) returns (RequestVirtualAccountFacilityResponse);

  rpc Retrieve (RetrieveRequest) returns (RetrieveVirtualAccountFacilityResponse);

  rpc Update (UpdateRequest) returns (UpdateVirtualAccountFacilityResponse);

}

message CaptureRequest {
  string virtualaccountId = 1;
  CaptureVirtualAccountFacilityRequest captureVirtualAccountFacilityRequest = 2;

}

message ControlRequest {
  string virtualaccountId = 1;
  ControlVirtualAccountFacilityRequest controlVirtualAccountFacilityRequest = 2;

}

message ExchangeRequest {
  string virtualaccountId = 1;
  ExchangeVirtualAccountFacilityRequest exchangeVirtualAccountFacilityRequest = 2;

}

message ExecuteRequest {
  string virtualaccountId = 1;
  ExecuteVirtualAccountFacilityRequest executeVirtualAccountFacilityRequest = 2;

}

message GrantRequest {
  string virtualaccountId = 1;
  GrantVirtualAccountFacilityRequest grantVirtualAccountFacilityRequest = 2;

}

message InitiateRequest {
  InitiateVirtualAccountFacilityRequest initiateVirtualAccountFacilityRequest = 1;

}

message RequestRequest {
  string virtualaccountId = 1;
  RequestVirtualAccountFacilityRequest requestVirtualAccountFacilityRequest = 2;

}

message RetrieveRequest {
  string virtualaccountId = 1;

}

message UpdateRequest {
  string virtualaccountId = 1;
  UpdateVirtualAccountFacilityRequest updateVirtualAccountFacilityRequest = 2;

}

