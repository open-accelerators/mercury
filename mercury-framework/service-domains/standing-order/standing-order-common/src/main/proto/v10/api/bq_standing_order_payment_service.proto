/*
  Standing Order

  Customers can issue standing orders to the bank. In most cases this is for the execution of a periodical payment, but there are other standing instructions like, sweeping balances at end of month, topping off excess funds for a current account, etc.

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.standingorder.v10.api.bqstandingorderpaymentservice;

import "google/protobuf/empty.proto";
import public "v10/model/exchange_standing_order_payment_request.proto";
import public "v10/model/exchange_standing_order_payment_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_standing_order_payment_request.proto";
import public "v10/model/initiate_standing_order_payment_response.proto";
import public "v10/model/retrieve_standing_order_payment_response.proto";
import public "v10/model/update_standing_order_payment_request.proto";
import public "v10/model/update_standing_order_payment_response.proto";

service BQStandingOrderPaymentService {
  rpc ExchangeStandingOrderPayment (ExchangeStandingOrderPaymentRequest) returns (ExchangeStandingOrderPaymentResponse);

  rpc InitiateStandingOrderPayment (InitiateStandingOrderPaymentRequest) returns (InitiateStandingOrderPaymentResponse);

  rpc RetrieveStandingOrderPayment (RetrieveStandingOrderPaymentRequest) returns (RetrieveStandingOrderPaymentResponse);

  rpc UpdateStandingOrderPayment (UpdateStandingOrderPaymentRequest) returns (UpdateStandingOrderPaymentResponse);

}

message ExchangeStandingOrderPaymentRequest {
  string standingorderId = 1;
  string standingorderpaymentId = 2;
  ExchangeStandingOrderPaymentRequest exchangeStandingOrderPaymentRequest = 3;

}

message InitiateStandingOrderPaymentRequest {
  string standingorderId = 1;
  InitiateStandingOrderPaymentRequest initiateStandingOrderPaymentRequest = 2;

}

message RetrieveStandingOrderPaymentRequest {
  string standingorderId = 1;
  string standingorderpaymentId = 2;

}

message UpdateStandingOrderPaymentRequest {
  string standingorderId = 1;
  string standingorderpaymentId = 2;
  UpdateStandingOrderPaymentRequest updateStandingOrderPaymentRequest = 3;

}

