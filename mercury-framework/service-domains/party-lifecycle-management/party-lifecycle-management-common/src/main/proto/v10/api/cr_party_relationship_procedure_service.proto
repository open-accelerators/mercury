/*
  Party Lifecycle Management

  This service domain tracks the state of a party relationship with the bank from the initial checks made during the establishment of a new party connection and subsequently maintained as necessary over the duration of the relationship. The checks and the maintenance requirements will vary by party type and jurisdiction. The checks cover bank specific and legal and regulatory considerations and may be updated based on a standard schedule or by request in specific circumstances.

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.partylifecyclemanagement.v10.api.crpartyrelationshipprocedureservice;

import "google/protobuf/empty.proto";
import public "v10/model/execute_party_relationship_procedure_request.proto";
import public "v10/model/execute_party_relationship_procedure_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_party_relationship_procedure_request.proto";
import public "v10/model/initiate_party_relationship_procedure_response.proto";
import public "v10/model/party_relationship_procedure.proto";
import public "v10/model/request_party_relationship_procedure_request.proto";
import public "v10/model/request_party_relationship_procedure_response.proto";

service CRPartyRelationshipProcedureService {
  rpc Execute (ExecuteRequest) returns (ExecutePartyRelationshipProcedureResponse);

  rpc Initiate (InitiateRequest) returns (InitiatePartyRelationshipProcedureResponse);

  rpc Request (RequestRequest) returns (RequestPartyRelationshipProcedureResponse);

  rpc Retrieve (RetrieveRequest) returns (PartyRelationshipProcedure);

  rpc Update (UpdateRequest) returns (PartyRelationshipProcedure);

}

message ExecuteRequest {
  string partylifecyclemanagementId = 1;
  ExecutePartyRelationshipProcedureRequest executePartyRelationshipProcedureRequest = 2;

}

message InitiateRequest {
  InitiatePartyRelationshipProcedureRequest initiatePartyRelationshipProcedureRequest = 1;

}

message RequestRequest {
  string partylifecyclemanagementId = 1;
  RequestPartyRelationshipProcedureRequest requestPartyRelationshipProcedureRequest = 2;

}

message RetrieveRequest {
  string partylifecyclemanagementId = 1;

}

message UpdateRequest {
  string partylifecyclemanagementId = 1;
  PartyRelationshipProcedure partyRelationshipProcedure = 2;

}

