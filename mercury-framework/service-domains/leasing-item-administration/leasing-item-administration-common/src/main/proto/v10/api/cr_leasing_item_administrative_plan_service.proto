/*
  Leasing Item Administration

  Track the status of the assets underlying leasing agreements as they represent collateral items that could be accessed in the event of account recovery

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.leasingitemadministration.v10.api.crleasingitemadministrativeplanservice;

import "google/protobuf/empty.proto";
import public "v10/model/capture_leasing_item_administrative_plan_request.proto";
import public "v10/model/capture_leasing_item_administrative_plan_response.proto";
import public "v10/model/control_leasing_item_administrative_plan_request.proto";
import public "v10/model/control_leasing_item_administrative_plan_response.proto";
import public "v10/model/exchange_leasing_item_administrative_plan_request.proto";
import public "v10/model/exchange_leasing_item_administrative_plan_response.proto";
import public "v10/model/grant_leasing_item_administrative_plan_request.proto";
import public "v10/model/grant_leasing_item_administrative_plan_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_leasing_item_administrative_plan_request.proto";
import public "v10/model/initiate_leasing_item_administrative_plan_response.proto";
import public "v10/model/request_leasing_item_administrative_plan_request.proto";
import public "v10/model/request_leasing_item_administrative_plan_response.proto";
import public "v10/model/retrieve_leasing_item_administrative_plan_response.proto";
import public "v10/model/update_leasing_item_administrative_plan_request.proto";
import public "v10/model/update_leasing_item_administrative_plan_response.proto";

service CRLeasingItemAdministrativePlanService {
  rpc Capture (CaptureRequest) returns (CaptureLeasingItemAdministrativePlanResponse);

  rpc Control (ControlRequest) returns (ControlLeasingItemAdministrativePlanResponse);

  rpc Exchange (ExchangeRequest) returns (ExchangeLeasingItemAdministrativePlanResponse);

  rpc Grant (GrantRequest) returns (GrantLeasingItemAdministrativePlanResponse);

  rpc Initiate (InitiateRequest) returns (InitiateLeasingItemAdministrativePlanResponse);

  rpc Request (RequestRequest) returns (RequestLeasingItemAdministrativePlanResponse);

  rpc Retrieve (RetrieveRequest) returns (RetrieveLeasingItemAdministrativePlanResponse);

  rpc Update (UpdateRequest) returns (UpdateLeasingItemAdministrativePlanResponse);

}

message CaptureRequest {
  string leasingitemadministrationId = 1;
  CaptureLeasingItemAdministrativePlanRequest captureLeasingItemAdministrativePlanRequest = 2;

}

message ControlRequest {
  string leasingitemadministrationId = 1;
  ControlLeasingItemAdministrativePlanRequest controlLeasingItemAdministrativePlanRequest = 2;

}

message ExchangeRequest {
  string leasingitemadministrationId = 1;
  ExchangeLeasingItemAdministrativePlanRequest exchangeLeasingItemAdministrativePlanRequest = 2;

}

message GrantRequest {
  string leasingitemadministrationId = 1;
  GrantLeasingItemAdministrativePlanRequest grantLeasingItemAdministrativePlanRequest = 2;

}

message InitiateRequest {
  InitiateLeasingItemAdministrativePlanRequest initiateLeasingItemAdministrativePlanRequest = 1;

}

message RequestRequest {
  string leasingitemadministrationId = 1;
  RequestLeasingItemAdministrativePlanRequest requestLeasingItemAdministrativePlanRequest = 2;

}

message RetrieveRequest {
  string leasingitemadministrationId = 1;

}

message UpdateRequest {
  string leasingitemadministrationId = 1;
  UpdateLeasingItemAdministrativePlanRequest updateLeasingItemAdministrativePlanRequest = 2;

}

