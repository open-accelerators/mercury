/*
  Market Making

  This Service Domain enables the bank to fulfill its market making function typically in collaboration with a trading exchange. The bank maintains a buy/sell quote for the securities it supports as a market maker and accepts buy/sell orders on request

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.marketmaking.v10.api.bqmarketmakingbuyandsellorderfulfillmentservice;

import "google/protobuf/empty.proto";
import public "v10/model/http_error.proto";
import public "v10/model/market_making_buyand_sell_order_fulfillment.proto";

service BQMarketMakingBuyandSellOrderFulfillmentService {
  rpc ExchangeMarketMakingBuyandSellOrderFulfillment (ExchangeMarketMakingBuyandSellOrderFulfillmentRequest) returns (MarketMakingBuyandSellOrderFulfillment);

  rpc ExecuteMarketMakingBuyandSellOrderFulfillment (ExecuteMarketMakingBuyandSellOrderFulfillmentRequest) returns (MarketMakingBuyandSellOrderFulfillment);

  rpc InitiateMarketMakingBuyandSellOrderFulfillment (InitiateMarketMakingBuyandSellOrderFulfillmentRequest) returns (MarketMakingBuyandSellOrderFulfillment);

  rpc NotifyMarketMakingBuyandSellOrderFulfillment (NotifyMarketMakingBuyandSellOrderFulfillmentRequest) returns (MarketMakingBuyandSellOrderFulfillment);

  rpc RequestMarketMakingBuyandSellOrderFulfillment (RequestMarketMakingBuyandSellOrderFulfillmentRequest) returns (MarketMakingBuyandSellOrderFulfillment);

  rpc RetrieveMarketMakingBuyandSellOrderFulfillment (RetrieveMarketMakingBuyandSellOrderFulfillmentRequest) returns (MarketMakingBuyandSellOrderFulfillment);

  rpc UpdateMarketMakingBuyandSellOrderFulfillment (UpdateMarketMakingBuyandSellOrderFulfillmentRequest) returns (MarketMakingBuyandSellOrderFulfillment);

}

message ExchangeMarketMakingBuyandSellOrderFulfillmentRequest {
  string marketmakingId = 1;
  string marketmakingbuyandsellorderfulfillmentId = 2;
  MarketMakingBuyandSellOrderFulfillment marketMakingBuyandSellOrderFulfillment = 3;

}

message ExecuteMarketMakingBuyandSellOrderFulfillmentRequest {
  string marketmakingId = 1;
  string marketmakingbuyandsellorderfulfillmentId = 2;
  MarketMakingBuyandSellOrderFulfillment marketMakingBuyandSellOrderFulfillment = 3;

}

message InitiateMarketMakingBuyandSellOrderFulfillmentRequest {
  string marketmakingId = 1;
  MarketMakingBuyandSellOrderFulfillment marketMakingBuyandSellOrderFulfillment = 2;

}

message NotifyMarketMakingBuyandSellOrderFulfillmentRequest {
  string marketmakingId = 1;
  string marketmakingbuyandsellorderfulfillmentId = 2;

}

message RequestMarketMakingBuyandSellOrderFulfillmentRequest {
  string marketmakingId = 1;
  string marketmakingbuyandsellorderfulfillmentId = 2;
  MarketMakingBuyandSellOrderFulfillment marketMakingBuyandSellOrderFulfillment = 3;

}

message RetrieveMarketMakingBuyandSellOrderFulfillmentRequest {
  string marketmakingId = 1;
  string marketmakingbuyandsellorderfulfillmentId = 2;

}

message UpdateMarketMakingBuyandSellOrderFulfillmentRequest {
  string marketmakingId = 1;
  string marketmakingbuyandsellorderfulfillmentId = 2;
  MarketMakingBuyandSellOrderFulfillment marketMakingBuyandSellOrderFulfillment = 3;

}

