/*
  Channel Activity Analysis

  This service domain tracks and analyzes channel activity to support relationship development, to detect unwanted behavior, possible fraud, and to constrain channel use as necessary (for example tracking usage frequency and cumulative transaction amounts within a period)

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.channelactivityanalysis.v10.api.crchannelactivityanalysisservice;

import "google/protobuf/empty.proto";
import public "v10/model/channel_activity_analysis.proto";
import public "v10/model/evaluate_channel_activity_analysis_request.proto";
import public "v10/model/evaluate_channel_activity_analysis_response.proto";
import public "v10/model/exchange_channel_activity_analysis_request.proto";
import public "v10/model/exchange_channel_activity_analysis_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/request_channel_activity_analysis_request.proto";
import public "v10/model/request_channel_activity_analysis_response.proto";

service CRChannelActivityAnalysisService {
  rpc Evaluate (EvaluateRequest) returns (EvaluateChannelActivityAnalysisResponse);

  rpc Exchange (ExchangeRequest) returns (ExchangeChannelActivityAnalysisResponse);

  rpc Request (RequestRequest) returns (RequestChannelActivityAnalysisResponse);

  rpc Retrieve (RetrieveRequest) returns (ChannelActivityAnalysis);

}

message EvaluateRequest {
  EvaluateChannelActivityAnalysisRequest evaluateChannelActivityAnalysisRequest = 1;

}

message ExchangeRequest {
  string channelactivityanalysisId = 1;
  ExchangeChannelActivityAnalysisRequest exchangeChannelActivityAnalysisRequest = 2;

}

message RequestRequest {
  string channelactivityanalysisId = 1;
  RequestChannelActivityAnalysisRequest requestChannelActivityAnalysisRequest = 2;

}

message RetrieveRequest {
  string channelactivityanalysisId = 1;

}

