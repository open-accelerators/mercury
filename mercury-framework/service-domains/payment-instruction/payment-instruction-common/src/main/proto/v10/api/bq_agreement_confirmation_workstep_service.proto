/*
  Payment Instruction

  This Service Domain processes the pre-checks needed to confirm the necessary arrangements are in place and assemble and rout payment related requests received from third party payment services.

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.paymentinstruction.v10.api.bqagreementconfirmationworkstepservice;

import "google/protobuf/empty.proto";
import public "v10/model/agreement_confirmation_workstep.proto";
import public "v10/model/http_error.proto";

service BQAgreementConfirmationWorkstepService {
  rpc ExchangeAgreementConfirmationWorkstep (ExchangeAgreementConfirmationWorkstepRequest) returns (AgreementConfirmationWorkstep);

  rpc ExecuteAgreementConfirmationWorkstep (ExecuteAgreementConfirmationWorkstepRequest) returns (AgreementConfirmationWorkstep);

  rpc InitiateAgreementConfirmationWorkstep (InitiateAgreementConfirmationWorkstepRequest) returns (AgreementConfirmationWorkstep);

  rpc NotifyAgreementConfirmationWorkstep (NotifyAgreementConfirmationWorkstepRequest) returns (AgreementConfirmationWorkstep);

  rpc RequestAgreementConfirmationWorkstep (RequestAgreementConfirmationWorkstepRequest) returns (AgreementConfirmationWorkstep);

  rpc RetrieveAgreementConfirmationWorkstep (RetrieveAgreementConfirmationWorkstepRequest) returns (AgreementConfirmationWorkstep);

  rpc UpdateAgreementConfirmationWorkstep (UpdateAgreementConfirmationWorkstepRequest) returns (AgreementConfirmationWorkstep);

}

message ExchangeAgreementConfirmationWorkstepRequest {
  string paymentinstructionId = 1;
  string agreementconfirmationworkstepId = 2;
  AgreementConfirmationWorkstep agreementConfirmationWorkstep = 3;

}

message ExecuteAgreementConfirmationWorkstepRequest {
  string paymentinstructionId = 1;
  string agreementconfirmationworkstepId = 2;
  AgreementConfirmationWorkstep agreementConfirmationWorkstep = 3;

}

message InitiateAgreementConfirmationWorkstepRequest {
  string paymentinstructionId = 1;
  AgreementConfirmationWorkstep agreementConfirmationWorkstep = 2;

}

message NotifyAgreementConfirmationWorkstepRequest {
  string paymentinstructionId = 1;
  string agreementconfirmationworkstepId = 2;

}

message RequestAgreementConfirmationWorkstepRequest {
  string paymentinstructionId = 1;
  string agreementconfirmationworkstepId = 2;
  AgreementConfirmationWorkstep agreementConfirmationWorkstep = 3;

}

message RetrieveAgreementConfirmationWorkstepRequest {
  string paymentinstructionId = 1;
  string agreementconfirmationworkstepId = 2;

}

message UpdateAgreementConfirmationWorkstepRequest {
  string paymentinstructionId = 1;
  string agreementconfirmationworkstepId = 2;
  AgreementConfirmationWorkstep agreementConfirmationWorkstep = 3;

}

