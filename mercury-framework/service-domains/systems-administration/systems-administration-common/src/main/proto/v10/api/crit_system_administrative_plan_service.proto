/*
  Systems Administration

  Administer the configuration, maintenance, assignment and track usage and status of all IT assets deployed in development and production across the enterprise

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.systemsadministration.v10.api.critsystemadministrativeplanservice;

import "google/protobuf/empty.proto";
import public "v10/model/capture_it_system_administrative_plan_request.proto";
import public "v10/model/capture_it_system_administrative_plan_response.proto";
import public "v10/model/control_it_system_administrative_plan_request.proto";
import public "v10/model/control_it_system_administrative_plan_response.proto";
import public "v10/model/exchange_it_system_administrative_plan_request.proto";
import public "v10/model/exchange_it_system_administrative_plan_response.proto";
import public "v10/model/grant_it_system_administrative_plan_request.proto";
import public "v10/model/grant_it_system_administrative_plan_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_it_system_administrative_plan_request.proto";
import public "v10/model/initiate_it_system_administrative_plan_response.proto";
import public "v10/model/request_it_system_administrative_plan_request.proto";
import public "v10/model/request_it_system_administrative_plan_response.proto";
import public "v10/model/retrieve_it_system_administrative_plan_response.proto";
import public "v10/model/update_it_system_administrative_plan_request.proto";
import public "v10/model/update_it_system_administrative_plan_response.proto";

service CRITSystemAdministrativePlanService {
  rpc Capture (CaptureRequest) returns (CaptureITSystemAdministrativePlanResponse);

  rpc Control (ControlRequest) returns (ControlITSystemAdministrativePlanResponse);

  rpc Exchange (ExchangeRequest) returns (ExchangeITSystemAdministrativePlanResponse);

  rpc Grant (GrantRequest) returns (GrantITSystemAdministrativePlanResponse);

  rpc Initiate (InitiateRequest) returns (InitiateITSystemAdministrativePlanResponse);

  rpc Request (RequestRequest) returns (RequestITSystemAdministrativePlanResponse);

  rpc Retrieve (RetrieveRequest) returns (RetrieveITSystemAdministrativePlanResponse);

  rpc Update (UpdateRequest) returns (UpdateITSystemAdministrativePlanResponse);

}

message CaptureRequest {
  string systemsadministrationId = 1;
  CaptureITSystemAdministrativePlanRequest captureITSystemAdministrativePlanRequest = 2;

}

message ControlRequest {
  string systemsadministrationId = 1;
  ControlITSystemAdministrativePlanRequest controlITSystemAdministrativePlanRequest = 2;

}

message ExchangeRequest {
  string systemsadministrationId = 1;
  ExchangeITSystemAdministrativePlanRequest exchangeITSystemAdministrativePlanRequest = 2;

}

message GrantRequest {
  string systemsadministrationId = 1;
  GrantITSystemAdministrativePlanRequest grantITSystemAdministrativePlanRequest = 2;

}

message InitiateRequest {
  InitiateITSystemAdministrativePlanRequest initiateITSystemAdministrativePlanRequest = 1;

}

message RequestRequest {
  string systemsadministrationId = 1;
  RequestITSystemAdministrativePlanRequest requestITSystemAdministrativePlanRequest = 2;

}

message RetrieveRequest {
  string systemsadministrationId = 1;

}

message UpdateRequest {
  string systemsadministrationId = 1;
  UpdateITSystemAdministrativePlanRequest updateITSystemAdministrativePlanRequest = 2;

}

