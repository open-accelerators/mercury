/*
  Product Matching

  Capability used to match eligible product and product combinations to a customer based on prevailing conditions such as customer type, product interest, solicitation/retention, campaign alignment

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.productmatching.v10.api.crproductcustomercombinationassessmentservice;

import "google/protobuf/empty.proto";
import public "v10/model/exchange_product_customer_combination_assessment_request.proto";
import public "v10/model/exchange_product_customer_combination_assessment_response.proto";
import public "v10/model/execute_product_customer_combination_assessment_request.proto";
import public "v10/model/execute_product_customer_combination_assessment_response.proto";
import public "v10/model/grant_product_customer_combination_assessment_request.proto";
import public "v10/model/grant_product_customer_combination_assessment_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_product_customer_combination_assessment_request.proto";
import public "v10/model/initiate_product_customer_combination_assessment_response.proto";
import public "v10/model/request_product_customer_combination_assessment_request.proto";
import public "v10/model/request_product_customer_combination_assessment_response.proto";
import public "v10/model/retrieve_product_customer_combination_assessment_response.proto";
import public "v10/model/update_product_customer_combination_assessment_request.proto";
import public "v10/model/update_product_customer_combination_assessment_response.proto";

service CRProductCustomerCombinationAssessmentService {
  rpc Exchange (ExchangeRequest) returns (ExchangeProductCustomerCombinationAssessmentResponse);

  rpc Execute (ExecuteRequest) returns (ExecuteProductCustomerCombinationAssessmentResponse);

  rpc Grant (GrantRequest) returns (GrantProductCustomerCombinationAssessmentResponse);

  rpc Initiate (InitiateRequest) returns (InitiateProductCustomerCombinationAssessmentResponse);

  rpc Request (RequestRequest) returns (RequestProductCustomerCombinationAssessmentResponse);

  rpc Retrieve (RetrieveRequest) returns (RetrieveProductCustomerCombinationAssessmentResponse);

  rpc Update (UpdateRequest) returns (UpdateProductCustomerCombinationAssessmentResponse);

}

message ExchangeRequest {
  string productmatchingId = 1;
  ExchangeProductCustomerCombinationAssessmentRequest exchangeProductCustomerCombinationAssessmentRequest = 2;

}

message ExecuteRequest {
  string productmatchingId = 1;
  ExecuteProductCustomerCombinationAssessmentRequest executeProductCustomerCombinationAssessmentRequest = 2;

}

message GrantRequest {
  string productmatchingId = 1;
  GrantProductCustomerCombinationAssessmentRequest grantProductCustomerCombinationAssessmentRequest = 2;

}

message InitiateRequest {
  InitiateProductCustomerCombinationAssessmentRequest initiateProductCustomerCombinationAssessmentRequest = 1;

}

message RequestRequest {
  string productmatchingId = 1;
  RequestProductCustomerCombinationAssessmentRequest requestProductCustomerCombinationAssessmentRequest = 2;

}

message RetrieveRequest {
  string productmatchingId = 1;

}

message UpdateRequest {
  string productmatchingId = 1;
  UpdateProductCustomerCombinationAssessmentRequest updateProductCustomerCombinationAssessmentRequest = 2;

}

