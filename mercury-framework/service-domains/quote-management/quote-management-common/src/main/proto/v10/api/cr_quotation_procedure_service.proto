/*
  Quote Management

  This service domain handles the procedure used by traders to obtain and selecting quotes from market makers

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.quotemanagement.v10.api.crquotationprocedureservice;

import "google/protobuf/empty.proto";
import public "v10/model/control_quotation_procedure_request.proto";
import public "v10/model/control_quotation_procedure_response.proto";
import public "v10/model/exchange_quotation_procedure_request.proto";
import public "v10/model/exchange_quotation_procedure_response.proto";
import public "v10/model/execute_quotation_procedure_request.proto";
import public "v10/model/execute_quotation_procedure_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_quotation_procedure_request.proto";
import public "v10/model/initiate_quotation_procedure_response.proto";
import public "v10/model/notify_quotation_procedure_response.proto";
import public "v10/model/request_quotation_procedure_request.proto";
import public "v10/model/request_quotation_procedure_response.proto";
import public "v10/model/retrieve_quotation_procedure_response.proto";
import public "v10/model/update_quotation_procedure_request.proto";
import public "v10/model/update_quotation_procedure_response.proto";

service CRQuotationProcedureService {
  rpc Control (ControlRequest) returns (ControlQuotationProcedureResponse);

  rpc Exchange (ExchangeRequest) returns (ExchangeQuotationProcedureResponse);

  rpc Execute (ExecuteRequest) returns (ExecuteQuotationProcedureResponse);

  rpc Initiate (InitiateRequest) returns (InitiateQuotationProcedureResponse);

  rpc Notify (NotifyRequest) returns (NotifyQuotationProcedureResponse);

  rpc Request (RequestRequest) returns (RequestQuotationProcedureResponse);

  rpc Retrieve (RetrieveRequest) returns (RetrieveQuotationProcedureResponse);

  rpc Update (UpdateRequest) returns (UpdateQuotationProcedureResponse);

}

message ControlRequest {
  string quotemanagementId = 1;
  ControlQuotationProcedureRequest controlQuotationProcedureRequest = 2;

}

message ExchangeRequest {
  string quotemanagementId = 1;
  ExchangeQuotationProcedureRequest exchangeQuotationProcedureRequest = 2;

}

message ExecuteRequest {
  string quotemanagementId = 1;
  ExecuteQuotationProcedureRequest executeQuotationProcedureRequest = 2;

}

message InitiateRequest {
  InitiateQuotationProcedureRequest initiateQuotationProcedureRequest = 1;

}

message NotifyRequest {
  string quotemanagementId = 1;

}

message RequestRequest {
  string quotemanagementId = 1;
  RequestQuotationProcedureRequest requestQuotationProcedureRequest = 2;

}

message RetrieveRequest {
  string quotemanagementId = 1;

}

message UpdateRequest {
  string quotemanagementId = 1;
  UpdateQuotationProcedureRequest updateQuotationProcedureRequest = 2;

}

