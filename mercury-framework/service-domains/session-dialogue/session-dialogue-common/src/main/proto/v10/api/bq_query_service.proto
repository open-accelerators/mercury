/*
  Session Dialogue

  This service domain handles/structures the customer narrative during an interactive session. It consolidates and presents pertinent customer information and provides servicing guidelines with standard dialogue/scripting as appropriate. It can include the capability to provoke questions to capture key relationship and sales triggers. It also ensures the correct sequencing, dialogue content and actions are performed/initiated during the customer interaction. It may further leverage the session by passing on customer notifications, status updates and triggering sales/marketing efforts.

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.sessiondialogue.v10.api.bqqueryservice;

import "google/protobuf/empty.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_query_request.proto";
import public "v10/model/initiate_query_response.proto";
import public "v10/model/retrieve_query_response.proto";
import public "v10/model/update_query_request.proto";
import public "v10/model/update_query_response.proto";

service BQQueryService {
  rpc InitiateQuery (InitiateQueryRequest) returns (InitiateQueryResponse);

  rpc RetrieveQuery (RetrieveQueryRequest) returns (RetrieveQueryResponse);

  rpc UpdateQuery (UpdateQueryRequest) returns (UpdateQueryResponse);

}

message InitiateQueryRequest {
  string sessiondialogueId = 1;
  InitiateQueryRequest initiateQueryRequest = 2;

}

message RetrieveQueryRequest {
  string sessiondialogueId = 1;
  string queryId = 2;

}

message UpdateQueryRequest {
  string sessiondialogueId = 1;
  string queryId = 2;
  UpdateQueryRequest updateQueryRequest = 3;

}

