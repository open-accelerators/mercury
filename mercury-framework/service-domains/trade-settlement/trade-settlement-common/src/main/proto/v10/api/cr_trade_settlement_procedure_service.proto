/*
  Trade Settlement

  This Service Domain handles the final movement of cash and securities between depositories as previously confirmed in the clearing process, in order to settle a market trade

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.tradesettlement.v10.api.crtradesettlementprocedureservice;

import "google/protobuf/empty.proto";
import public "v10/model/control_trade_settlement_procedure_request.proto";
import public "v10/model/control_trade_settlement_procedure_response.proto";
import public "v10/model/exchange_trade_settlement_procedure_request.proto";
import public "v10/model/exchange_trade_settlement_procedure_response.proto";
import public "v10/model/execute_trade_settlement_procedure_request.proto";
import public "v10/model/execute_trade_settlement_procedure_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_trade_settlement_procedure_request.proto";
import public "v10/model/initiate_trade_settlement_procedure_response.proto";
import public "v10/model/notify_trade_settlement_procedure_response.proto";
import public "v10/model/request_trade_settlement_procedure_request.proto";
import public "v10/model/request_trade_settlement_procedure_response.proto";
import public "v10/model/retrieve_trade_settlement_procedure_response.proto";
import public "v10/model/update_trade_settlement_procedure_request.proto";
import public "v10/model/update_trade_settlement_procedure_response.proto";

service CRTradeSettlementProcedureService {
  rpc Control (ControlRequest) returns (ControlTradeSettlementProcedureResponse);

  rpc Exchange (ExchangeRequest) returns (ExchangeTradeSettlementProcedureResponse);

  rpc Execute (ExecuteRequest) returns (ExecuteTradeSettlementProcedureResponse);

  rpc Initiate (InitiateRequest) returns (InitiateTradeSettlementProcedureResponse);

  rpc Notify (NotifyRequest) returns (NotifyTradeSettlementProcedureResponse);

  rpc Request (RequestRequest) returns (RequestTradeSettlementProcedureResponse);

  rpc Retrieve (RetrieveRequest) returns (RetrieveTradeSettlementProcedureResponse);

  rpc Update (UpdateRequest) returns (UpdateTradeSettlementProcedureResponse);

}

message ControlRequest {
  string tradesettlementId = 1;
  ControlTradeSettlementProcedureRequest controlTradeSettlementProcedureRequest = 2;

}

message ExchangeRequest {
  string tradesettlementId = 1;
  ExchangeTradeSettlementProcedureRequest exchangeTradeSettlementProcedureRequest = 2;

}

message ExecuteRequest {
  string tradesettlementId = 1;
  ExecuteTradeSettlementProcedureRequest executeTradeSettlementProcedureRequest = 2;

}

message InitiateRequest {
  InitiateTradeSettlementProcedureRequest initiateTradeSettlementProcedureRequest = 1;

}

message NotifyRequest {
  string tradesettlementId = 1;

}

message RequestRequest {
  string tradesettlementId = 1;
  RequestTradeSettlementProcedureRequest requestTradeSettlementProcedureRequest = 2;

}

message RetrieveRequest {
  string tradesettlementId = 1;

}

message UpdateRequest {
  string tradesettlementId = 1;
  UpdateTradeSettlementProcedureRequest updateTradeSettlementProcedureRequest = 2;

}

