/*
  Correspondent Bank Relationship Management

  This Service Domain manages correspondent bank relations, ensuring reciprocity and developing business where possible

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.correspondentbankrelationshipmanagement.v10.api.bqrelationshipreciprocityassessmentdutyservice;

import "google/protobuf/empty.proto";
import public "v10/model/http_error.proto";
import public "v10/model/relationship_reciprocity_assessment_duty.proto";

service BQRelationshipReciprocityAssessmentDutyService {
  rpc ExchangeRelationshipReciprocityAssessmentDuty (ExchangeRelationshipReciprocityAssessmentDutyRequest) returns (RelationshipReciprocityAssessmentDuty);

  rpc GrantRelationshipReciprocityAssessmentDuty (GrantRelationshipReciprocityAssessmentDutyRequest) returns (RelationshipReciprocityAssessmentDuty);

  rpc NotifyRelationshipReciprocityAssessmentDuty (NotifyRelationshipReciprocityAssessmentDutyRequest) returns (RelationshipReciprocityAssessmentDuty);

  rpc RequestRelationshipReciprocityAssessmentDuty (RequestRelationshipReciprocityAssessmentDutyRequest) returns (RelationshipReciprocityAssessmentDuty);

  rpc RetrieveRelationshipReciprocityAssessmentDuty (RetrieveRelationshipReciprocityAssessmentDutyRequest) returns (RelationshipReciprocityAssessmentDuty);

  rpc UpdateRelationshipReciprocityAssessmentDuty (UpdateRelationshipReciprocityAssessmentDutyRequest) returns (RelationshipReciprocityAssessmentDuty);

}

message ExchangeRelationshipReciprocityAssessmentDutyRequest {
  string correspondentbankrelationshipmanagementId = 1;
  string relationshipreciprocityassessmentdutyId = 2;
  RelationshipReciprocityAssessmentDuty relationshipReciprocityAssessmentDuty = 3;

}

message GrantRelationshipReciprocityAssessmentDutyRequest {
  string correspondentbankrelationshipmanagementId = 1;
  string relationshipreciprocityassessmentdutyId = 2;
  RelationshipReciprocityAssessmentDuty relationshipReciprocityAssessmentDuty = 3;

}

message NotifyRelationshipReciprocityAssessmentDutyRequest {
  string correspondentbankrelationshipmanagementId = 1;
  string relationshipreciprocityassessmentdutyId = 2;

}

message RequestRelationshipReciprocityAssessmentDutyRequest {
  string correspondentbankrelationshipmanagementId = 1;
  string relationshipreciprocityassessmentdutyId = 2;
  RelationshipReciprocityAssessmentDuty relationshipReciprocityAssessmentDuty = 3;

}

message RetrieveRelationshipReciprocityAssessmentDutyRequest {
  string correspondentbankrelationshipmanagementId = 1;
  string relationshipreciprocityassessmentdutyId = 2;

}

message UpdateRelationshipReciprocityAssessmentDutyRequest {
  string correspondentbankrelationshipmanagementId = 1;
  string relationshipreciprocityassessmentdutyId = 2;
  RelationshipReciprocityAssessmentDuty relationshipReciprocityAssessmentDuty = 3;

}

