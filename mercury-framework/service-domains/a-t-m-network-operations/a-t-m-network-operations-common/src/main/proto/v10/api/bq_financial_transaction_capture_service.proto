/*
  ATM Network Operations

  Handling the automated operation of the ATM network and linked devices, including tracing physical cash and document movements

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.atmnetworkoperations.v10.api.bqfinancialtransactioncaptureservice;

import "google/protobuf/empty.proto";
import public "v10/model/financial_transaction_capture.proto";
import public "v10/model/http_error.proto";

service BQFinancialTransactionCaptureService {
  rpc ExchangeFinancialTransactionCapture (ExchangeFinancialTransactionCaptureRequest) returns (FinancialTransactionCapture);

  rpc ExecuteFinancialTransactionCapture (ExecuteFinancialTransactionCaptureRequest) returns (FinancialTransactionCapture);

  rpc InitiateFinancialTransactionCapture (InitiateFinancialTransactionCaptureRequest) returns (FinancialTransactionCapture);

  rpc RetrieveFinancialTransactionCapture (RetrieveFinancialTransactionCaptureRequest) returns (FinancialTransactionCapture);

  rpc UpdateFinancialTransactionCapture (UpdateFinancialTransactionCaptureRequest) returns (FinancialTransactionCapture);

}

message ExchangeFinancialTransactionCaptureRequest {
  string atmnetworkoperationsId = 1;
  string financialtransactioncaptureId = 2;
  FinancialTransactionCapture financialTransactionCapture = 3;

}

message ExecuteFinancialTransactionCaptureRequest {
  string atmnetworkoperationsId = 1;
  string financialtransactioncaptureId = 2;
  FinancialTransactionCapture financialTransactionCapture = 3;

}

message InitiateFinancialTransactionCaptureRequest {
  string atmnetworkoperationsId = 1;
  FinancialTransactionCapture financialTransactionCapture = 2;

}

message RetrieveFinancialTransactionCaptureRequest {
  string atmnetworkoperationsId = 1;
  string financialtransactioncaptureId = 2;

}

message UpdateFinancialTransactionCaptureRequest {
  string atmnetworkoperationsId = 1;
  string financialtransactioncaptureId = 2;
  FinancialTransactionCapture financialTransactionCapture = 3;

}

