/*
  Market Order Execution

  The Market Order Execution Service Domain is responsible for the booking of securities transactions (e.g. resulting from market orders or some types of corporate actions) on investment accounts, so in terms of security name plus quantity.

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.marketorderexecution.v10.api.crmarkettradetransactionservice;

import "google/protobuf/empty.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_market_trade_transaction_request.proto";
import public "v10/model/initiate_market_trade_transaction_response.proto";
import public "v10/model/request_market_trade_transaction_request.proto";
import public "v10/model/request_market_trade_transaction_response.proto";
import public "v10/model/retrieve_market_trade_transaction_response.proto";
import public "v10/model/update_market_trade_transaction_request.proto";
import public "v10/model/update_market_trade_transaction_response.proto";

service CRMarketTradeTransactionService {
  rpc Initiate (InitiateRequest) returns (InitiateMarketTradeTransactionResponse);

  rpc Request (RequestRequest) returns (RequestMarketTradeTransactionResponse);

  rpc Retrieve (RetrieveRequest) returns (RetrieveMarketTradeTransactionResponse);

  rpc Update (UpdateRequest) returns (UpdateMarketTradeTransactionResponse);

}

message InitiateRequest {
  InitiateMarketTradeTransactionRequest initiateMarketTradeTransactionRequest = 1;

}

message RequestRequest {
  string marketorderexecutionId = 1;
  RequestMarketTradeTransactionRequest requestMarketTradeTransactionRequest = 2;

}

message RetrieveRequest {
  string marketorderexecutionId = 1;

}

message UpdateRequest {
  string marketorderexecutionId = 1;
  UpdateMarketTradeTransactionRequest updateMarketTradeTransactionRequest = 2;

}

