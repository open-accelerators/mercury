/*
  Issued Device Administration

  This service domain administers the issuance of authentication tokens to customers and third party service providers. Tokens here include physical devices such as cards, fobs, readers and intangible 'devices' such as passwords and secret questions. Administration includes version tracking, replacement and duration/frequency limits. Specific product/service access permissions may be associated with an issued token when appropriate

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.issueddeviceadministration.v10.api.bqreaderassignmentservice;

import "google/protobuf/empty.proto";
import public "v10/model/capture_reader_assignment_request.proto";
import public "v10/model/capture_reader_assignment_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/retrieve_reader_assignment_response.proto";
import public "v10/model/update_reader_assignment_request.proto";
import public "v10/model/update_reader_assignment_response.proto";

service BQReaderAssignmentService {
  rpc CaptureReaderAssignment (CaptureReaderAssignmentRequest) returns (CaptureReaderAssignmentResponse);

  rpc RetrieveReaderAssignment (RetrieveReaderAssignmentRequest) returns (RetrieveReaderAssignmentResponse);

  rpc UpdateReaderAssignment (UpdateReaderAssignmentRequest) returns (UpdateReaderAssignmentResponse);

}

message CaptureReaderAssignmentRequest {
  string issueddeviceadministrationId = 1;
  string readerassignmentId = 2;
  CaptureReaderAssignmentRequest captureReaderAssignmentRequest = 3;

}

message RetrieveReaderAssignmentRequest {
  string issueddeviceadministrationId = 1;
  string readerassignmentId = 2;

}

message UpdateReaderAssignmentRequest {
  string issueddeviceadministrationId = 1;
  string readerassignmentId = 2;
  UpdateReaderAssignmentRequest updateReaderAssignmentRequest = 3;

}

