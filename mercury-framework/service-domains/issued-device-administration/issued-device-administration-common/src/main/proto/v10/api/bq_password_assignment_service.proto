/*
  Issued Device Administration

  This service domain administers the issuance of authentication tokens to customers and third party service providers. Tokens here include physical devices such as cards, fobs, readers and intangible 'devices' such as passwords and secret questions. Administration includes version tracking, replacement and duration/frequency limits. Specific product/service access permissions may be associated with an issued token when appropriate

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.issueddeviceadministration.v10.api.bqpasswordassignmentservice;

import "google/protobuf/empty.proto";
import public "v10/model/capture_password_assignment_request.proto";
import public "v10/model/capture_password_assignment_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_password_assignment_request.proto";
import public "v10/model/initiate_password_assignment_response.proto";
import public "v10/model/issued_device_allocation.proto";
import public "v10/model/update_password_assignment_request.proto";
import public "v10/model/update_password_assignment_response.proto";

service BQPasswordAssignmentService {
  rpc CapturePasswordAssignment (CapturePasswordAssignmentRequest) returns (CapturePasswordAssignmentResponse);

  rpc InitiatePasswordAssignment (InitiatePasswordAssignmentRequest) returns (InitiatePasswordAssignmentResponse);

  rpc RetrievePasswordAssignment (RetrievePasswordAssignmentRequest) returns (IssuedDeviceAllocation);

  rpc UpdatePasswordAssignment (UpdatePasswordAssignmentRequest) returns (UpdatePasswordAssignmentResponse);

}

message CapturePasswordAssignmentRequest {
  string issueddeviceadministrationId = 1;
  string passwordassignmentId = 2;
  CapturePasswordAssignmentRequest capturePasswordAssignmentRequest = 3;

}

message InitiatePasswordAssignmentRequest {
  string issueddeviceadministrationId = 1;
  InitiatePasswordAssignmentRequest initiatePasswordAssignmentRequest = 2;

}

message RetrievePasswordAssignmentRequest {
  string issueddeviceadministrationId = 1;
  string passwordassignmentId = 2;

}

message UpdatePasswordAssignmentRequest {
  string issueddeviceadministrationId = 1;
  string passwordassignmentId = 2;
  UpdatePasswordAssignmentRequest updatePasswordAssignmentRequest = 3;

}

