/*
  Collections

  Handles the liquidation of assets to offset the losses for problem accounts

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.collections.v10.api.crcollateralassetliquidationprocedureservice;

import "google/protobuf/empty.proto";
import public "v10/model/control_collateral_asset_liquidation_procedure_request.proto";
import public "v10/model/control_collateral_asset_liquidation_procedure_response.proto";
import public "v10/model/exchange_collateral_asset_liquidation_procedure_request.proto";
import public "v10/model/exchange_collateral_asset_liquidation_procedure_response.proto";
import public "v10/model/execute_collateral_asset_liquidation_procedure_request.proto";
import public "v10/model/execute_collateral_asset_liquidation_procedure_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_collateral_asset_liquidation_procedure_request.proto";
import public "v10/model/initiate_collateral_asset_liquidation_procedure_response.proto";
import public "v10/model/request_collateral_asset_liquidation_procedure_request.proto";
import public "v10/model/request_collateral_asset_liquidation_procedure_response.proto";
import public "v10/model/retrieve_collateral_asset_liquidation_procedure_response.proto";
import public "v10/model/update_collateral_asset_liquidation_procedure_request.proto";
import public "v10/model/update_collateral_asset_liquidation_procedure_response.proto";

service CRCollateralAssetLiquidationProcedureService {
  rpc Control (ControlRequest) returns (ControlCollateralAssetLiquidationProcedureResponse);

  rpc Exchange (ExchangeRequest) returns (ExchangeCollateralAssetLiquidationProcedureResponse);

  rpc Execute (ExecuteRequest) returns (ExecuteCollateralAssetLiquidationProcedureResponse);

  rpc Initiate (InitiateRequest) returns (InitiateCollateralAssetLiquidationProcedureResponse);

  rpc Request (RequestRequest) returns (RequestCollateralAssetLiquidationProcedureResponse);

  rpc Retrieve (RetrieveRequest) returns (RetrieveCollateralAssetLiquidationProcedureResponse);

  rpc Update (UpdateRequest) returns (UpdateCollateralAssetLiquidationProcedureResponse);

}

message ControlRequest {
  string collectionsId = 1;
  ControlCollateralAssetLiquidationProcedureRequest controlCollateralAssetLiquidationProcedureRequest = 2;

}

message ExchangeRequest {
  string collectionsId = 1;
  ExchangeCollateralAssetLiquidationProcedureRequest exchangeCollateralAssetLiquidationProcedureRequest = 2;

}

message ExecuteRequest {
  string collectionsId = 1;
  ExecuteCollateralAssetLiquidationProcedureRequest executeCollateralAssetLiquidationProcedureRequest = 2;

}

message InitiateRequest {
  InitiateCollateralAssetLiquidationProcedureRequest initiateCollateralAssetLiquidationProcedureRequest = 1;

}

message RequestRequest {
  string collectionsId = 1;
  RequestCollateralAssetLiquidationProcedureRequest requestCollateralAssetLiquidationProcedureRequest = 2;

}

message RetrieveRequest {
  string collectionsId = 1;

}

message UpdateRequest {
  string collectionsId = 1;
  UpdateCollateralAssetLiquidationProcedureRequest updateCollateralAssetLiquidationProcedureRequest = 2;

}

