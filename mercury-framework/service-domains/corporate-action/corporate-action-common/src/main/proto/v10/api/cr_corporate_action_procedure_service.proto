/*
  Corporate Action

  This Service Domain supports the various custodial tasks associated with processing associated corporate actions for customer's with securities held at the bank

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.corporateaction.v10.api.crcorporateactionprocedureservice;

import "google/protobuf/empty.proto";
import public "v10/model/control_corporate_action_procedure_request.proto";
import public "v10/model/control_corporate_action_procedure_response.proto";
import public "v10/model/exchange_corporate_action_procedure_request.proto";
import public "v10/model/exchange_corporate_action_procedure_response.proto";
import public "v10/model/execute_corporate_action_procedure_request.proto";
import public "v10/model/execute_corporate_action_procedure_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_corporate_action_procedure_request.proto";
import public "v10/model/initiate_corporate_action_procedure_response.proto";
import public "v10/model/notify_corporate_action_procedure_response.proto";
import public "v10/model/request_corporate_action_procedure_request.proto";
import public "v10/model/request_corporate_action_procedure_response.proto";
import public "v10/model/retrieve_corporate_action_procedure_response.proto";
import public "v10/model/update_corporate_action_procedure_request.proto";
import public "v10/model/update_corporate_action_procedure_response.proto";

service CRCorporateActionProcedureService {
  rpc Control (ControlRequest) returns (ControlCorporateActionProcedureResponse);

  rpc Exchange (ExchangeRequest) returns (ExchangeCorporateActionProcedureResponse);

  rpc Execute (ExecuteRequest) returns (ExecuteCorporateActionProcedureResponse);

  rpc Initiate (InitiateRequest) returns (InitiateCorporateActionProcedureResponse);

  rpc Notify (NotifyRequest) returns (NotifyCorporateActionProcedureResponse);

  rpc Request (RequestRequest) returns (RequestCorporateActionProcedureResponse);

  rpc Retrieve (RetrieveRequest) returns (RetrieveCorporateActionProcedureResponse);

  rpc Update (UpdateRequest) returns (UpdateCorporateActionProcedureResponse);

}

message ControlRequest {
  string corporateactionId = 1;
  ControlCorporateActionProcedureRequest controlCorporateActionProcedureRequest = 2;

}

message ExchangeRequest {
  string corporateactionId = 1;
  ExchangeCorporateActionProcedureRequest exchangeCorporateActionProcedureRequest = 2;

}

message ExecuteRequest {
  string corporateactionId = 1;
  ExecuteCorporateActionProcedureRequest executeCorporateActionProcedureRequest = 2;

}

message InitiateRequest {
  InitiateCorporateActionProcedureRequest initiateCorporateActionProcedureRequest = 1;

}

message NotifyRequest {
  string corporateactionId = 1;

}

message RequestRequest {
  string corporateactionId = 1;
  RequestCorporateActionProcedureRequest requestCorporateActionProcedureRequest = 2;

}

message RetrieveRequest {
  string corporateactionId = 1;

}

message UpdateRequest {
  string corporateactionId = 1;
  UpdateCorporateActionProcedureRequest updateCorporateActionProcedureRequest = 2;

}

