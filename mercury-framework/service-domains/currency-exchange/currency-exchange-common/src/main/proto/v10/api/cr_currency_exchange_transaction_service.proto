/*
  Currency Exchange

  Service Domain supports over the counter currency exchange

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.currencyexchange.v10.api.crcurrencyexchangetransactionservice;

import "google/protobuf/empty.proto";
import public "v10/model/control_currency_exchange_transaction_request.proto";
import public "v10/model/control_currency_exchange_transaction_response.proto";
import public "v10/model/exchange_currency_exchange_transaction_request.proto";
import public "v10/model/exchange_currency_exchange_transaction_response.proto";
import public "v10/model/execute_currency_exchange_transaction_request.proto";
import public "v10/model/execute_currency_exchange_transaction_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_currency_exchange_transaction_request.proto";
import public "v10/model/initiate_currency_exchange_transaction_response.proto";
import public "v10/model/request_currency_exchange_transaction_request.proto";
import public "v10/model/request_currency_exchange_transaction_response.proto";
import public "v10/model/retrieve_currency_exchange_transaction_response.proto";
import public "v10/model/update_currency_exchange_transaction_request.proto";
import public "v10/model/update_currency_exchange_transaction_response.proto";

service CRCurrencyExchangeTransactionService {
  rpc Control (ControlRequest) returns (ControlCurrencyExchangeTransactionResponse);

  rpc Exchange (ExchangeRequest) returns (ExchangeCurrencyExchangeTransactionResponse);

  rpc Execute (ExecuteRequest) returns (ExecuteCurrencyExchangeTransactionResponse);

  rpc Initiate (InitiateRequest) returns (InitiateCurrencyExchangeTransactionResponse);

  rpc Request (RequestRequest) returns (RequestCurrencyExchangeTransactionResponse);

  rpc Retrieve (RetrieveRequest) returns (RetrieveCurrencyExchangeTransactionResponse);

  rpc Update (UpdateRequest) returns (UpdateCurrencyExchangeTransactionResponse);

}

message ControlRequest {
  string currencyexchangeId = 1;
  ControlCurrencyExchangeTransactionRequest controlCurrencyExchangeTransactionRequest = 2;

}

message ExchangeRequest {
  string currencyexchangeId = 1;
  ExchangeCurrencyExchangeTransactionRequest exchangeCurrencyExchangeTransactionRequest = 2;

}

message ExecuteRequest {
  string currencyexchangeId = 1;
  ExecuteCurrencyExchangeTransactionRequest executeCurrencyExchangeTransactionRequest = 2;

}

message InitiateRequest {
  InitiateCurrencyExchangeTransactionRequest initiateCurrencyExchangeTransactionRequest = 1;

}

message RequestRequest {
  string currencyexchangeId = 1;
  RequestCurrencyExchangeTransactionRequest requestCurrencyExchangeTransactionRequest = 2;

}

message RetrieveRequest {
  string currencyexchangeId = 1;

}

message UpdateRequest {
  string currencyexchangeId = 1;
  UpdateCurrencyExchangeTransactionRequest updateCurrencyExchangeTransactionRequest = 2;

}

