/*
  Counterparty Administration

  This Service Domain maintains key counterparty reference information used in the clearing and settlement of wholesale trading

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.counterpartyadministration.v10.api.bqcounterpartypermittedtransactionpropertyservice;

import "google/protobuf/empty.proto";
import public "v10/model/counterparty_permitted_transactionproperty.proto";
import public "v10/model/http_error.proto";

service BQCounterpartyPermittedTransactionpropertyService {
  rpc ExecuteCounterpartyPermittedTransactionproperty (ExecuteCounterpartyPermittedTransactionpropertyRequest) returns (CounterpartyPermittedTransactionproperty);

  rpc NotifyCounterpartyPermittedTransactionproperty (NotifyCounterpartyPermittedTransactionpropertyRequest) returns (CounterpartyPermittedTransactionproperty);

  rpc RegisterCounterpartyPermittedTransactionproperty (RegisterCounterpartyPermittedTransactionpropertyRequest) returns (CounterpartyPermittedTransactionproperty);

  rpc RequestCounterpartyPermittedTransactionproperty (RequestCounterpartyPermittedTransactionpropertyRequest) returns (CounterpartyPermittedTransactionproperty);

  rpc RetrieveCounterpartyPermittedTransactionproperty (RetrieveCounterpartyPermittedTransactionpropertyRequest) returns (CounterpartyPermittedTransactionproperty);

  rpc UpdateCounterpartyPermittedTransactionproperty (UpdateCounterpartyPermittedTransactionpropertyRequest) returns (CounterpartyPermittedTransactionproperty);

}

message ExecuteCounterpartyPermittedTransactionpropertyRequest {
  string counterpartyadministrationId = 1;
  string counterpartypermittedtransactionpropertyId = 2;
  CounterpartyPermittedTransactionproperty counterpartyPermittedTransactionproperty = 3;

}

message NotifyCounterpartyPermittedTransactionpropertyRequest {
  string counterpartyadministrationId = 1;
  string counterpartypermittedtransactionpropertyId = 2;

}

message RegisterCounterpartyPermittedTransactionpropertyRequest {
  string counterpartyadministrationId = 1;
  CounterpartyPermittedTransactionproperty counterpartyPermittedTransactionproperty = 2;

}

message RequestCounterpartyPermittedTransactionpropertyRequest {
  string counterpartyadministrationId = 1;
  string counterpartypermittedtransactionpropertyId = 2;
  CounterpartyPermittedTransactionproperty counterpartyPermittedTransactionproperty = 3;

}

message RetrieveCounterpartyPermittedTransactionpropertyRequest {
  string counterpartyadministrationId = 1;
  string counterpartypermittedtransactionpropertyId = 2;

}

message UpdateCounterpartyPermittedTransactionpropertyRequest {
  string counterpartyadministrationId = 1;
  string counterpartypermittedtransactionpropertyId = 2;
  CounterpartyPermittedTransactionproperty counterpartyPermittedTransactionproperty = 3;

}

