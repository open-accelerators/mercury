/*
  Counterparty Administration

  This Service Domain maintains key counterparty reference information used in the clearing and settlement of wholesale trading

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.counterpartyadministration.v10.api.bqcounterpartyentityreferencepropertyservice;

import "google/protobuf/empty.proto";
import public "v10/model/counterparty_entity_referenceproperty.proto";
import public "v10/model/http_error.proto";

service BQCounterpartyEntityReferencepropertyService {
  rpc ExecuteCounterpartyEntityReferenceproperty (ExecuteCounterpartyEntityReferencepropertyRequest) returns (CounterpartyEntityReferenceproperty);

  rpc NotifyCounterpartyEntityReferenceproperty (NotifyCounterpartyEntityReferencepropertyRequest) returns (CounterpartyEntityReferenceproperty);

  rpc RegisterCounterpartyEntityReferenceproperty (RegisterCounterpartyEntityReferencepropertyRequest) returns (CounterpartyEntityReferenceproperty);

  rpc RequestCounterpartyEntityReferenceproperty (RequestCounterpartyEntityReferencepropertyRequest) returns (CounterpartyEntityReferenceproperty);

  rpc RetrieveCounterpartyEntityReferenceproperty (RetrieveCounterpartyEntityReferencepropertyRequest) returns (CounterpartyEntityReferenceproperty);

  rpc UpdateCounterpartyEntityReferenceproperty (UpdateCounterpartyEntityReferencepropertyRequest) returns (CounterpartyEntityReferenceproperty);

}

message ExecuteCounterpartyEntityReferencepropertyRequest {
  string counterpartyadministrationId = 1;
  string counterpartyentityreferencepropertyId = 2;
  CounterpartyEntityReferenceproperty counterpartyEntityReferenceproperty = 3;

}

message NotifyCounterpartyEntityReferencepropertyRequest {
  string counterpartyadministrationId = 1;
  string counterpartyentityreferencepropertyId = 2;

}

message RegisterCounterpartyEntityReferencepropertyRequest {
  string counterpartyadministrationId = 1;
  CounterpartyEntityReferenceproperty counterpartyEntityReferenceproperty = 2;

}

message RequestCounterpartyEntityReferencepropertyRequest {
  string counterpartyadministrationId = 1;
  string counterpartyentityreferencepropertyId = 2;
  CounterpartyEntityReferenceproperty counterpartyEntityReferenceproperty = 3;

}

message RetrieveCounterpartyEntityReferencepropertyRequest {
  string counterpartyadministrationId = 1;
  string counterpartyentityreferencepropertyId = 2;

}

message UpdateCounterpartyEntityReferencepropertyRequest {
  string counterpartyadministrationId = 1;
  string counterpartyentityreferencepropertyId = 2;
  CounterpartyEntityReferenceproperty counterpartyEntityReferenceproperty = 3;

}

