/*
  Point of Service

  This service domain operates servicing positions within the bank. It administers all media connections, inventory holdings (e.g. cash), provides access to support utilities and tracks servicing activity -e.g. time spent, activity logs, capturing servicing events including commission and training related actions. In cases servicing positions can be automated

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.pointofservice.v10.api.crpointofserviceoperatingsessionservice;

import "google/protobuf/empty.proto";
import public "v10/model/execute_pointof_service_operating_session_request.proto";
import public "v10/model/execute_pointof_service_operating_session_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_pointof_service_operating_session_request.proto";
import public "v10/model/initiate_pointof_service_operating_session_response.proto";
import public "v10/model/request_pointof_service_operating_session_request.proto";
import public "v10/model/request_pointof_service_operating_session_response.proto";
import public "v10/model/retrieve_pointof_service_operating_session_response.proto";
import public "v10/model/update_pointof_service_operating_session_request.proto";
import public "v10/model/update_pointof_service_operating_session_response.proto";

service CRPointofServiceOperatingSessionService {
  rpc Execute (ExecuteRequest) returns (ExecutePointofServiceOperatingSessionResponse);

  rpc Initiate (InitiateRequest) returns (InitiatePointofServiceOperatingSessionResponse);

  rpc Request (RequestRequest) returns (RequestPointofServiceOperatingSessionResponse);

  rpc Retrieve (RetrieveRequest) returns (RetrievePointofServiceOperatingSessionResponse);

  rpc Update (UpdateRequest) returns (UpdatePointofServiceOperatingSessionResponse);

}

message ExecuteRequest {
  string pointofserviceId = 1;
  ExecutePointofServiceOperatingSessionRequest executePointofServiceOperatingSessionRequest = 2;

}

message InitiateRequest {
  InitiatePointofServiceOperatingSessionRequest initiatePointofServiceOperatingSessionRequest = 1;

}

message RequestRequest {
  string pointofserviceId = 1;
  RequestPointofServiceOperatingSessionRequest requestPointofServiceOperatingSessionRequest = 2;

}

message RetrieveRequest {
  string pointofserviceId = 1;

}

message UpdateRequest {
  string pointofserviceId = 1;
  UpdatePointofServiceOperatingSessionRequest updatePointofServiceOperatingSessionRequest = 2;

}

