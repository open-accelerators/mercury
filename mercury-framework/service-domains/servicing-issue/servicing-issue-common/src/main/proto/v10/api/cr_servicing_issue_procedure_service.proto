/*
  Servicing Issue

  This Service Domain handles production customer servicing issues detected in the customer servicing environment

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.servicingissue.v10.api.crservicingissueprocedureservice;

import "google/protobuf/empty.proto";
import public "v10/model/control_servicing_issue_procedure_request.proto";
import public "v10/model/control_servicing_issue_procedure_response.proto";
import public "v10/model/exchange_servicing_issue_procedure_request.proto";
import public "v10/model/exchange_servicing_issue_procedure_response.proto";
import public "v10/model/execute_servicing_issue_procedure_request.proto";
import public "v10/model/execute_servicing_issue_procedure_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_servicing_issue_procedure_request.proto";
import public "v10/model/initiate_servicing_issue_procedure_response.proto";
import public "v10/model/notify_servicing_issue_procedure_response.proto";
import public "v10/model/request_servicing_issue_procedure_request.proto";
import public "v10/model/request_servicing_issue_procedure_response.proto";
import public "v10/model/retrieve_servicing_issue_procedure_response.proto";
import public "v10/model/update_servicing_issue_procedure_request.proto";
import public "v10/model/update_servicing_issue_procedure_response.proto";

service CRServicingIssueProcedureService {
  rpc Control (ControlRequest) returns (ControlServicingIssueProcedureResponse);

  rpc Exchange (ExchangeRequest) returns (ExchangeServicingIssueProcedureResponse);

  rpc Execute (ExecuteRequest) returns (ExecuteServicingIssueProcedureResponse);

  rpc Initiate (InitiateRequest) returns (InitiateServicingIssueProcedureResponse);

  rpc Notify (NotifyRequest) returns (NotifyServicingIssueProcedureResponse);

  rpc Request (RequestRequest) returns (RequestServicingIssueProcedureResponse);

  rpc Retrieve (RetrieveRequest) returns (RetrieveServicingIssueProcedureResponse);

  rpc Update (UpdateRequest) returns (UpdateServicingIssueProcedureResponse);

}

message ControlRequest {
  string servicingissueId = 1;
  ControlServicingIssueProcedureRequest controlServicingIssueProcedureRequest = 2;

}

message ExchangeRequest {
  string servicingissueId = 1;
  ExchangeServicingIssueProcedureRequest exchangeServicingIssueProcedureRequest = 2;

}

message ExecuteRequest {
  string servicingissueId = 1;
  ExecuteServicingIssueProcedureRequest executeServicingIssueProcedureRequest = 2;

}

message InitiateRequest {
  InitiateServicingIssueProcedureRequest initiateServicingIssueProcedureRequest = 1;

}

message NotifyRequest {
  string servicingissueId = 1;

}

message RequestRequest {
  string servicingissueId = 1;
  RequestServicingIssueProcedureRequest requestServicingIssueProcedureRequest = 2;

}

message RetrieveRequest {
  string servicingissueId = 1;

}

message UpdateRequest {
  string servicingissueId = 1;
  UpdateServicingIssueProcedureRequest updateServicingIssueProcedureRequest = 2;

}

