/*
  Corporate Payroll Services

  The Corporate Payroll Services Service Domain handles payroll payment processing for the employees of a corporate customer.

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.corporatepayrollservices.v10.api.bqproductionservicereportingfulfillmentservice;

import "google/protobuf/empty.proto";
import public "v10/model/http_error.proto";
import public "v10/model/production_service_reporting_fulfillment.proto";

service BQProductionServiceReportingFulfillmentService {
  rpc ExchangeProductionServiceReportingFulfillment (ExchangeProductionServiceReportingFulfillmentRequest) returns (ProductionServiceReportingFulfillment);

  rpc ExecuteProductionServiceReportingFulfillment (ExecuteProductionServiceReportingFulfillmentRequest) returns (ProductionServiceReportingFulfillment);

  rpc InitiateProductionServiceReportingFulfillment (InitiateProductionServiceReportingFulfillmentRequest) returns (ProductionServiceReportingFulfillment);

  rpc NotifyProductionServiceReportingFulfillment (NotifyProductionServiceReportingFulfillmentRequest) returns (ProductionServiceReportingFulfillment);

  rpc RequestProductionServiceReportingFulfillment (RequestProductionServiceReportingFulfillmentRequest) returns (ProductionServiceReportingFulfillment);

  rpc RetrieveProductionServiceReportingFulfillment (RetrieveProductionServiceReportingFulfillmentRequest) returns (ProductionServiceReportingFulfillment);

  rpc UpdateProductionServiceReportingFulfillment (UpdateProductionServiceReportingFulfillmentRequest) returns (ProductionServiceReportingFulfillment);

}

message ExchangeProductionServiceReportingFulfillmentRequest {
  string corporatepayrollservicesId = 1;
  string productionservicereportingfulfillmentId = 2;
  ProductionServiceReportingFulfillment productionServiceReportingFulfillment = 3;

}

message ExecuteProductionServiceReportingFulfillmentRequest {
  string corporatepayrollservicesId = 1;
  string productionservicereportingfulfillmentId = 2;
  ProductionServiceReportingFulfillment productionServiceReportingFulfillment = 3;

}

message InitiateProductionServiceReportingFulfillmentRequest {
  string corporatepayrollservicesId = 1;
  ProductionServiceReportingFulfillment productionServiceReportingFulfillment = 2;

}

message NotifyProductionServiceReportingFulfillmentRequest {
  string corporatepayrollservicesId = 1;
  string productionservicereportingfulfillmentId = 2;

}

message RequestProductionServiceReportingFulfillmentRequest {
  string corporatepayrollservicesId = 1;
  string productionservicereportingfulfillmentId = 2;
  ProductionServiceReportingFulfillment productionServiceReportingFulfillment = 3;

}

message RetrieveProductionServiceReportingFulfillmentRequest {
  string corporatepayrollservicesId = 1;
  string productionservicereportingfulfillmentId = 2;

}

message UpdateProductionServiceReportingFulfillmentRequest {
  string corporatepayrollservicesId = 1;
  string productionservicereportingfulfillmentId = 2;
  ProductionServiceReportingFulfillment productionServiceReportingFulfillment = 3;

}

