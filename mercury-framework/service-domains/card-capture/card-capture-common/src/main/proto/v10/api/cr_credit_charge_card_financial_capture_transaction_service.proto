/*
  Card Capture

  A distributed facility to capture card transactions at the point of sale

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.cardcapture.v10.api.crcreditchargecardfinancialcapturetransactionservice;

import "google/protobuf/empty.proto";
import public "v10/model/control_credit_charge_card_financial_capture_transaction_request.proto";
import public "v10/model/control_credit_charge_card_financial_capture_transaction_response.proto";
import public "v10/model/exchange_credit_charge_card_financial_capture_transaction_request.proto";
import public "v10/model/exchange_credit_charge_card_financial_capture_transaction_response.proto";
import public "v10/model/execute_credit_charge_card_financial_capture_transaction_request.proto";
import public "v10/model/execute_credit_charge_card_financial_capture_transaction_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_credit_charge_card_financial_capture_transaction_request.proto";
import public "v10/model/initiate_credit_charge_card_financial_capture_transaction_response.proto";
import public "v10/model/request_credit_charge_card_financial_capture_transaction_request.proto";
import public "v10/model/request_credit_charge_card_financial_capture_transaction_response.proto";
import public "v10/model/retrieve_credit_charge_card_financial_capture_transaction_response.proto";
import public "v10/model/update_credit_charge_card_financial_capture_transaction_request.proto";
import public "v10/model/update_credit_charge_card_financial_capture_transaction_response.proto";

service CRCreditChargeCardFinancialCaptureTransactionService {
  rpc Control (ControlRequest) returns (ControlCreditChargeCardFinancialCaptureTransactionResponse);

  rpc Exchange (ExchangeRequest) returns (ExchangeCreditChargeCardFinancialCaptureTransactionResponse);

  rpc Execute (ExecuteRequest) returns (ExecuteCreditChargeCardFinancialCaptureTransactionResponse);

  rpc Initiate (InitiateRequest) returns (InitiateCreditChargeCardFinancialCaptureTransactionResponse);

  rpc Request (RequestRequest) returns (RequestCreditChargeCardFinancialCaptureTransactionResponse);

  rpc Retrieve (RetrieveRequest) returns (RetrieveCreditChargeCardFinancialCaptureTransactionResponse);

  rpc Update (UpdateRequest) returns (UpdateCreditChargeCardFinancialCaptureTransactionResponse);

}

message ControlRequest {
  string cardcaptureId = 1;
  ControlCreditChargeCardFinancialCaptureTransactionRequest controlCreditChargeCardFinancialCaptureTransactionRequest = 2;

}

message ExchangeRequest {
  string cardcaptureId = 1;
  ExchangeCreditChargeCardFinancialCaptureTransactionRequest exchangeCreditChargeCardFinancialCaptureTransactionRequest = 2;

}

message ExecuteRequest {
  string cardcaptureId = 1;
  ExecuteCreditChargeCardFinancialCaptureTransactionRequest executeCreditChargeCardFinancialCaptureTransactionRequest = 2;

}

message InitiateRequest {
  InitiateCreditChargeCardFinancialCaptureTransactionRequest initiateCreditChargeCardFinancialCaptureTransactionRequest = 1;

}

message RequestRequest {
  string cardcaptureId = 1;
  RequestCreditChargeCardFinancialCaptureTransactionRequest requestCreditChargeCardFinancialCaptureTransactionRequest = 2;

}

message RetrieveRequest {
  string cardcaptureId = 1;

}

message UpdateRequest {
  string cardcaptureId = 1;
  UpdateCreditChargeCardFinancialCaptureTransactionRequest updateCreditChargeCardFinancialCaptureTransactionRequest = 2;

}

