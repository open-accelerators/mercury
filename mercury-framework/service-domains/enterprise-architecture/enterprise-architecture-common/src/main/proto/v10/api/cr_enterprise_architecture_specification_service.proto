/*
  Enterprise Architecture

  Define and maintain comprehensive business architectural definitions/blueprints to help organize/direct the business

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.enterprisearchitecture.v10.api.crenterprisearchitecturespecificationservice;

import "google/protobuf/empty.proto";
import public "v10/model/capture_enterprise_architecture_specification_response.proto";
import public "v10/model/control_enterprise_architecture_specification_response.proto";
import public "v10/model/enterprise_architecture_specification.proto";
import public "v10/model/exchange_enterprise_architecture_specification_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_enterprise_architecture_specification_response.proto";
import public "v10/model/request_enterprise_architecture_specification_response.proto";
import public "v10/model/update_enterprise_architecture_specification_response.proto";

service CREnterpriseArchitectureSpecificationService {
  rpc Capture (CaptureRequest) returns (CaptureEnterpriseArchitectureSpecificationResponse);

  rpc Control (ControlRequest) returns (ControlEnterpriseArchitectureSpecificationResponse);

  rpc Exchange (ExchangeRequest) returns (ExchangeEnterpriseArchitectureSpecificationResponse);

  rpc Initiate (InitiateRequest) returns (InitiateEnterpriseArchitectureSpecificationResponse);

  rpc Request (RequestRequest) returns (RequestEnterpriseArchitectureSpecificationResponse);

  rpc Retrieve (RetrieveRequest) returns (EnterpriseArchitectureSpecification);

  rpc Update (UpdateRequest) returns (UpdateEnterpriseArchitectureSpecificationResponse);

}

message CaptureRequest {
  string enterprisearchitectureId = 1;
  EnterpriseArchitectureSpecification enterpriseArchitectureSpecification = 2;

}

message ControlRequest {
  string enterprisearchitectureId = 1;
  EnterpriseArchitectureSpecification enterpriseArchitectureSpecification = 2;

}

message ExchangeRequest {
  string enterprisearchitectureId = 1;
  EnterpriseArchitectureSpecification enterpriseArchitectureSpecification = 2;

}

message InitiateRequest {
  EnterpriseArchitectureSpecification enterpriseArchitectureSpecification = 1;

}

message RequestRequest {
  string enterprisearchitectureId = 1;
  EnterpriseArchitectureSpecification enterpriseArchitectureSpecification = 2;

}

message RetrieveRequest {
  string enterprisearchitectureId = 1;

}

message UpdateRequest {
  string enterprisearchitectureId = 1;
  EnterpriseArchitectureSpecification enterpriseArchitectureSpecification = 2;

}

