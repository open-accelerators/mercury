/*
  Product Combination

  Product Combination supports bundled products applying necessary constraints on embedded product fulfillment and ensuring product performance analysis takes correct account of embedded products' contribution

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.productcombination.v10.api.bqfulfillmentservice;

import "google/protobuf/empty.proto";
import public "v10/model/fulfillment.proto";
import public "v10/model/http_error.proto";

service BQFulfillmentService {
  rpc ControlFulfillment (ControlFulfillmentRequest) returns (Fulfillment);

  rpc ExchangeFulfillment (ExchangeFulfillmentRequest) returns (Fulfillment);

  rpc ExecuteFulfillment (ExecuteFulfillmentRequest) returns (Fulfillment);

  rpc InitiateFulfillment (InitiateFulfillmentRequest) returns (Fulfillment);

  rpc RequestFulfillment (RequestFulfillmentRequest) returns (Fulfillment);

  rpc RetrieveFulfillment (RetrieveFulfillmentRequest) returns (Fulfillment);

  rpc UpdateFulfillment (UpdateFulfillmentRequest) returns (Fulfillment);

}

message ControlFulfillmentRequest {
  string productcombinationId = 1;
  string fulfillmentId = 2;
  Fulfillment fulfillment = 3;

}

message ExchangeFulfillmentRequest {
  string productcombinationId = 1;
  string fulfillmentId = 2;
  Fulfillment fulfillment = 3;

}

message ExecuteFulfillmentRequest {
  string productcombinationId = 1;
  string fulfillmentId = 2;
  Fulfillment fulfillment = 3;

}

message InitiateFulfillmentRequest {
  string productcombinationId = 1;
  Fulfillment fulfillment = 2;

}

message RequestFulfillmentRequest {
  string productcombinationId = 1;
  string fulfillmentId = 2;
  Fulfillment fulfillment = 3;

}

message RetrieveFulfillmentRequest {
  string productcombinationId = 1;
  string fulfillmentId = 2;

}

message UpdateFulfillmentRequest {
  string productcombinationId = 1;
  string fulfillmentId = 2;
  Fulfillment fulfillment = 3;

}

