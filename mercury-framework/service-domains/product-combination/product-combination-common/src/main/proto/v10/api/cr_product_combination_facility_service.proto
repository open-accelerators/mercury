/*
  Product Combination

  Product Combination supports bundled products applying necessary constraints on embedded product fulfillment and ensuring product performance analysis takes correct account of embedded products' contribution

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.productcombination.v10.api.crproductcombinationfacilityservice;

import "google/protobuf/empty.proto";
import public "v10/model/control_product_combination_facility_response.proto";
import public "v10/model/exchange_product_combination_facility_response.proto";
import public "v10/model/execute_product_combination_facility_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_product_combination_facility_response.proto";
import public "v10/model/product_combination_facility.proto";
import public "v10/model/request_product_combination_facility_response.proto";
import public "v10/model/update_product_combination_facility_response.proto";

service CRProductCombinationFacilityService {
  rpc Control (ControlRequest) returns (ControlProductCombinationFacilityResponse);

  rpc Exchange (ExchangeRequest) returns (ExchangeProductCombinationFacilityResponse);

  rpc Execute (ExecuteRequest) returns (ExecuteProductCombinationFacilityResponse);

  rpc Initiate (InitiateRequest) returns (InitiateProductCombinationFacilityResponse);

  rpc Request (RequestRequest) returns (RequestProductCombinationFacilityResponse);

  rpc Retrieve (RetrieveRequest) returns (ProductCombinationFacility);

  rpc Update (UpdateRequest) returns (UpdateProductCombinationFacilityResponse);

}

message ControlRequest {
  string productcombinationId = 1;
  ProductCombinationFacility productCombinationFacility = 2;

}

message ExchangeRequest {
  string productcombinationId = 1;
  ProductCombinationFacility productCombinationFacility = 2;

}

message ExecuteRequest {
  string productcombinationId = 1;
  ProductCombinationFacility productCombinationFacility = 2;

}

message InitiateRequest {
  ProductCombinationFacility productCombinationFacility = 1;

}

message RequestRequest {
  string productcombinationId = 1;
  ProductCombinationFacility productCombinationFacility = 2;

}

message RetrieveRequest {
  string productcombinationId = 1;

}

message UpdateRequest {
  string productcombinationId = 1;
  ProductCombinationFacility productCombinationFacility = 2;

}

