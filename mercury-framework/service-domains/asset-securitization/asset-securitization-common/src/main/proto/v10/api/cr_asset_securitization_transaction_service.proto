/*
  Asset Securitization

  Determine and select assets for securitization as needed to maintain and optimize the Bank's portfolio. Administer the securitization process

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.assetsecuritization.v10.api.crassetsecuritizationtransactionservice;

import "google/protobuf/empty.proto";
import public "v10/model/control_asset_securitization_transaction_request.proto";
import public "v10/model/control_asset_securitization_transaction_response.proto";
import public "v10/model/exchange_asset_securitization_transaction_request.proto";
import public "v10/model/exchange_asset_securitization_transaction_response.proto";
import public "v10/model/execute_asset_securitization_transaction_request.proto";
import public "v10/model/execute_asset_securitization_transaction_response.proto";
import public "v10/model/http_error.proto";
import public "v10/model/initiate_asset_securitization_transaction_request.proto";
import public "v10/model/initiate_asset_securitization_transaction_response.proto";
import public "v10/model/request_asset_securitization_transaction_request.proto";
import public "v10/model/request_asset_securitization_transaction_response.proto";
import public "v10/model/retrieve_asset_securitization_transaction_response.proto";
import public "v10/model/update_asset_securitization_transaction_request.proto";
import public "v10/model/update_asset_securitization_transaction_response.proto";

service CRAssetSecuritizationTransactionService {
  rpc Control (ControlRequest) returns (ControlAssetSecuritizationTransactionResponse);

  rpc Exchange (ExchangeRequest) returns (ExchangeAssetSecuritizationTransactionResponse);

  rpc Execute (ExecuteRequest) returns (ExecuteAssetSecuritizationTransactionResponse);

  rpc Initiate (InitiateRequest) returns (InitiateAssetSecuritizationTransactionResponse);

  rpc Request (RequestRequest) returns (RequestAssetSecuritizationTransactionResponse);

  rpc Retrieve (RetrieveRequest) returns (RetrieveAssetSecuritizationTransactionResponse);

  rpc Update (UpdateRequest) returns (UpdateAssetSecuritizationTransactionResponse);

}

message ControlRequest {
  string assetsecuritizationId = 1;
  ControlAssetSecuritizationTransactionRequest controlAssetSecuritizationTransactionRequest = 2;

}

message ExchangeRequest {
  string assetsecuritizationId = 1;
  ExchangeAssetSecuritizationTransactionRequest exchangeAssetSecuritizationTransactionRequest = 2;

}

message ExecuteRequest {
  string assetsecuritizationId = 1;
  ExecuteAssetSecuritizationTransactionRequest executeAssetSecuritizationTransactionRequest = 2;

}

message InitiateRequest {
  InitiateAssetSecuritizationTransactionRequest initiateAssetSecuritizationTransactionRequest = 1;

}

message RequestRequest {
  string assetsecuritizationId = 1;
  RequestAssetSecuritizationTransactionRequest requestAssetSecuritizationTransactionRequest = 2;

}

message RetrieveRequest {
  string assetsecuritizationId = 1;

}

message UpdateRequest {
  string assetsecuritizationId = 1;
  UpdateAssetSecuritizationTransactionRequest updateAssetSecuritizationTransactionRequest = 2;

}

