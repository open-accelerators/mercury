/*
  Program Trading

  This Service Domain supports a program trading capability where the trading decisions are made based on predefined/programmed rules and policies. Manual oversight and monitoring capabilities are supported as appropriate

  The version of the OpenAPI document: 10.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package com.redhat.mercury.programtrading.v10.api.bqprogramtradeexecutionfunctionservice;

import "google/protobuf/empty.proto";
import public "v10/model/http_error.proto";
import public "v10/model/program_trade_execution_function.proto";

service BQProgramTradeExecutionFunctionService {
  rpc ExchangeProgramTradeExecutionFunction (ExchangeProgramTradeExecutionFunctionRequest) returns (ProgramTradeExecutionFunction);

  rpc ExecuteProgramTradeExecutionFunction (ExecuteProgramTradeExecutionFunctionRequest) returns (ProgramTradeExecutionFunction);

  rpc InitiateProgramTradeExecutionFunction (InitiateProgramTradeExecutionFunctionRequest) returns (ProgramTradeExecutionFunction);

  rpc NotifyProgramTradeExecutionFunction (NotifyProgramTradeExecutionFunctionRequest) returns (ProgramTradeExecutionFunction);

  rpc RequestProgramTradeExecutionFunction (RequestProgramTradeExecutionFunctionRequest) returns (ProgramTradeExecutionFunction);

  rpc RetrieveProgramTradeExecutionFunction (RetrieveProgramTradeExecutionFunctionRequest) returns (ProgramTradeExecutionFunction);

  rpc UpdateProgramTradeExecutionFunction (UpdateProgramTradeExecutionFunctionRequest) returns (ProgramTradeExecutionFunction);

}

message ExchangeProgramTradeExecutionFunctionRequest {
  string programtradingId = 1;
  string programtradeexecutionfunctionId = 2;
  ProgramTradeExecutionFunction programTradeExecutionFunction = 3;

}

message ExecuteProgramTradeExecutionFunctionRequest {
  string programtradingId = 1;
  string programtradeexecutionfunctionId = 2;
  ProgramTradeExecutionFunction programTradeExecutionFunction = 3;

}

message InitiateProgramTradeExecutionFunctionRequest {
  string programtradingId = 1;
  ProgramTradeExecutionFunction programTradeExecutionFunction = 2;

}

message NotifyProgramTradeExecutionFunctionRequest {
  string programtradingId = 1;
  string programtradeexecutionfunctionId = 2;

}

message RequestProgramTradeExecutionFunctionRequest {
  string programtradingId = 1;
  string programtradeexecutionfunctionId = 2;
  ProgramTradeExecutionFunction programTradeExecutionFunction = 3;

}

message RetrieveProgramTradeExecutionFunctionRequest {
  string programtradingId = 1;
  string programtradeexecutionfunctionId = 2;

}

message UpdateProgramTradeExecutionFunctionRequest {
  string programtradingId = 1;
  string programtradeexecutionfunctionId = 2;
  ProgramTradeExecutionFunction programTradeExecutionFunction = 3;

}

