/*
 * Account Recovery
 * This service domain handles the restructuring of a distressed account (loan) after standard recovery
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.accountrecovery.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BQNegotiationRetrieveOutputModelNegotiationInstanceReport
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-07T18:27:41.474305+02:00[Europe/Madrid]")
public class BQNegotiationRetrieveOutputModelNegotiationInstanceReport {
  @SerializedName("negotiationInstanceReportRecord")
  private Object negotiationInstanceReportRecord = null;

  @SerializedName("negotiationInstanceReportType")
  private String negotiationInstanceReportType = null;

  @SerializedName("negotiationInstanceReportParameters")
  private String negotiationInstanceReportParameters = null;

  @SerializedName("negotiationInstanceReport")
  private Object negotiationInstanceReport = null;

  public BQNegotiationRetrieveOutputModelNegotiationInstanceReport negotiationInstanceReportRecord(Object negotiationInstanceReportRecord) {
    this.negotiationInstanceReportRecord = negotiationInstanceReportRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The input information used to assemble the report that can be on-going, periodic and actual and projected 
   * @return negotiationInstanceReportRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The input information used to assemble the report that can be on-going, periodic and actual and projected ")
  public Object getNegotiationInstanceReportRecord() {
    return negotiationInstanceReportRecord;
  }

  public void setNegotiationInstanceReportRecord(Object negotiationInstanceReportRecord) {
    this.negotiationInstanceReportRecord = negotiationInstanceReportRecord;
  }

  public BQNegotiationRetrieveOutputModelNegotiationInstanceReport negotiationInstanceReportType(String negotiationInstanceReportType) {
    this.negotiationInstanceReportType = negotiationInstanceReportType;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Code  general-info: The type of external report available 
   * @return negotiationInstanceReportType
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Code  general-info: The type of external report available ")
  public String getNegotiationInstanceReportType() {
    return negotiationInstanceReportType;
  }

  public void setNegotiationInstanceReportType(String negotiationInstanceReportType) {
    this.negotiationInstanceReportType = negotiationInstanceReportType;
  }

  public BQNegotiationRetrieveOutputModelNegotiationInstanceReport negotiationInstanceReportParameters(String negotiationInstanceReportParameters) {
    this.negotiationInstanceReportParameters = negotiationInstanceReportParameters;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The selection parameters for the report (e.g. period, content type) 
   * @return negotiationInstanceReportParameters
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The selection parameters for the report (e.g. period, content type) ")
  public String getNegotiationInstanceReportParameters() {
    return negotiationInstanceReportParameters;
  }

  public void setNegotiationInstanceReportParameters(String negotiationInstanceReportParameters) {
    this.negotiationInstanceReportParameters = negotiationInstanceReportParameters;
  }

  public BQNegotiationRetrieveOutputModelNegotiationInstanceReport negotiationInstanceReport(Object negotiationInstanceReport) {
    this.negotiationInstanceReport = negotiationInstanceReport;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The external report in any suitable form including selection filters where appropriate 
   * @return negotiationInstanceReport
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The external report in any suitable form including selection filters where appropriate ")
  public Object getNegotiationInstanceReport() {
    return negotiationInstanceReport;
  }

  public void setNegotiationInstanceReport(Object negotiationInstanceReport) {
    this.negotiationInstanceReport = negotiationInstanceReport;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BQNegotiationRetrieveOutputModelNegotiationInstanceReport bqNegotiationRetrieveOutputModelNegotiationInstanceReport = (BQNegotiationRetrieveOutputModelNegotiationInstanceReport) o;
    return Objects.equals(this.negotiationInstanceReportRecord, bqNegotiationRetrieveOutputModelNegotiationInstanceReport.negotiationInstanceReportRecord) &&
        Objects.equals(this.negotiationInstanceReportType, bqNegotiationRetrieveOutputModelNegotiationInstanceReport.negotiationInstanceReportType) &&
        Objects.equals(this.negotiationInstanceReportParameters, bqNegotiationRetrieveOutputModelNegotiationInstanceReport.negotiationInstanceReportParameters) &&
        Objects.equals(this.negotiationInstanceReport, bqNegotiationRetrieveOutputModelNegotiationInstanceReport.negotiationInstanceReport);
  }

  @Override
  public int hashCode() {
    return Objects.hash(negotiationInstanceReportRecord, negotiationInstanceReportType, negotiationInstanceReportParameters, negotiationInstanceReport);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BQNegotiationRetrieveOutputModelNegotiationInstanceReport {\n");
    
    sb.append("    negotiationInstanceReportRecord: ").append(toIndentedString(negotiationInstanceReportRecord)).append("\n");
    sb.append("    negotiationInstanceReportType: ").append(toIndentedString(negotiationInstanceReportType)).append("\n");
    sb.append("    negotiationInstanceReportParameters: ").append(toIndentedString(negotiationInstanceReportParameters)).append("\n");
    sb.append("    negotiationInstanceReport: ").append(toIndentedString(negotiationInstanceReport)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
