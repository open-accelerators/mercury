/*
 * Account Recovery
 * This service domain handles the restructuring of a distressed account (loan) after standard recovery
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.accountrecovery.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BQRestructuringRetrieveOutputModelRestructuringInstanceReport
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-07T18:27:41.474305+02:00[Europe/Madrid]")
public class BQRestructuringRetrieveOutputModelRestructuringInstanceReport {
  @SerializedName("restructuringInstanceReportRecord")
  private Object restructuringInstanceReportRecord = null;

  @SerializedName("restructuringInstanceReportType")
  private String restructuringInstanceReportType = null;

  @SerializedName("restructuringInstanceReportParameters")
  private String restructuringInstanceReportParameters = null;

  @SerializedName("restructuringInstanceReport")
  private Object restructuringInstanceReport = null;

  public BQRestructuringRetrieveOutputModelRestructuringInstanceReport restructuringInstanceReportRecord(Object restructuringInstanceReportRecord) {
    this.restructuringInstanceReportRecord = restructuringInstanceReportRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The input information used to assemble the report that can be on-going, periodic and actual and projected 
   * @return restructuringInstanceReportRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The input information used to assemble the report that can be on-going, periodic and actual and projected ")
  public Object getRestructuringInstanceReportRecord() {
    return restructuringInstanceReportRecord;
  }

  public void setRestructuringInstanceReportRecord(Object restructuringInstanceReportRecord) {
    this.restructuringInstanceReportRecord = restructuringInstanceReportRecord;
  }

  public BQRestructuringRetrieveOutputModelRestructuringInstanceReport restructuringInstanceReportType(String restructuringInstanceReportType) {
    this.restructuringInstanceReportType = restructuringInstanceReportType;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Code  general-info: The type of external report available 
   * @return restructuringInstanceReportType
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Code  general-info: The type of external report available ")
  public String getRestructuringInstanceReportType() {
    return restructuringInstanceReportType;
  }

  public void setRestructuringInstanceReportType(String restructuringInstanceReportType) {
    this.restructuringInstanceReportType = restructuringInstanceReportType;
  }

  public BQRestructuringRetrieveOutputModelRestructuringInstanceReport restructuringInstanceReportParameters(String restructuringInstanceReportParameters) {
    this.restructuringInstanceReportParameters = restructuringInstanceReportParameters;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The selection parameters for the report (e.g. period, content type) 
   * @return restructuringInstanceReportParameters
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The selection parameters for the report (e.g. period, content type) ")
  public String getRestructuringInstanceReportParameters() {
    return restructuringInstanceReportParameters;
  }

  public void setRestructuringInstanceReportParameters(String restructuringInstanceReportParameters) {
    this.restructuringInstanceReportParameters = restructuringInstanceReportParameters;
  }

  public BQRestructuringRetrieveOutputModelRestructuringInstanceReport restructuringInstanceReport(Object restructuringInstanceReport) {
    this.restructuringInstanceReport = restructuringInstanceReport;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The external report in any suitable form including selection filters where appropriate 
   * @return restructuringInstanceReport
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The external report in any suitable form including selection filters where appropriate ")
  public Object getRestructuringInstanceReport() {
    return restructuringInstanceReport;
  }

  public void setRestructuringInstanceReport(Object restructuringInstanceReport) {
    this.restructuringInstanceReport = restructuringInstanceReport;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BQRestructuringRetrieveOutputModelRestructuringInstanceReport bqRestructuringRetrieveOutputModelRestructuringInstanceReport = (BQRestructuringRetrieveOutputModelRestructuringInstanceReport) o;
    return Objects.equals(this.restructuringInstanceReportRecord, bqRestructuringRetrieveOutputModelRestructuringInstanceReport.restructuringInstanceReportRecord) &&
        Objects.equals(this.restructuringInstanceReportType, bqRestructuringRetrieveOutputModelRestructuringInstanceReport.restructuringInstanceReportType) &&
        Objects.equals(this.restructuringInstanceReportParameters, bqRestructuringRetrieveOutputModelRestructuringInstanceReport.restructuringInstanceReportParameters) &&
        Objects.equals(this.restructuringInstanceReport, bqRestructuringRetrieveOutputModelRestructuringInstanceReport.restructuringInstanceReport);
  }

  @Override
  public int hashCode() {
    return Objects.hash(restructuringInstanceReportRecord, restructuringInstanceReportType, restructuringInstanceReportParameters, restructuringInstanceReport);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BQRestructuringRetrieveOutputModelRestructuringInstanceReport {\n");
    
    sb.append("    restructuringInstanceReportRecord: ").append(toIndentedString(restructuringInstanceReportRecord)).append("\n");
    sb.append("    restructuringInstanceReportType: ").append(toIndentedString(restructuringInstanceReportType)).append("\n");
    sb.append("    restructuringInstanceReportParameters: ").append(toIndentedString(restructuringInstanceReportParameters)).append("\n");
    sb.append("    restructuringInstanceReport: ").append(toIndentedString(restructuringInstanceReport)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
