/*
 * Account Recovery
 * This service domain handles the restructuring of a distressed account (loan) after standard recovery
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.accountrecovery.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BQPlanningRetrieveOutputModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-07T18:27:41.474305+02:00[Europe/Madrid]")
public class BQPlanningRetrieveOutputModel {
  @SerializedName("accountRecoveryProcedureInstanceRecord")
  private Object accountRecoveryProcedureInstanceRecord = null;

  @SerializedName("planningInstanceRecord")
  private Object planningInstanceRecord = null;

  @SerializedName("planningRetrieveActionTaskReference")
  private String planningRetrieveActionTaskReference = null;

  @SerializedName("planningRetrieveActionTaskRecord")
  private Object planningRetrieveActionTaskRecord = null;

  @SerializedName("planningRetrieveActionResponse")
  private String planningRetrieveActionResponse = null;

  @SerializedName("planningInstanceReport")
  private Object planningInstanceReport = null;

  @SerializedName("planningInstanceAnalysis")
  private Object planningInstanceAnalysis = null;

  public BQPlanningRetrieveOutputModel accountRecoveryProcedureInstanceRecord(Object accountRecoveryProcedureInstanceRecord) {
    this.accountRecoveryProcedureInstanceRecord = accountRecoveryProcedureInstanceRecord;
    return this;
  }

   /**
   * Get accountRecoveryProcedureInstanceRecord
   * @return accountRecoveryProcedureInstanceRecord
  **/
  @Schema(description = "")
  public Object getAccountRecoveryProcedureInstanceRecord() {
    return accountRecoveryProcedureInstanceRecord;
  }

  public void setAccountRecoveryProcedureInstanceRecord(Object accountRecoveryProcedureInstanceRecord) {
    this.accountRecoveryProcedureInstanceRecord = accountRecoveryProcedureInstanceRecord;
  }

  public BQPlanningRetrieveOutputModel planningInstanceRecord(Object planningInstanceRecord) {
    this.planningInstanceRecord = planningInstanceRecord;
    return this;
  }

   /**
   * Get planningInstanceRecord
   * @return planningInstanceRecord
  **/
  @Schema(description = "")
  public Object getPlanningInstanceRecord() {
    return planningInstanceRecord;
  }

  public void setPlanningInstanceRecord(Object planningInstanceRecord) {
    this.planningInstanceRecord = planningInstanceRecord;
  }

  public BQPlanningRetrieveOutputModel planningRetrieveActionTaskReference(String planningRetrieveActionTaskReference) {
    this.planningRetrieveActionTaskReference = planningRetrieveActionTaskReference;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to a Planning instance retrieve service call 
   * @return planningRetrieveActionTaskReference
  **/
  @Schema(example = "ARPRATR728947", description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to a Planning instance retrieve service call ")
  public String getPlanningRetrieveActionTaskReference() {
    return planningRetrieveActionTaskReference;
  }

  public void setPlanningRetrieveActionTaskReference(String planningRetrieveActionTaskReference) {
    this.planningRetrieveActionTaskReference = planningRetrieveActionTaskReference;
  }

  public BQPlanningRetrieveOutputModel planningRetrieveActionTaskRecord(Object planningRetrieveActionTaskRecord) {
    this.planningRetrieveActionTaskRecord = planningRetrieveActionTaskRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The retrieve service call consolidated processing record 
   * @return planningRetrieveActionTaskRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The retrieve service call consolidated processing record ")
  public Object getPlanningRetrieveActionTaskRecord() {
    return planningRetrieveActionTaskRecord;
  }

  public void setPlanningRetrieveActionTaskRecord(Object planningRetrieveActionTaskRecord) {
    this.planningRetrieveActionTaskRecord = planningRetrieveActionTaskRecord;
  }

  public BQPlanningRetrieveOutputModel planningRetrieveActionResponse(String planningRetrieveActionResponse) {
    this.planningRetrieveActionResponse = planningRetrieveActionResponse;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the retrieve action service response (lists returned reports) 
   * @return planningRetrieveActionResponse
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the retrieve action service response (lists returned reports) ")
  public String getPlanningRetrieveActionResponse() {
    return planningRetrieveActionResponse;
  }

  public void setPlanningRetrieveActionResponse(String planningRetrieveActionResponse) {
    this.planningRetrieveActionResponse = planningRetrieveActionResponse;
  }

  public BQPlanningRetrieveOutputModel planningInstanceReport(Object planningInstanceReport) {
    this.planningInstanceReport = planningInstanceReport;
    return this;
  }

   /**
   * Get planningInstanceReport
   * @return planningInstanceReport
  **/
  @Schema(description = "")
  public Object getPlanningInstanceReport() {
    return planningInstanceReport;
  }

  public void setPlanningInstanceReport(Object planningInstanceReport) {
    this.planningInstanceReport = planningInstanceReport;
  }

  public BQPlanningRetrieveOutputModel planningInstanceAnalysis(Object planningInstanceAnalysis) {
    this.planningInstanceAnalysis = planningInstanceAnalysis;
    return this;
  }

   /**
   * Get planningInstanceAnalysis
   * @return planningInstanceAnalysis
  **/
  @Schema(description = "")
  public Object getPlanningInstanceAnalysis() {
    return planningInstanceAnalysis;
  }

  public void setPlanningInstanceAnalysis(Object planningInstanceAnalysis) {
    this.planningInstanceAnalysis = planningInstanceAnalysis;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BQPlanningRetrieveOutputModel bqPlanningRetrieveOutputModel = (BQPlanningRetrieveOutputModel) o;
    return Objects.equals(this.accountRecoveryProcedureInstanceRecord, bqPlanningRetrieveOutputModel.accountRecoveryProcedureInstanceRecord) &&
        Objects.equals(this.planningInstanceRecord, bqPlanningRetrieveOutputModel.planningInstanceRecord) &&
        Objects.equals(this.planningRetrieveActionTaskReference, bqPlanningRetrieveOutputModel.planningRetrieveActionTaskReference) &&
        Objects.equals(this.planningRetrieveActionTaskRecord, bqPlanningRetrieveOutputModel.planningRetrieveActionTaskRecord) &&
        Objects.equals(this.planningRetrieveActionResponse, bqPlanningRetrieveOutputModel.planningRetrieveActionResponse) &&
        Objects.equals(this.planningInstanceReport, bqPlanningRetrieveOutputModel.planningInstanceReport) &&
        Objects.equals(this.planningInstanceAnalysis, bqPlanningRetrieveOutputModel.planningInstanceAnalysis);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountRecoveryProcedureInstanceRecord, planningInstanceRecord, planningRetrieveActionTaskReference, planningRetrieveActionTaskRecord, planningRetrieveActionResponse, planningInstanceReport, planningInstanceAnalysis);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BQPlanningRetrieveOutputModel {\n");
    
    sb.append("    accountRecoveryProcedureInstanceRecord: ").append(toIndentedString(accountRecoveryProcedureInstanceRecord)).append("\n");
    sb.append("    planningInstanceRecord: ").append(toIndentedString(planningInstanceRecord)).append("\n");
    sb.append("    planningRetrieveActionTaskReference: ").append(toIndentedString(planningRetrieveActionTaskReference)).append("\n");
    sb.append("    planningRetrieveActionTaskRecord: ").append(toIndentedString(planningRetrieveActionTaskRecord)).append("\n");
    sb.append("    planningRetrieveActionResponse: ").append(toIndentedString(planningRetrieveActionResponse)).append("\n");
    sb.append("    planningInstanceReport: ").append(toIndentedString(planningInstanceReport)).append("\n");
    sb.append("    planningInstanceAnalysis: ").append(toIndentedString(planningInstanceAnalysis)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
