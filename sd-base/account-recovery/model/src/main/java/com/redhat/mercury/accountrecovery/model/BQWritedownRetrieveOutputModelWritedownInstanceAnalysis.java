/*
 * Account Recovery
 * This service domain handles the restructuring of a distressed account (loan) after standard recovery
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.accountrecovery.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BQWritedownRetrieveOutputModelWritedownInstanceAnalysis
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-07T18:27:41.474305+02:00[Europe/Madrid]")
public class BQWritedownRetrieveOutputModelWritedownInstanceAnalysis {
  @SerializedName("writedownInstanceAnalysisRecord")
  private Object writedownInstanceAnalysisRecord = null;

  @SerializedName("writedownInstanceAnalysisReportType")
  private String writedownInstanceAnalysisReportType = null;

  @SerializedName("writedownInstanceAnalysisParameters")
  private String writedownInstanceAnalysisParameters = null;

  @SerializedName("writedownInstanceAnalysisReport")
  private Object writedownInstanceAnalysisReport = null;

  public BQWritedownRetrieveOutputModelWritedownInstanceAnalysis writedownInstanceAnalysisRecord(Object writedownInstanceAnalysisRecord) {
    this.writedownInstanceAnalysisRecord = writedownInstanceAnalysisRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The inputs and results of the instance analysis that can be on-going, periodic and actual and projected 
   * @return writedownInstanceAnalysisRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The inputs and results of the instance analysis that can be on-going, periodic and actual and projected ")
  public Object getWritedownInstanceAnalysisRecord() {
    return writedownInstanceAnalysisRecord;
  }

  public void setWritedownInstanceAnalysisRecord(Object writedownInstanceAnalysisRecord) {
    this.writedownInstanceAnalysisRecord = writedownInstanceAnalysisRecord;
  }

  public BQWritedownRetrieveOutputModelWritedownInstanceAnalysis writedownInstanceAnalysisReportType(String writedownInstanceAnalysisReportType) {
    this.writedownInstanceAnalysisReportType = writedownInstanceAnalysisReportType;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Code  general-info: The type of external performance analysis report available 
   * @return writedownInstanceAnalysisReportType
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Code  general-info: The type of external performance analysis report available ")
  public String getWritedownInstanceAnalysisReportType() {
    return writedownInstanceAnalysisReportType;
  }

  public void setWritedownInstanceAnalysisReportType(String writedownInstanceAnalysisReportType) {
    this.writedownInstanceAnalysisReportType = writedownInstanceAnalysisReportType;
  }

  public BQWritedownRetrieveOutputModelWritedownInstanceAnalysis writedownInstanceAnalysisParameters(String writedownInstanceAnalysisParameters) {
    this.writedownInstanceAnalysisParameters = writedownInstanceAnalysisParameters;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The selection parameters for the analysis (e.g. period, algorithm type) 
   * @return writedownInstanceAnalysisParameters
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The selection parameters for the analysis (e.g. period, algorithm type) ")
  public String getWritedownInstanceAnalysisParameters() {
    return writedownInstanceAnalysisParameters;
  }

  public void setWritedownInstanceAnalysisParameters(String writedownInstanceAnalysisParameters) {
    this.writedownInstanceAnalysisParameters = writedownInstanceAnalysisParameters;
  }

  public BQWritedownRetrieveOutputModelWritedownInstanceAnalysis writedownInstanceAnalysisReport(Object writedownInstanceAnalysisReport) {
    this.writedownInstanceAnalysisReport = writedownInstanceAnalysisReport;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The external analysis report in any suitable form including selection filters where appropriate 
   * @return writedownInstanceAnalysisReport
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The external analysis report in any suitable form including selection filters where appropriate ")
  public Object getWritedownInstanceAnalysisReport() {
    return writedownInstanceAnalysisReport;
  }

  public void setWritedownInstanceAnalysisReport(Object writedownInstanceAnalysisReport) {
    this.writedownInstanceAnalysisReport = writedownInstanceAnalysisReport;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BQWritedownRetrieveOutputModelWritedownInstanceAnalysis bqWritedownRetrieveOutputModelWritedownInstanceAnalysis = (BQWritedownRetrieveOutputModelWritedownInstanceAnalysis) o;
    return Objects.equals(this.writedownInstanceAnalysisRecord, bqWritedownRetrieveOutputModelWritedownInstanceAnalysis.writedownInstanceAnalysisRecord) &&
        Objects.equals(this.writedownInstanceAnalysisReportType, bqWritedownRetrieveOutputModelWritedownInstanceAnalysis.writedownInstanceAnalysisReportType) &&
        Objects.equals(this.writedownInstanceAnalysisParameters, bqWritedownRetrieveOutputModelWritedownInstanceAnalysis.writedownInstanceAnalysisParameters) &&
        Objects.equals(this.writedownInstanceAnalysisReport, bqWritedownRetrieveOutputModelWritedownInstanceAnalysis.writedownInstanceAnalysisReport);
  }

  @Override
  public int hashCode() {
    return Objects.hash(writedownInstanceAnalysisRecord, writedownInstanceAnalysisReportType, writedownInstanceAnalysisParameters, writedownInstanceAnalysisReport);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BQWritedownRetrieveOutputModelWritedownInstanceAnalysis {\n");
    
    sb.append("    writedownInstanceAnalysisRecord: ").append(toIndentedString(writedownInstanceAnalysisRecord)).append("\n");
    sb.append("    writedownInstanceAnalysisReportType: ").append(toIndentedString(writedownInstanceAnalysisReportType)).append("\n");
    sb.append("    writedownInstanceAnalysisParameters: ").append(toIndentedString(writedownInstanceAnalysisParameters)).append("\n");
    sb.append("    writedownInstanceAnalysisReport: ").append(toIndentedString(writedownInstanceAnalysisReport)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
