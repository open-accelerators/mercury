/*
 * Account Recovery
 * This service domain handles the restructuring of a distressed account (loan) after standard recovery
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.accountrecovery.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BQAssessmentRetrieveOutputModelAssessmentInstanceReport
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-07T18:27:41.474305+02:00[Europe/Madrid]")
public class BQAssessmentRetrieveOutputModelAssessmentInstanceReport {
  @SerializedName("assessmentInstanceReportRecord")
  private Object assessmentInstanceReportRecord = null;

  @SerializedName("assessmentInstanceReportType")
  private String assessmentInstanceReportType = null;

  @SerializedName("assessmentInstanceReportParameters")
  private String assessmentInstanceReportParameters = null;

  @SerializedName("assessmentInstanceReport")
  private Object assessmentInstanceReport = null;

  public BQAssessmentRetrieveOutputModelAssessmentInstanceReport assessmentInstanceReportRecord(Object assessmentInstanceReportRecord) {
    this.assessmentInstanceReportRecord = assessmentInstanceReportRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The input information used to assemble the report that can be on-going, periodic and actual and projected 
   * @return assessmentInstanceReportRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The input information used to assemble the report that can be on-going, periodic and actual and projected ")
  public Object getAssessmentInstanceReportRecord() {
    return assessmentInstanceReportRecord;
  }

  public void setAssessmentInstanceReportRecord(Object assessmentInstanceReportRecord) {
    this.assessmentInstanceReportRecord = assessmentInstanceReportRecord;
  }

  public BQAssessmentRetrieveOutputModelAssessmentInstanceReport assessmentInstanceReportType(String assessmentInstanceReportType) {
    this.assessmentInstanceReportType = assessmentInstanceReportType;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Code  general-info: The type of external report available 
   * @return assessmentInstanceReportType
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Code  general-info: The type of external report available ")
  public String getAssessmentInstanceReportType() {
    return assessmentInstanceReportType;
  }

  public void setAssessmentInstanceReportType(String assessmentInstanceReportType) {
    this.assessmentInstanceReportType = assessmentInstanceReportType;
  }

  public BQAssessmentRetrieveOutputModelAssessmentInstanceReport assessmentInstanceReportParameters(String assessmentInstanceReportParameters) {
    this.assessmentInstanceReportParameters = assessmentInstanceReportParameters;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The selection parameters for the report (e.g. period, content type) 
   * @return assessmentInstanceReportParameters
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The selection parameters for the report (e.g. period, content type) ")
  public String getAssessmentInstanceReportParameters() {
    return assessmentInstanceReportParameters;
  }

  public void setAssessmentInstanceReportParameters(String assessmentInstanceReportParameters) {
    this.assessmentInstanceReportParameters = assessmentInstanceReportParameters;
  }

  public BQAssessmentRetrieveOutputModelAssessmentInstanceReport assessmentInstanceReport(Object assessmentInstanceReport) {
    this.assessmentInstanceReport = assessmentInstanceReport;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The external report in any suitable form including selection filters where appropriate 
   * @return assessmentInstanceReport
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The external report in any suitable form including selection filters where appropriate ")
  public Object getAssessmentInstanceReport() {
    return assessmentInstanceReport;
  }

  public void setAssessmentInstanceReport(Object assessmentInstanceReport) {
    this.assessmentInstanceReport = assessmentInstanceReport;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BQAssessmentRetrieveOutputModelAssessmentInstanceReport bqAssessmentRetrieveOutputModelAssessmentInstanceReport = (BQAssessmentRetrieveOutputModelAssessmentInstanceReport) o;
    return Objects.equals(this.assessmentInstanceReportRecord, bqAssessmentRetrieveOutputModelAssessmentInstanceReport.assessmentInstanceReportRecord) &&
        Objects.equals(this.assessmentInstanceReportType, bqAssessmentRetrieveOutputModelAssessmentInstanceReport.assessmentInstanceReportType) &&
        Objects.equals(this.assessmentInstanceReportParameters, bqAssessmentRetrieveOutputModelAssessmentInstanceReport.assessmentInstanceReportParameters) &&
        Objects.equals(this.assessmentInstanceReport, bqAssessmentRetrieveOutputModelAssessmentInstanceReport.assessmentInstanceReport);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assessmentInstanceReportRecord, assessmentInstanceReportType, assessmentInstanceReportParameters, assessmentInstanceReport);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BQAssessmentRetrieveOutputModelAssessmentInstanceReport {\n");
    
    sb.append("    assessmentInstanceReportRecord: ").append(toIndentedString(assessmentInstanceReportRecord)).append("\n");
    sb.append("    assessmentInstanceReportType: ").append(toIndentedString(assessmentInstanceReportType)).append("\n");
    sb.append("    assessmentInstanceReportParameters: ").append(toIndentedString(assessmentInstanceReportParameters)).append("\n");
    sb.append("    assessmentInstanceReport: ").append(toIndentedString(assessmentInstanceReport)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
