/*
 * Customer Credit Rating
 * This service domain maintains and administers the bank's credit assessment for customers.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.customercreditrating.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BQExternalReportingRetrieveOutputModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-03T15:34:54.132884+02:00[Europe/Madrid]")
public class BQExternalReportingRetrieveOutputModel {
  @SerializedName("customerCreditRatingStateInstanceRecord")
  private Object customerCreditRatingStateInstanceRecord = null;

  @SerializedName("externalReportingInstanceRecord")
  private Object externalReportingInstanceRecord = null;

  @SerializedName("externalReportingRetrieveActionTaskReference")
  private String externalReportingRetrieveActionTaskReference = null;

  @SerializedName("externalReportingRetrieveActionTaskRecord")
  private Object externalReportingRetrieveActionTaskRecord = null;

  @SerializedName("externalReportingRetrieveActionResponse")
  private String externalReportingRetrieveActionResponse = null;

  @SerializedName("externalReportingInstanceReport")
  private Object externalReportingInstanceReport = null;

  @SerializedName("externalReportingInstanceAnalysis")
  private Object externalReportingInstanceAnalysis = null;

  public BQExternalReportingRetrieveOutputModel customerCreditRatingStateInstanceRecord(Object customerCreditRatingStateInstanceRecord) {
    this.customerCreditRatingStateInstanceRecord = customerCreditRatingStateInstanceRecord;
    return this;
  }

   /**
   * Get customerCreditRatingStateInstanceRecord
   * @return customerCreditRatingStateInstanceRecord
  **/
  @Schema(description = "")
  public Object getCustomerCreditRatingStateInstanceRecord() {
    return customerCreditRatingStateInstanceRecord;
  }

  public void setCustomerCreditRatingStateInstanceRecord(Object customerCreditRatingStateInstanceRecord) {
    this.customerCreditRatingStateInstanceRecord = customerCreditRatingStateInstanceRecord;
  }

  public BQExternalReportingRetrieveOutputModel externalReportingInstanceRecord(Object externalReportingInstanceRecord) {
    this.externalReportingInstanceRecord = externalReportingInstanceRecord;
    return this;
  }

   /**
   * Get externalReportingInstanceRecord
   * @return externalReportingInstanceRecord
  **/
  @Schema(description = "")
  public Object getExternalReportingInstanceRecord() {
    return externalReportingInstanceRecord;
  }

  public void setExternalReportingInstanceRecord(Object externalReportingInstanceRecord) {
    this.externalReportingInstanceRecord = externalReportingInstanceRecord;
  }

  public BQExternalReportingRetrieveOutputModel externalReportingRetrieveActionTaskReference(String externalReportingRetrieveActionTaskReference) {
    this.externalReportingRetrieveActionTaskReference = externalReportingRetrieveActionTaskReference;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to a External Reporting instance retrieve service call 
   * @return externalReportingRetrieveActionTaskReference
  **/
  @Schema(example = "ERRATR782301", description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to a External Reporting instance retrieve service call ")
  public String getExternalReportingRetrieveActionTaskReference() {
    return externalReportingRetrieveActionTaskReference;
  }

  public void setExternalReportingRetrieveActionTaskReference(String externalReportingRetrieveActionTaskReference) {
    this.externalReportingRetrieveActionTaskReference = externalReportingRetrieveActionTaskReference;
  }

  public BQExternalReportingRetrieveOutputModel externalReportingRetrieveActionTaskRecord(Object externalReportingRetrieveActionTaskRecord) {
    this.externalReportingRetrieveActionTaskRecord = externalReportingRetrieveActionTaskRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The retrieve service call consolidated processing record 
   * @return externalReportingRetrieveActionTaskRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The retrieve service call consolidated processing record ")
  public Object getExternalReportingRetrieveActionTaskRecord() {
    return externalReportingRetrieveActionTaskRecord;
  }

  public void setExternalReportingRetrieveActionTaskRecord(Object externalReportingRetrieveActionTaskRecord) {
    this.externalReportingRetrieveActionTaskRecord = externalReportingRetrieveActionTaskRecord;
  }

  public BQExternalReportingRetrieveOutputModel externalReportingRetrieveActionResponse(String externalReportingRetrieveActionResponse) {
    this.externalReportingRetrieveActionResponse = externalReportingRetrieveActionResponse;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the retrieve action service response (lists returned reports) 
   * @return externalReportingRetrieveActionResponse
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the retrieve action service response (lists returned reports) ")
  public String getExternalReportingRetrieveActionResponse() {
    return externalReportingRetrieveActionResponse;
  }

  public void setExternalReportingRetrieveActionResponse(String externalReportingRetrieveActionResponse) {
    this.externalReportingRetrieveActionResponse = externalReportingRetrieveActionResponse;
  }

  public BQExternalReportingRetrieveOutputModel externalReportingInstanceReport(Object externalReportingInstanceReport) {
    this.externalReportingInstanceReport = externalReportingInstanceReport;
    return this;
  }

   /**
   * Get externalReportingInstanceReport
   * @return externalReportingInstanceReport
  **/
  @Schema(description = "")
  public Object getExternalReportingInstanceReport() {
    return externalReportingInstanceReport;
  }

  public void setExternalReportingInstanceReport(Object externalReportingInstanceReport) {
    this.externalReportingInstanceReport = externalReportingInstanceReport;
  }

  public BQExternalReportingRetrieveOutputModel externalReportingInstanceAnalysis(Object externalReportingInstanceAnalysis) {
    this.externalReportingInstanceAnalysis = externalReportingInstanceAnalysis;
    return this;
  }

   /**
   * Get externalReportingInstanceAnalysis
   * @return externalReportingInstanceAnalysis
  **/
  @Schema(description = "")
  public Object getExternalReportingInstanceAnalysis() {
    return externalReportingInstanceAnalysis;
  }

  public void setExternalReportingInstanceAnalysis(Object externalReportingInstanceAnalysis) {
    this.externalReportingInstanceAnalysis = externalReportingInstanceAnalysis;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BQExternalReportingRetrieveOutputModel bqExternalReportingRetrieveOutputModel = (BQExternalReportingRetrieveOutputModel) o;
    return Objects.equals(this.customerCreditRatingStateInstanceRecord, bqExternalReportingRetrieveOutputModel.customerCreditRatingStateInstanceRecord) &&
        Objects.equals(this.externalReportingInstanceRecord, bqExternalReportingRetrieveOutputModel.externalReportingInstanceRecord) &&
        Objects.equals(this.externalReportingRetrieveActionTaskReference, bqExternalReportingRetrieveOutputModel.externalReportingRetrieveActionTaskReference) &&
        Objects.equals(this.externalReportingRetrieveActionTaskRecord, bqExternalReportingRetrieveOutputModel.externalReportingRetrieveActionTaskRecord) &&
        Objects.equals(this.externalReportingRetrieveActionResponse, bqExternalReportingRetrieveOutputModel.externalReportingRetrieveActionResponse) &&
        Objects.equals(this.externalReportingInstanceReport, bqExternalReportingRetrieveOutputModel.externalReportingInstanceReport) &&
        Objects.equals(this.externalReportingInstanceAnalysis, bqExternalReportingRetrieveOutputModel.externalReportingInstanceAnalysis);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerCreditRatingStateInstanceRecord, externalReportingInstanceRecord, externalReportingRetrieveActionTaskReference, externalReportingRetrieveActionTaskRecord, externalReportingRetrieveActionResponse, externalReportingInstanceReport, externalReportingInstanceAnalysis);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BQExternalReportingRetrieveOutputModel {\n");
    
    sb.append("    customerCreditRatingStateInstanceRecord: ").append(toIndentedString(customerCreditRatingStateInstanceRecord)).append("\n");
    sb.append("    externalReportingInstanceRecord: ").append(toIndentedString(externalReportingInstanceRecord)).append("\n");
    sb.append("    externalReportingRetrieveActionTaskReference: ").append(toIndentedString(externalReportingRetrieveActionTaskReference)).append("\n");
    sb.append("    externalReportingRetrieveActionTaskRecord: ").append(toIndentedString(externalReportingRetrieveActionTaskRecord)).append("\n");
    sb.append("    externalReportingRetrieveActionResponse: ").append(toIndentedString(externalReportingRetrieveActionResponse)).append("\n");
    sb.append("    externalReportingInstanceReport: ").append(toIndentedString(externalReportingInstanceReport)).append("\n");
    sb.append("    externalReportingInstanceAnalysis: ").append(toIndentedString(externalReportingInstanceAnalysis)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
