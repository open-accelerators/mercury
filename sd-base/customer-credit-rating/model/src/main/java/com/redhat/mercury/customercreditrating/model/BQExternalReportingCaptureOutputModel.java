/*
 * Customer Credit Rating
 * This service domain maintains and administers the bank's credit assessment for customers.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.customercreditrating.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BQExternalReportingCaptureOutputModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-03T16:36:13.702891+02:00[Europe/Madrid]")
public class BQExternalReportingCaptureOutputModel {
  @SerializedName("customerCreditRatingStateInstanceRecord")
  private Object customerCreditRatingStateInstanceRecord = null;

  @SerializedName("externalReportingInstanceRecord")
  private Object externalReportingInstanceRecord = null;

  @SerializedName("externalReportingCaptureActionTaskReference")
  private String externalReportingCaptureActionTaskReference = null;

  @SerializedName("externalReportingCaptureActionTaskRecord")
  private Object externalReportingCaptureActionTaskRecord = null;

  @SerializedName("externalReportingCaptureRecordReference")
  private String externalReportingCaptureRecordReference = null;

  @SerializedName("captureResponseRecord")
  private Object captureResponseRecord = null;

  public BQExternalReportingCaptureOutputModel customerCreditRatingStateInstanceRecord(Object customerCreditRatingStateInstanceRecord) {
    this.customerCreditRatingStateInstanceRecord = customerCreditRatingStateInstanceRecord;
    return this;
  }

   /**
   * Get customerCreditRatingStateInstanceRecord
   * @return customerCreditRatingStateInstanceRecord
  **/
  @Schema(description = "")
  public Object getCustomerCreditRatingStateInstanceRecord() {
    return customerCreditRatingStateInstanceRecord;
  }

  public void setCustomerCreditRatingStateInstanceRecord(Object customerCreditRatingStateInstanceRecord) {
    this.customerCreditRatingStateInstanceRecord = customerCreditRatingStateInstanceRecord;
  }

  public BQExternalReportingCaptureOutputModel externalReportingInstanceRecord(Object externalReportingInstanceRecord) {
    this.externalReportingInstanceRecord = externalReportingInstanceRecord;
    return this;
  }

   /**
   * Get externalReportingInstanceRecord
   * @return externalReportingInstanceRecord
  **/
  @Schema(description = "")
  public Object getExternalReportingInstanceRecord() {
    return externalReportingInstanceRecord;
  }

  public void setExternalReportingInstanceRecord(Object externalReportingInstanceRecord) {
    this.externalReportingInstanceRecord = externalReportingInstanceRecord;
  }

  public BQExternalReportingCaptureOutputModel externalReportingCaptureActionTaskReference(String externalReportingCaptureActionTaskReference) {
    this.externalReportingCaptureActionTaskReference = externalReportingCaptureActionTaskReference;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to a External Reporting instance capture service call 
   * @return externalReportingCaptureActionTaskReference
  **/
  @Schema(example = "ERCATR737380", description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to a External Reporting instance capture service call ")
  public String getExternalReportingCaptureActionTaskReference() {
    return externalReportingCaptureActionTaskReference;
  }

  public void setExternalReportingCaptureActionTaskReference(String externalReportingCaptureActionTaskReference) {
    this.externalReportingCaptureActionTaskReference = externalReportingCaptureActionTaskReference;
  }

  public BQExternalReportingCaptureOutputModel externalReportingCaptureActionTaskRecord(Object externalReportingCaptureActionTaskRecord) {
    this.externalReportingCaptureActionTaskRecord = externalReportingCaptureActionTaskRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The capture service call consolidated processing record 
   * @return externalReportingCaptureActionTaskRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The capture service call consolidated processing record ")
  public Object getExternalReportingCaptureActionTaskRecord() {
    return externalReportingCaptureActionTaskRecord;
  }

  public void setExternalReportingCaptureActionTaskRecord(Object externalReportingCaptureActionTaskRecord) {
    this.externalReportingCaptureActionTaskRecord = externalReportingCaptureActionTaskRecord;
  }

  public BQExternalReportingCaptureOutputModel externalReportingCaptureRecordReference(String externalReportingCaptureRecordReference) {
    this.externalReportingCaptureRecordReference = externalReportingCaptureRecordReference;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to the External Reporting structured input transaction/record 
   * @return externalReportingCaptureRecordReference
  **/
  @Schema(example = "ERCRR788089", description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to the External Reporting structured input transaction/record ")
  public String getExternalReportingCaptureRecordReference() {
    return externalReportingCaptureRecordReference;
  }

  public void setExternalReportingCaptureRecordReference(String externalReportingCaptureRecordReference) {
    this.externalReportingCaptureRecordReference = externalReportingCaptureRecordReference;
  }

  public BQExternalReportingCaptureOutputModel captureResponseRecord(Object captureResponseRecord) {
    this.captureResponseRecord = captureResponseRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: Details of the capture action service response 
   * @return captureResponseRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: Details of the capture action service response ")
  public Object getCaptureResponseRecord() {
    return captureResponseRecord;
  }

  public void setCaptureResponseRecord(Object captureResponseRecord) {
    this.captureResponseRecord = captureResponseRecord;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BQExternalReportingCaptureOutputModel bqExternalReportingCaptureOutputModel = (BQExternalReportingCaptureOutputModel) o;
    return Objects.equals(this.customerCreditRatingStateInstanceRecord, bqExternalReportingCaptureOutputModel.customerCreditRatingStateInstanceRecord) &&
        Objects.equals(this.externalReportingInstanceRecord, bqExternalReportingCaptureOutputModel.externalReportingInstanceRecord) &&
        Objects.equals(this.externalReportingCaptureActionTaskReference, bqExternalReportingCaptureOutputModel.externalReportingCaptureActionTaskReference) &&
        Objects.equals(this.externalReportingCaptureActionTaskRecord, bqExternalReportingCaptureOutputModel.externalReportingCaptureActionTaskRecord) &&
        Objects.equals(this.externalReportingCaptureRecordReference, bqExternalReportingCaptureOutputModel.externalReportingCaptureRecordReference) &&
        Objects.equals(this.captureResponseRecord, bqExternalReportingCaptureOutputModel.captureResponseRecord);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerCreditRatingStateInstanceRecord, externalReportingInstanceRecord, externalReportingCaptureActionTaskReference, externalReportingCaptureActionTaskRecord, externalReportingCaptureRecordReference, captureResponseRecord);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BQExternalReportingCaptureOutputModel {\n");
    
    sb.append("    customerCreditRatingStateInstanceRecord: ").append(toIndentedString(customerCreditRatingStateInstanceRecord)).append("\n");
    sb.append("    externalReportingInstanceRecord: ").append(toIndentedString(externalReportingInstanceRecord)).append("\n");
    sb.append("    externalReportingCaptureActionTaskReference: ").append(toIndentedString(externalReportingCaptureActionTaskReference)).append("\n");
    sb.append("    externalReportingCaptureActionTaskRecord: ").append(toIndentedString(externalReportingCaptureActionTaskRecord)).append("\n");
    sb.append("    externalReportingCaptureRecordReference: ").append(toIndentedString(externalReportingCaptureRecordReference)).append("\n");
    sb.append("    captureResponseRecord: ").append(toIndentedString(captureResponseRecord)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
