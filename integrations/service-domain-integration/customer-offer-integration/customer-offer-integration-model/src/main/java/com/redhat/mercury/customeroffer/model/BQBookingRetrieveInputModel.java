/*
 * Customer Offer
 * This service domain orchestrates the processing of a product offer for a new/established  customer.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.customeroffer.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.redhat.mercury.customeroffer.model.BQBookingRetrieveInputModelBookingInstanceAnalysis1;
import com.redhat.mercury.customeroffer.model.BQBookingRetrieveInputModelBookingInstanceReport1;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BQBookingRetrieveInputModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-19T11:10:08.827631+01:00[Europe/Madrid]")
public class BQBookingRetrieveInputModel {
  @SerializedName("bookingRetrieveActionTaskRecord")
  private Object bookingRetrieveActionTaskRecord = null;

  @SerializedName("bookingRetrieveActionRequest")
  private String bookingRetrieveActionRequest = null;

  @SerializedName("bookingInstanceReport")
  private BQBookingRetrieveInputModelBookingInstanceReport1 bookingInstanceReport = null;

  @SerializedName("bookingInstanceAnalysis")
  private BQBookingRetrieveInputModelBookingInstanceAnalysis1 bookingInstanceAnalysis = null;

  public BQBookingRetrieveInputModel bookingRetrieveActionTaskRecord(Object bookingRetrieveActionTaskRecord) {
    this.bookingRetrieveActionTaskRecord = bookingRetrieveActionTaskRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The retrieve service call consolidated processing record 
   * @return bookingRetrieveActionTaskRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The retrieve service call consolidated processing record ")
  public Object getBookingRetrieveActionTaskRecord() {
    return bookingRetrieveActionTaskRecord;
  }

  public void setBookingRetrieveActionTaskRecord(Object bookingRetrieveActionTaskRecord) {
    this.bookingRetrieveActionTaskRecord = bookingRetrieveActionTaskRecord;
  }

  public BQBookingRetrieveInputModel bookingRetrieveActionRequest(String bookingRetrieveActionRequest) {
    this.bookingRetrieveActionRequest = bookingRetrieveActionRequest;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the retrieve action service request (lists requested reports) 
   * @return bookingRetrieveActionRequest
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the retrieve action service request (lists requested reports) ")
  public String getBookingRetrieveActionRequest() {
    return bookingRetrieveActionRequest;
  }

  public void setBookingRetrieveActionRequest(String bookingRetrieveActionRequest) {
    this.bookingRetrieveActionRequest = bookingRetrieveActionRequest;
  }

  public BQBookingRetrieveInputModel bookingInstanceReport(BQBookingRetrieveInputModelBookingInstanceReport1 bookingInstanceReport) {
    this.bookingInstanceReport = bookingInstanceReport;
    return this;
  }

   /**
   * Get bookingInstanceReport
   * @return bookingInstanceReport
  **/
  @Schema(description = "")
  public BQBookingRetrieveInputModelBookingInstanceReport1 getBookingInstanceReport() {
    return bookingInstanceReport;
  }

  public void setBookingInstanceReport(BQBookingRetrieveInputModelBookingInstanceReport1 bookingInstanceReport) {
    this.bookingInstanceReport = bookingInstanceReport;
  }

  public BQBookingRetrieveInputModel bookingInstanceAnalysis(BQBookingRetrieveInputModelBookingInstanceAnalysis1 bookingInstanceAnalysis) {
    this.bookingInstanceAnalysis = bookingInstanceAnalysis;
    return this;
  }

   /**
   * Get bookingInstanceAnalysis
   * @return bookingInstanceAnalysis
  **/
  @Schema(description = "")
  public BQBookingRetrieveInputModelBookingInstanceAnalysis1 getBookingInstanceAnalysis() {
    return bookingInstanceAnalysis;
  }

  public void setBookingInstanceAnalysis(BQBookingRetrieveInputModelBookingInstanceAnalysis1 bookingInstanceAnalysis) {
    this.bookingInstanceAnalysis = bookingInstanceAnalysis;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BQBookingRetrieveInputModel bqBookingRetrieveInputModel = (BQBookingRetrieveInputModel) o;
    return Objects.equals(this.bookingRetrieveActionTaskRecord, bqBookingRetrieveInputModel.bookingRetrieveActionTaskRecord) &&
        Objects.equals(this.bookingRetrieveActionRequest, bqBookingRetrieveInputModel.bookingRetrieveActionRequest) &&
        Objects.equals(this.bookingInstanceReport, bqBookingRetrieveInputModel.bookingInstanceReport) &&
        Objects.equals(this.bookingInstanceAnalysis, bqBookingRetrieveInputModel.bookingInstanceAnalysis);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bookingRetrieveActionTaskRecord, bookingRetrieveActionRequest, bookingInstanceReport, bookingInstanceAnalysis);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BQBookingRetrieveInputModel {\n");
    
    sb.append("    bookingRetrieveActionTaskRecord: ").append(toIndentedString(bookingRetrieveActionTaskRecord)).append("\n");
    sb.append("    bookingRetrieveActionRequest: ").append(toIndentedString(bookingRetrieveActionRequest)).append("\n");
    sb.append("    bookingInstanceReport: ").append(toIndentedString(bookingInstanceReport)).append("\n");
    sb.append("    bookingInstanceAnalysis: ").append(toIndentedString(bookingInstanceAnalysis)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
