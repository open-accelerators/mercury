/*
 * Customer Offer
 * This service domain orchestrates the processing of a product offer for a new/established  customer.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.customeroffer.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.redhat.mercury.customeroffer.model.BQCorrespondenceandDocumentsRetrieveInputModelCorrespondenceandDocumentsInstanceAnalysis1;
import com.redhat.mercury.customeroffer.model.BQCorrespondenceandDocumentsRetrieveInputModelCorrespondenceandDocumentsInstanceReport1;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BQCorrespondenceandDocumentsRetrieveInputModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-19T11:10:08.827631+01:00[Europe/Madrid]")
public class BQCorrespondenceandDocumentsRetrieveInputModel {
  @SerializedName("correspondenceandDocumentsRetrieveActionTaskRecord")
  private Object correspondenceandDocumentsRetrieveActionTaskRecord = null;

  @SerializedName("correspondenceandDocumentsRetrieveActionRequest")
  private String correspondenceandDocumentsRetrieveActionRequest = null;

  @SerializedName("correspondenceandDocumentsInstanceReport")
  private BQCorrespondenceandDocumentsRetrieveInputModelCorrespondenceandDocumentsInstanceReport1 correspondenceandDocumentsInstanceReport = null;

  @SerializedName("correspondenceandDocumentsInstanceAnalysis")
  private BQCorrespondenceandDocumentsRetrieveInputModelCorrespondenceandDocumentsInstanceAnalysis1 correspondenceandDocumentsInstanceAnalysis = null;

  public BQCorrespondenceandDocumentsRetrieveInputModel correspondenceandDocumentsRetrieveActionTaskRecord(Object correspondenceandDocumentsRetrieveActionTaskRecord) {
    this.correspondenceandDocumentsRetrieveActionTaskRecord = correspondenceandDocumentsRetrieveActionTaskRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The retrieve service call consolidated processing record 
   * @return correspondenceandDocumentsRetrieveActionTaskRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The retrieve service call consolidated processing record ")
  public Object getCorrespondenceandDocumentsRetrieveActionTaskRecord() {
    return correspondenceandDocumentsRetrieveActionTaskRecord;
  }

  public void setCorrespondenceandDocumentsRetrieveActionTaskRecord(Object correspondenceandDocumentsRetrieveActionTaskRecord) {
    this.correspondenceandDocumentsRetrieveActionTaskRecord = correspondenceandDocumentsRetrieveActionTaskRecord;
  }

  public BQCorrespondenceandDocumentsRetrieveInputModel correspondenceandDocumentsRetrieveActionRequest(String correspondenceandDocumentsRetrieveActionRequest) {
    this.correspondenceandDocumentsRetrieveActionRequest = correspondenceandDocumentsRetrieveActionRequest;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the retrieve action service request (lists requested reports) 
   * @return correspondenceandDocumentsRetrieveActionRequest
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the retrieve action service request (lists requested reports) ")
  public String getCorrespondenceandDocumentsRetrieveActionRequest() {
    return correspondenceandDocumentsRetrieveActionRequest;
  }

  public void setCorrespondenceandDocumentsRetrieveActionRequest(String correspondenceandDocumentsRetrieveActionRequest) {
    this.correspondenceandDocumentsRetrieveActionRequest = correspondenceandDocumentsRetrieveActionRequest;
  }

  public BQCorrespondenceandDocumentsRetrieveInputModel correspondenceandDocumentsInstanceReport(BQCorrespondenceandDocumentsRetrieveInputModelCorrespondenceandDocumentsInstanceReport1 correspondenceandDocumentsInstanceReport) {
    this.correspondenceandDocumentsInstanceReport = correspondenceandDocumentsInstanceReport;
    return this;
  }

   /**
   * Get correspondenceandDocumentsInstanceReport
   * @return correspondenceandDocumentsInstanceReport
  **/
  @Schema(description = "")
  public BQCorrespondenceandDocumentsRetrieveInputModelCorrespondenceandDocumentsInstanceReport1 getCorrespondenceandDocumentsInstanceReport() {
    return correspondenceandDocumentsInstanceReport;
  }

  public void setCorrespondenceandDocumentsInstanceReport(BQCorrespondenceandDocumentsRetrieveInputModelCorrespondenceandDocumentsInstanceReport1 correspondenceandDocumentsInstanceReport) {
    this.correspondenceandDocumentsInstanceReport = correspondenceandDocumentsInstanceReport;
  }

  public BQCorrespondenceandDocumentsRetrieveInputModel correspondenceandDocumentsInstanceAnalysis(BQCorrespondenceandDocumentsRetrieveInputModelCorrespondenceandDocumentsInstanceAnalysis1 correspondenceandDocumentsInstanceAnalysis) {
    this.correspondenceandDocumentsInstanceAnalysis = correspondenceandDocumentsInstanceAnalysis;
    return this;
  }

   /**
   * Get correspondenceandDocumentsInstanceAnalysis
   * @return correspondenceandDocumentsInstanceAnalysis
  **/
  @Schema(description = "")
  public BQCorrespondenceandDocumentsRetrieveInputModelCorrespondenceandDocumentsInstanceAnalysis1 getCorrespondenceandDocumentsInstanceAnalysis() {
    return correspondenceandDocumentsInstanceAnalysis;
  }

  public void setCorrespondenceandDocumentsInstanceAnalysis(BQCorrespondenceandDocumentsRetrieveInputModelCorrespondenceandDocumentsInstanceAnalysis1 correspondenceandDocumentsInstanceAnalysis) {
    this.correspondenceandDocumentsInstanceAnalysis = correspondenceandDocumentsInstanceAnalysis;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BQCorrespondenceandDocumentsRetrieveInputModel bqCorrespondenceandDocumentsRetrieveInputModel = (BQCorrespondenceandDocumentsRetrieveInputModel) o;
    return Objects.equals(this.correspondenceandDocumentsRetrieveActionTaskRecord, bqCorrespondenceandDocumentsRetrieveInputModel.correspondenceandDocumentsRetrieveActionTaskRecord) &&
        Objects.equals(this.correspondenceandDocumentsRetrieveActionRequest, bqCorrespondenceandDocumentsRetrieveInputModel.correspondenceandDocumentsRetrieveActionRequest) &&
        Objects.equals(this.correspondenceandDocumentsInstanceReport, bqCorrespondenceandDocumentsRetrieveInputModel.correspondenceandDocumentsInstanceReport) &&
        Objects.equals(this.correspondenceandDocumentsInstanceAnalysis, bqCorrespondenceandDocumentsRetrieveInputModel.correspondenceandDocumentsInstanceAnalysis);
  }

  @Override
  public int hashCode() {
    return Objects.hash(correspondenceandDocumentsRetrieveActionTaskRecord, correspondenceandDocumentsRetrieveActionRequest, correspondenceandDocumentsInstanceReport, correspondenceandDocumentsInstanceAnalysis);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BQCorrespondenceandDocumentsRetrieveInputModel {\n");
    
    sb.append("    correspondenceandDocumentsRetrieveActionTaskRecord: ").append(toIndentedString(correspondenceandDocumentsRetrieveActionTaskRecord)).append("\n");
    sb.append("    correspondenceandDocumentsRetrieveActionRequest: ").append(toIndentedString(correspondenceandDocumentsRetrieveActionRequest)).append("\n");
    sb.append("    correspondenceandDocumentsInstanceReport: ").append(toIndentedString(correspondenceandDocumentsInstanceReport)).append("\n");
    sb.append("    correspondenceandDocumentsInstanceAnalysis: ").append(toIndentedString(correspondenceandDocumentsInstanceAnalysis)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
