/*
 * Customer Offer
 * This service domain orchestrates the processing of a product offer for a new/established  customer.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.customeroffer.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * InlineResponse20024
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-19T11:10:08.827631+01:00[Europe/Madrid]")
public class InlineResponse20024 {
  @SerializedName("collateralExchangeActionTaskReference")
  private String collateralExchangeActionTaskReference = null;

  @SerializedName("collateralExchangeActionTaskRecord")
  private Object collateralExchangeActionTaskRecord = null;

  @SerializedName("collateralExchangeActionResponse")
  private String collateralExchangeActionResponse = null;

  @SerializedName("collateralInstanceStatus")
  private String collateralInstanceStatus = null;

  public InlineResponse20024 collateralExchangeActionTaskReference(String collateralExchangeActionTaskReference) {
    this.collateralExchangeActionTaskReference = collateralExchangeActionTaskReference;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to a Collateral instance exchange service call 
   * @return collateralExchangeActionTaskReference
  **/
  @Schema(example = "CEATR722980", description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to a Collateral instance exchange service call ")
  public String getCollateralExchangeActionTaskReference() {
    return collateralExchangeActionTaskReference;
  }

  public void setCollateralExchangeActionTaskReference(String collateralExchangeActionTaskReference) {
    this.collateralExchangeActionTaskReference = collateralExchangeActionTaskReference;
  }

  public InlineResponse20024 collateralExchangeActionTaskRecord(Object collateralExchangeActionTaskRecord) {
    this.collateralExchangeActionTaskRecord = collateralExchangeActionTaskRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The exchange service call consolidated processing record 
   * @return collateralExchangeActionTaskRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The exchange service call consolidated processing record ")
  public Object getCollateralExchangeActionTaskRecord() {
    return collateralExchangeActionTaskRecord;
  }

  public void setCollateralExchangeActionTaskRecord(Object collateralExchangeActionTaskRecord) {
    this.collateralExchangeActionTaskRecord = collateralExchangeActionTaskRecord;
  }

  public InlineResponse20024 collateralExchangeActionResponse(String collateralExchangeActionResponse) {
    this.collateralExchangeActionResponse = collateralExchangeActionResponse;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the exchange action service response 
   * @return collateralExchangeActionResponse
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the exchange action service response ")
  public String getCollateralExchangeActionResponse() {
    return collateralExchangeActionResponse;
  }

  public void setCollateralExchangeActionResponse(String collateralExchangeActionResponse) {
    this.collateralExchangeActionResponse = collateralExchangeActionResponse;
  }

  public InlineResponse20024 collateralInstanceStatus(String collateralInstanceStatus) {
    this.collateralInstanceStatus = collateralInstanceStatus;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The status of the Collateral instance (e.g. accepted, rejected, verified) 
   * @return collateralInstanceStatus
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The status of the Collateral instance (e.g. accepted, rejected, verified) ")
  public String getCollateralInstanceStatus() {
    return collateralInstanceStatus;
  }

  public void setCollateralInstanceStatus(String collateralInstanceStatus) {
    this.collateralInstanceStatus = collateralInstanceStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20024 inlineResponse20024 = (InlineResponse20024) o;
    return Objects.equals(this.collateralExchangeActionTaskReference, inlineResponse20024.collateralExchangeActionTaskReference) &&
        Objects.equals(this.collateralExchangeActionTaskRecord, inlineResponse20024.collateralExchangeActionTaskRecord) &&
        Objects.equals(this.collateralExchangeActionResponse, inlineResponse20024.collateralExchangeActionResponse) &&
        Objects.equals(this.collateralInstanceStatus, inlineResponse20024.collateralInstanceStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(collateralExchangeActionTaskReference, collateralExchangeActionTaskRecord, collateralExchangeActionResponse, collateralInstanceStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20024 {\n");
    
    sb.append("    collateralExchangeActionTaskReference: ").append(toIndentedString(collateralExchangeActionTaskReference)).append("\n");
    sb.append("    collateralExchangeActionTaskRecord: ").append(toIndentedString(collateralExchangeActionTaskRecord)).append("\n");
    sb.append("    collateralExchangeActionResponse: ").append(toIndentedString(collateralExchangeActionResponse)).append("\n");
    sb.append("    collateralInstanceStatus: ").append(toIndentedString(collateralInstanceStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
