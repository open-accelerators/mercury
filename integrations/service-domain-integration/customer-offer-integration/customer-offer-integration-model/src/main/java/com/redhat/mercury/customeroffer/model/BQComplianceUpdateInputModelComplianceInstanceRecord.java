/*
 * Customer Offer
 * This service domain orchestrates the processing of a product offer for a new/established  customer.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.customeroffer.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BQComplianceUpdateInputModelComplianceInstanceRecord
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-19T11:10:08.827631+01:00[Europe/Madrid]")
public class BQComplianceUpdateInputModelComplianceInstanceRecord {
  @SerializedName("regulatoryComplianceCheckType")
  private String regulatoryComplianceCheckType = null;

  @SerializedName("regulatoryComplianceCheckRequirement")
  private String regulatoryComplianceCheckRequirement = null;

  @SerializedName("regulatoryComplianceCheckSubmission")
  private String regulatoryComplianceCheckSubmission = null;

  @SerializedName("regulatoryComplianceAdjustmentRequirement")
  private String regulatoryComplianceAdjustmentRequirement = null;

  @SerializedName("regulatoryComplianceCheckAssessment")
  private String regulatoryComplianceCheckAssessment = null;

  public BQComplianceUpdateInputModelComplianceInstanceRecord regulatoryComplianceCheckType(String regulatoryComplianceCheckType) {
    this.regulatoryComplianceCheckType = regulatoryComplianceCheckType;
    return this;
  }

   /**
   * &#x60;status: Registered&#x60;  iso-link: https://www.iso20022.org/standardsrepository/public/wqt/Description/mx/dico/bc/_K1lxwG7NEeO82qXU9yOWsg/elements/_ddIbAG7VEeO82qXU9yOWsg  bian-reference: RegulatoryComplianceCheck (as Assessmet).Type  general-info: The required check 
   * @return regulatoryComplianceCheckType
  **/
  @Schema(description = "`status: Registered`  iso-link: https://www.iso20022.org/standardsrepository/public/wqt/Description/mx/dico/bc/_K1lxwG7NEeO82qXU9yOWsg/elements/_ddIbAG7VEeO82qXU9yOWsg  bian-reference: RegulatoryComplianceCheck (as Assessmet).Type  general-info: The required check ")
  public String getRegulatoryComplianceCheckType() {
    return regulatoryComplianceCheckType;
  }

  public void setRegulatoryComplianceCheckType(String regulatoryComplianceCheckType) {
    this.regulatoryComplianceCheckType = regulatoryComplianceCheckType;
  }

  public BQComplianceUpdateInputModelComplianceInstanceRecord regulatoryComplianceCheckRequirement(String regulatoryComplianceCheckRequirement) {
    this.regulatoryComplianceCheckRequirement = regulatoryComplianceCheckRequirement;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Description of the compliance requirements 
   * @return regulatoryComplianceCheckRequirement
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Description of the compliance requirements ")
  public String getRegulatoryComplianceCheckRequirement() {
    return regulatoryComplianceCheckRequirement;
  }

  public void setRegulatoryComplianceCheckRequirement(String regulatoryComplianceCheckRequirement) {
    this.regulatoryComplianceCheckRequirement = regulatoryComplianceCheckRequirement;
  }

  public BQComplianceUpdateInputModelComplianceInstanceRecord regulatoryComplianceCheckSubmission(String regulatoryComplianceCheckSubmission) {
    this.regulatoryComplianceCheckSubmission = regulatoryComplianceCheckSubmission;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The submitted offer related materials 
   * @return regulatoryComplianceCheckSubmission
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The submitted offer related materials ")
  public String getRegulatoryComplianceCheckSubmission() {
    return regulatoryComplianceCheckSubmission;
  }

  public void setRegulatoryComplianceCheckSubmission(String regulatoryComplianceCheckSubmission) {
    this.regulatoryComplianceCheckSubmission = regulatoryComplianceCheckSubmission;
  }

  public BQComplianceUpdateInputModelComplianceInstanceRecord regulatoryComplianceAdjustmentRequirement(String regulatoryComplianceAdjustmentRequirement) {
    this.regulatoryComplianceAdjustmentRequirement = regulatoryComplianceAdjustmentRequirement;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Any required changes to the offer needed to comply 
   * @return regulatoryComplianceAdjustmentRequirement
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Any required changes to the offer needed to comply ")
  public String getRegulatoryComplianceAdjustmentRequirement() {
    return regulatoryComplianceAdjustmentRequirement;
  }

  public void setRegulatoryComplianceAdjustmentRequirement(String regulatoryComplianceAdjustmentRequirement) {
    this.regulatoryComplianceAdjustmentRequirement = regulatoryComplianceAdjustmentRequirement;
  }

  public BQComplianceUpdateInputModelComplianceInstanceRecord regulatoryComplianceCheckAssessment(String regulatoryComplianceCheckAssessment) {
    this.regulatoryComplianceCheckAssessment = regulatoryComplianceCheckAssessment;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The result of the compliance assessment 
   * @return regulatoryComplianceCheckAssessment
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The result of the compliance assessment ")
  public String getRegulatoryComplianceCheckAssessment() {
    return regulatoryComplianceCheckAssessment;
  }

  public void setRegulatoryComplianceCheckAssessment(String regulatoryComplianceCheckAssessment) {
    this.regulatoryComplianceCheckAssessment = regulatoryComplianceCheckAssessment;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BQComplianceUpdateInputModelComplianceInstanceRecord bqComplianceUpdateInputModelComplianceInstanceRecord = (BQComplianceUpdateInputModelComplianceInstanceRecord) o;
    return Objects.equals(this.regulatoryComplianceCheckType, bqComplianceUpdateInputModelComplianceInstanceRecord.regulatoryComplianceCheckType) &&
        Objects.equals(this.regulatoryComplianceCheckRequirement, bqComplianceUpdateInputModelComplianceInstanceRecord.regulatoryComplianceCheckRequirement) &&
        Objects.equals(this.regulatoryComplianceCheckSubmission, bqComplianceUpdateInputModelComplianceInstanceRecord.regulatoryComplianceCheckSubmission) &&
        Objects.equals(this.regulatoryComplianceAdjustmentRequirement, bqComplianceUpdateInputModelComplianceInstanceRecord.regulatoryComplianceAdjustmentRequirement) &&
        Objects.equals(this.regulatoryComplianceCheckAssessment, bqComplianceUpdateInputModelComplianceInstanceRecord.regulatoryComplianceCheckAssessment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(regulatoryComplianceCheckType, regulatoryComplianceCheckRequirement, regulatoryComplianceCheckSubmission, regulatoryComplianceAdjustmentRequirement, regulatoryComplianceCheckAssessment);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BQComplianceUpdateInputModelComplianceInstanceRecord {\n");
    
    sb.append("    regulatoryComplianceCheckType: ").append(toIndentedString(regulatoryComplianceCheckType)).append("\n");
    sb.append("    regulatoryComplianceCheckRequirement: ").append(toIndentedString(regulatoryComplianceCheckRequirement)).append("\n");
    sb.append("    regulatoryComplianceCheckSubmission: ").append(toIndentedString(regulatoryComplianceCheckSubmission)).append("\n");
    sb.append("    regulatoryComplianceAdjustmentRequirement: ").append(toIndentedString(regulatoryComplianceAdjustmentRequirement)).append("\n");
    sb.append("    regulatoryComplianceCheckAssessment: ").append(toIndentedString(regulatoryComplianceCheckAssessment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
