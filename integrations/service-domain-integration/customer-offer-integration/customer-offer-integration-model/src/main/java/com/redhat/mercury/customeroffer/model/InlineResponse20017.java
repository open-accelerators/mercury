/*
 * Customer Offer
 * This service domain orchestrates the processing of a product offer for a new/established  customer.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.customeroffer.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.redhat.mercury.customeroffer.model.CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateCustomerOfferProcedureInstanceRecord;
import com.redhat.mercury.customeroffer.model.CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateUnderwritingInstanceRecord;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * InlineResponse20017
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-19T11:10:08.827631+01:00[Europe/Madrid]")
public class InlineResponse20017 {
  @SerializedName("customerOfferProcedureInstanceRecord")
  private CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateCustomerOfferProcedureInstanceRecord customerOfferProcedureInstanceRecord = null;

  @SerializedName("underwritingInstanceRecord")
  private CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateUnderwritingInstanceRecord underwritingInstanceRecord = null;

  @SerializedName("underwritingUpdateActionTaskReference")
  private String underwritingUpdateActionTaskReference = null;

  @SerializedName("underwritingUpdateActionTaskRecord")
  private Object underwritingUpdateActionTaskRecord = null;

  @SerializedName("updateResponseRecord")
  private Object updateResponseRecord = null;

  public InlineResponse20017 customerOfferProcedureInstanceRecord(CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateCustomerOfferProcedureInstanceRecord customerOfferProcedureInstanceRecord) {
    this.customerOfferProcedureInstanceRecord = customerOfferProcedureInstanceRecord;
    return this;
  }

   /**
   * Get customerOfferProcedureInstanceRecord
   * @return customerOfferProcedureInstanceRecord
  **/
  @Schema(description = "")
  public CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateCustomerOfferProcedureInstanceRecord getCustomerOfferProcedureInstanceRecord() {
    return customerOfferProcedureInstanceRecord;
  }

  public void setCustomerOfferProcedureInstanceRecord(CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateCustomerOfferProcedureInstanceRecord customerOfferProcedureInstanceRecord) {
    this.customerOfferProcedureInstanceRecord = customerOfferProcedureInstanceRecord;
  }

  public InlineResponse20017 underwritingInstanceRecord(CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateUnderwritingInstanceRecord underwritingInstanceRecord) {
    this.underwritingInstanceRecord = underwritingInstanceRecord;
    return this;
  }

   /**
   * Get underwritingInstanceRecord
   * @return underwritingInstanceRecord
  **/
  @Schema(description = "")
  public CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateUnderwritingInstanceRecord getUnderwritingInstanceRecord() {
    return underwritingInstanceRecord;
  }

  public void setUnderwritingInstanceRecord(CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateUnderwritingInstanceRecord underwritingInstanceRecord) {
    this.underwritingInstanceRecord = underwritingInstanceRecord;
  }

  public InlineResponse20017 underwritingUpdateActionTaskReference(String underwritingUpdateActionTaskReference) {
    this.underwritingUpdateActionTaskReference = underwritingUpdateActionTaskReference;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to an update service call 
   * @return underwritingUpdateActionTaskReference
  **/
  @Schema(example = "UUATR762410", description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to an update service call ")
  public String getUnderwritingUpdateActionTaskReference() {
    return underwritingUpdateActionTaskReference;
  }

  public void setUnderwritingUpdateActionTaskReference(String underwritingUpdateActionTaskReference) {
    this.underwritingUpdateActionTaskReference = underwritingUpdateActionTaskReference;
  }

  public InlineResponse20017 underwritingUpdateActionTaskRecord(Object underwritingUpdateActionTaskRecord) {
    this.underwritingUpdateActionTaskRecord = underwritingUpdateActionTaskRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The update service call consolidated processing record 
   * @return underwritingUpdateActionTaskRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The update service call consolidated processing record ")
  public Object getUnderwritingUpdateActionTaskRecord() {
    return underwritingUpdateActionTaskRecord;
  }

  public void setUnderwritingUpdateActionTaskRecord(Object underwritingUpdateActionTaskRecord) {
    this.underwritingUpdateActionTaskRecord = underwritingUpdateActionTaskRecord;
  }

  public InlineResponse20017 updateResponseRecord(Object updateResponseRecord) {
    this.updateResponseRecord = updateResponseRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: Details of the Update action service response 
   * @return updateResponseRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: Details of the Update action service response ")
  public Object getUpdateResponseRecord() {
    return updateResponseRecord;
  }

  public void setUpdateResponseRecord(Object updateResponseRecord) {
    this.updateResponseRecord = updateResponseRecord;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20017 inlineResponse20017 = (InlineResponse20017) o;
    return Objects.equals(this.customerOfferProcedureInstanceRecord, inlineResponse20017.customerOfferProcedureInstanceRecord) &&
        Objects.equals(this.underwritingInstanceRecord, inlineResponse20017.underwritingInstanceRecord) &&
        Objects.equals(this.underwritingUpdateActionTaskReference, inlineResponse20017.underwritingUpdateActionTaskReference) &&
        Objects.equals(this.underwritingUpdateActionTaskRecord, inlineResponse20017.underwritingUpdateActionTaskRecord) &&
        Objects.equals(this.updateResponseRecord, inlineResponse20017.updateResponseRecord);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerOfferProcedureInstanceRecord, underwritingInstanceRecord, underwritingUpdateActionTaskReference, underwritingUpdateActionTaskRecord, updateResponseRecord);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20017 {\n");
    
    sb.append("    customerOfferProcedureInstanceRecord: ").append(toIndentedString(customerOfferProcedureInstanceRecord)).append("\n");
    sb.append("    underwritingInstanceRecord: ").append(toIndentedString(underwritingInstanceRecord)).append("\n");
    sb.append("    underwritingUpdateActionTaskReference: ").append(toIndentedString(underwritingUpdateActionTaskReference)).append("\n");
    sb.append("    underwritingUpdateActionTaskRecord: ").append(toIndentedString(underwritingUpdateActionTaskRecord)).append("\n");
    sb.append("    updateResponseRecord: ").append(toIndentedString(updateResponseRecord)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
