/*
 * Customer Offer
 * This service domain orchestrates the processing of a product offer for a new/established  customer.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.customeroffer.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BQProductRetrieveOutputModelProductInstanceReport1
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-19T11:10:08.827631+01:00[Europe/Madrid]")
public class BQProductRetrieveOutputModelProductInstanceReport1 {
  @SerializedName("productInstanceReportRecord")
  private Object productInstanceReportRecord = null;

  @SerializedName("productInstanceReportType")
  private String productInstanceReportType = null;

  @SerializedName("productInstanceReportParameters")
  private String productInstanceReportParameters = null;

  @SerializedName("productInstanceReport")
  private Object productInstanceReport = null;

  public BQProductRetrieveOutputModelProductInstanceReport1 productInstanceReportRecord(Object productInstanceReportRecord) {
    this.productInstanceReportRecord = productInstanceReportRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The input information used to assemble the report that can be on-going, periodic and actual and projected 
   * @return productInstanceReportRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The input information used to assemble the report that can be on-going, periodic and actual and projected ")
  public Object getProductInstanceReportRecord() {
    return productInstanceReportRecord;
  }

  public void setProductInstanceReportRecord(Object productInstanceReportRecord) {
    this.productInstanceReportRecord = productInstanceReportRecord;
  }

  public BQProductRetrieveOutputModelProductInstanceReport1 productInstanceReportType(String productInstanceReportType) {
    this.productInstanceReportType = productInstanceReportType;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Code  general-info: The type of external report available 
   * @return productInstanceReportType
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Code  general-info: The type of external report available ")
  public String getProductInstanceReportType() {
    return productInstanceReportType;
  }

  public void setProductInstanceReportType(String productInstanceReportType) {
    this.productInstanceReportType = productInstanceReportType;
  }

  public BQProductRetrieveOutputModelProductInstanceReport1 productInstanceReportParameters(String productInstanceReportParameters) {
    this.productInstanceReportParameters = productInstanceReportParameters;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The selection parameters for the report (e.g. period, content type) 
   * @return productInstanceReportParameters
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The selection parameters for the report (e.g. period, content type) ")
  public String getProductInstanceReportParameters() {
    return productInstanceReportParameters;
  }

  public void setProductInstanceReportParameters(String productInstanceReportParameters) {
    this.productInstanceReportParameters = productInstanceReportParameters;
  }

  public BQProductRetrieveOutputModelProductInstanceReport1 productInstanceReport(Object productInstanceReport) {
    this.productInstanceReport = productInstanceReport;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The external report in any suitable form including selection filters where appropriate 
   * @return productInstanceReport
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The external report in any suitable form including selection filters where appropriate ")
  public Object getProductInstanceReport() {
    return productInstanceReport;
  }

  public void setProductInstanceReport(Object productInstanceReport) {
    this.productInstanceReport = productInstanceReport;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BQProductRetrieveOutputModelProductInstanceReport1 bqProductRetrieveOutputModelProductInstanceReport1 = (BQProductRetrieveOutputModelProductInstanceReport1) o;
    return Objects.equals(this.productInstanceReportRecord, bqProductRetrieveOutputModelProductInstanceReport1.productInstanceReportRecord) &&
        Objects.equals(this.productInstanceReportType, bqProductRetrieveOutputModelProductInstanceReport1.productInstanceReportType) &&
        Objects.equals(this.productInstanceReportParameters, bqProductRetrieveOutputModelProductInstanceReport1.productInstanceReportParameters) &&
        Objects.equals(this.productInstanceReport, bqProductRetrieveOutputModelProductInstanceReport1.productInstanceReport);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productInstanceReportRecord, productInstanceReportType, productInstanceReportParameters, productInstanceReport);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BQProductRetrieveOutputModelProductInstanceReport1 {\n");
    
    sb.append("    productInstanceReportRecord: ").append(toIndentedString(productInstanceReportRecord)).append("\n");
    sb.append("    productInstanceReportType: ").append(toIndentedString(productInstanceReportType)).append("\n");
    sb.append("    productInstanceReportParameters: ").append(toIndentedString(productInstanceReportParameters)).append("\n");
    sb.append("    productInstanceReport: ").append(toIndentedString(productInstanceReport)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
