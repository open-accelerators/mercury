/*
 * Customer Offer
 * This service domain orchestrates the processing of a product offer for a new/established  customer.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.customeroffer.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BQDisclosuresExchangeOutputModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-19T11:10:08.827631+01:00[Europe/Madrid]")
public class BQDisclosuresExchangeOutputModel {
  @SerializedName("disclosuresExchangeActionTaskReference")
  private String disclosuresExchangeActionTaskReference = null;

  @SerializedName("disclosuresExchangeActionTaskRecord")
  private Object disclosuresExchangeActionTaskRecord = null;

  @SerializedName("disclosuresExchangeActionResponse")
  private String disclosuresExchangeActionResponse = null;

  @SerializedName("disclosuresInstanceStatus")
  private String disclosuresInstanceStatus = null;

  public BQDisclosuresExchangeOutputModel disclosuresExchangeActionTaskReference(String disclosuresExchangeActionTaskReference) {
    this.disclosuresExchangeActionTaskReference = disclosuresExchangeActionTaskReference;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to a Disclosures instance exchange service call 
   * @return disclosuresExchangeActionTaskReference
  **/
  @Schema(example = "DEATR754071", description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to a Disclosures instance exchange service call ")
  public String getDisclosuresExchangeActionTaskReference() {
    return disclosuresExchangeActionTaskReference;
  }

  public void setDisclosuresExchangeActionTaskReference(String disclosuresExchangeActionTaskReference) {
    this.disclosuresExchangeActionTaskReference = disclosuresExchangeActionTaskReference;
  }

  public BQDisclosuresExchangeOutputModel disclosuresExchangeActionTaskRecord(Object disclosuresExchangeActionTaskRecord) {
    this.disclosuresExchangeActionTaskRecord = disclosuresExchangeActionTaskRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The exchange service call consolidated processing record 
   * @return disclosuresExchangeActionTaskRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The exchange service call consolidated processing record ")
  public Object getDisclosuresExchangeActionTaskRecord() {
    return disclosuresExchangeActionTaskRecord;
  }

  public void setDisclosuresExchangeActionTaskRecord(Object disclosuresExchangeActionTaskRecord) {
    this.disclosuresExchangeActionTaskRecord = disclosuresExchangeActionTaskRecord;
  }

  public BQDisclosuresExchangeOutputModel disclosuresExchangeActionResponse(String disclosuresExchangeActionResponse) {
    this.disclosuresExchangeActionResponse = disclosuresExchangeActionResponse;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the exchange action service response 
   * @return disclosuresExchangeActionResponse
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the exchange action service response ")
  public String getDisclosuresExchangeActionResponse() {
    return disclosuresExchangeActionResponse;
  }

  public void setDisclosuresExchangeActionResponse(String disclosuresExchangeActionResponse) {
    this.disclosuresExchangeActionResponse = disclosuresExchangeActionResponse;
  }

  public BQDisclosuresExchangeOutputModel disclosuresInstanceStatus(String disclosuresInstanceStatus) {
    this.disclosuresInstanceStatus = disclosuresInstanceStatus;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The status of the Disclosures instance (e.g. accepted, rejected, verified) 
   * @return disclosuresInstanceStatus
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The status of the Disclosures instance (e.g. accepted, rejected, verified) ")
  public String getDisclosuresInstanceStatus() {
    return disclosuresInstanceStatus;
  }

  public void setDisclosuresInstanceStatus(String disclosuresInstanceStatus) {
    this.disclosuresInstanceStatus = disclosuresInstanceStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BQDisclosuresExchangeOutputModel bqDisclosuresExchangeOutputModel = (BQDisclosuresExchangeOutputModel) o;
    return Objects.equals(this.disclosuresExchangeActionTaskReference, bqDisclosuresExchangeOutputModel.disclosuresExchangeActionTaskReference) &&
        Objects.equals(this.disclosuresExchangeActionTaskRecord, bqDisclosuresExchangeOutputModel.disclosuresExchangeActionTaskRecord) &&
        Objects.equals(this.disclosuresExchangeActionResponse, bqDisclosuresExchangeOutputModel.disclosuresExchangeActionResponse) &&
        Objects.equals(this.disclosuresInstanceStatus, bqDisclosuresExchangeOutputModel.disclosuresInstanceStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(disclosuresExchangeActionTaskReference, disclosuresExchangeActionTaskRecord, disclosuresExchangeActionResponse, disclosuresInstanceStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BQDisclosuresExchangeOutputModel {\n");
    
    sb.append("    disclosuresExchangeActionTaskReference: ").append(toIndentedString(disclosuresExchangeActionTaskReference)).append("\n");
    sb.append("    disclosuresExchangeActionTaskRecord: ").append(toIndentedString(disclosuresExchangeActionTaskRecord)).append("\n");
    sb.append("    disclosuresExchangeActionResponse: ").append(toIndentedString(disclosuresExchangeActionResponse)).append("\n");
    sb.append("    disclosuresInstanceStatus: ").append(toIndentedString(disclosuresInstanceStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
