/*
 * Customer Offer
 * This service domain orchestrates the processing of a product offer for a new/established  customer.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.customeroffer.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.redhat.mercury.customeroffer.model.CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidexchangeCustomerOfferProcedureExchangeActionRequest;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BQCorrespondenceandDocumentsExchangeInputModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-19T11:10:08.827631+01:00[Europe/Madrid]")
public class BQCorrespondenceandDocumentsExchangeInputModel {
  @SerializedName("customerOfferProcedureInstanceReference")
  private String customerOfferProcedureInstanceReference = null;

  @SerializedName("correspondenceandDocumentsInstanceReference")
  private String correspondenceandDocumentsInstanceReference = null;

  @SerializedName("correspondenceandDocumentsExchangeActionTaskRecord")
  private Object correspondenceandDocumentsExchangeActionTaskRecord = null;

  @SerializedName("correspondenceandDocumentsExchangeActionRequest")
  private CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidexchangeCustomerOfferProcedureExchangeActionRequest correspondenceandDocumentsExchangeActionRequest = null;

  public BQCorrespondenceandDocumentsExchangeInputModel customerOfferProcedureInstanceReference(String customerOfferProcedureInstanceReference) {
    this.customerOfferProcedureInstanceReference = customerOfferProcedureInstanceReference;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to the parent Customer Offer Procedure instance 
   * @return customerOfferProcedureInstanceReference
  **/
  @Schema(example = "COPIR709918", description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to the parent Customer Offer Procedure instance ")
  public String getCustomerOfferProcedureInstanceReference() {
    return customerOfferProcedureInstanceReference;
  }

  public void setCustomerOfferProcedureInstanceReference(String customerOfferProcedureInstanceReference) {
    this.customerOfferProcedureInstanceReference = customerOfferProcedureInstanceReference;
  }

  public BQCorrespondenceandDocumentsExchangeInputModel correspondenceandDocumentsInstanceReference(String correspondenceandDocumentsInstanceReference) {
    this.correspondenceandDocumentsInstanceReference = correspondenceandDocumentsInstanceReference;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to the Correspondence and Documents instance 
   * @return correspondenceandDocumentsInstanceReference
  **/
  @Schema(example = "CADIR751617", description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to the Correspondence and Documents instance ")
  public String getCorrespondenceandDocumentsInstanceReference() {
    return correspondenceandDocumentsInstanceReference;
  }

  public void setCorrespondenceandDocumentsInstanceReference(String correspondenceandDocumentsInstanceReference) {
    this.correspondenceandDocumentsInstanceReference = correspondenceandDocumentsInstanceReference;
  }

  public BQCorrespondenceandDocumentsExchangeInputModel correspondenceandDocumentsExchangeActionTaskRecord(Object correspondenceandDocumentsExchangeActionTaskRecord) {
    this.correspondenceandDocumentsExchangeActionTaskRecord = correspondenceandDocumentsExchangeActionTaskRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The exchange service call consolidated processing record 
   * @return correspondenceandDocumentsExchangeActionTaskRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The exchange service call consolidated processing record ")
  public Object getCorrespondenceandDocumentsExchangeActionTaskRecord() {
    return correspondenceandDocumentsExchangeActionTaskRecord;
  }

  public void setCorrespondenceandDocumentsExchangeActionTaskRecord(Object correspondenceandDocumentsExchangeActionTaskRecord) {
    this.correspondenceandDocumentsExchangeActionTaskRecord = correspondenceandDocumentsExchangeActionTaskRecord;
  }

  public BQCorrespondenceandDocumentsExchangeInputModel correspondenceandDocumentsExchangeActionRequest(CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidexchangeCustomerOfferProcedureExchangeActionRequest correspondenceandDocumentsExchangeActionRequest) {
    this.correspondenceandDocumentsExchangeActionRequest = correspondenceandDocumentsExchangeActionRequest;
    return this;
  }

   /**
   * Get correspondenceandDocumentsExchangeActionRequest
   * @return correspondenceandDocumentsExchangeActionRequest
  **/
  @Schema(description = "")
  public CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidexchangeCustomerOfferProcedureExchangeActionRequest getCorrespondenceandDocumentsExchangeActionRequest() {
    return correspondenceandDocumentsExchangeActionRequest;
  }

  public void setCorrespondenceandDocumentsExchangeActionRequest(CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidexchangeCustomerOfferProcedureExchangeActionRequest correspondenceandDocumentsExchangeActionRequest) {
    this.correspondenceandDocumentsExchangeActionRequest = correspondenceandDocumentsExchangeActionRequest;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BQCorrespondenceandDocumentsExchangeInputModel bqCorrespondenceandDocumentsExchangeInputModel = (BQCorrespondenceandDocumentsExchangeInputModel) o;
    return Objects.equals(this.customerOfferProcedureInstanceReference, bqCorrespondenceandDocumentsExchangeInputModel.customerOfferProcedureInstanceReference) &&
        Objects.equals(this.correspondenceandDocumentsInstanceReference, bqCorrespondenceandDocumentsExchangeInputModel.correspondenceandDocumentsInstanceReference) &&
        Objects.equals(this.correspondenceandDocumentsExchangeActionTaskRecord, bqCorrespondenceandDocumentsExchangeInputModel.correspondenceandDocumentsExchangeActionTaskRecord) &&
        Objects.equals(this.correspondenceandDocumentsExchangeActionRequest, bqCorrespondenceandDocumentsExchangeInputModel.correspondenceandDocumentsExchangeActionRequest);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerOfferProcedureInstanceReference, correspondenceandDocumentsInstanceReference, correspondenceandDocumentsExchangeActionTaskRecord, correspondenceandDocumentsExchangeActionRequest);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BQCorrespondenceandDocumentsExchangeInputModel {\n");
    
    sb.append("    customerOfferProcedureInstanceReference: ").append(toIndentedString(customerOfferProcedureInstanceReference)).append("\n");
    sb.append("    correspondenceandDocumentsInstanceReference: ").append(toIndentedString(correspondenceandDocumentsInstanceReference)).append("\n");
    sb.append("    correspondenceandDocumentsExchangeActionTaskRecord: ").append(toIndentedString(correspondenceandDocumentsExchangeActionTaskRecord)).append("\n");
    sb.append("    correspondenceandDocumentsExchangeActionRequest: ").append(toIndentedString(correspondenceandDocumentsExchangeActionRequest)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
