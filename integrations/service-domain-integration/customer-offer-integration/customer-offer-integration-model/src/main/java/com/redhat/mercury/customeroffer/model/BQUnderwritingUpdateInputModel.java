/*
 * Customer Offer
 * This service domain orchestrates the processing of a product offer for a new/established  customer.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.customeroffer.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.redhat.mercury.customeroffer.model.CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateCustomerOfferProcedureInstanceRecord;
import com.redhat.mercury.customeroffer.model.CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateUnderwritingInstanceRecord;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BQUnderwritingUpdateInputModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-19T11:10:08.827631+01:00[Europe/Madrid]")
public class BQUnderwritingUpdateInputModel {
  @SerializedName("customerOfferProcedureInstanceRecord")
  private CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateCustomerOfferProcedureInstanceRecord customerOfferProcedureInstanceRecord = null;

  @SerializedName("customerOfferProcedureInstanceReference")
  private String customerOfferProcedureInstanceReference = null;

  @SerializedName("underwritingInstanceReference")
  private String underwritingInstanceReference = null;

  @SerializedName("underwritingInstanceRecord")
  private CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateUnderwritingInstanceRecord underwritingInstanceRecord = null;

  @SerializedName("underwritingUpdateActionTaskRecord")
  private Object underwritingUpdateActionTaskRecord = null;

  @SerializedName("underwritingUpdateActionRequest")
  private String underwritingUpdateActionRequest = null;

  public BQUnderwritingUpdateInputModel customerOfferProcedureInstanceRecord(CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateCustomerOfferProcedureInstanceRecord customerOfferProcedureInstanceRecord) {
    this.customerOfferProcedureInstanceRecord = customerOfferProcedureInstanceRecord;
    return this;
  }

   /**
   * Get customerOfferProcedureInstanceRecord
   * @return customerOfferProcedureInstanceRecord
  **/
  @Schema(description = "")
  public CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateCustomerOfferProcedureInstanceRecord getCustomerOfferProcedureInstanceRecord() {
    return customerOfferProcedureInstanceRecord;
  }

  public void setCustomerOfferProcedureInstanceRecord(CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateCustomerOfferProcedureInstanceRecord customerOfferProcedureInstanceRecord) {
    this.customerOfferProcedureInstanceRecord = customerOfferProcedureInstanceRecord;
  }

  public BQUnderwritingUpdateInputModel customerOfferProcedureInstanceReference(String customerOfferProcedureInstanceReference) {
    this.customerOfferProcedureInstanceReference = customerOfferProcedureInstanceReference;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to the parent Customer Offer Procedure instance 
   * @return customerOfferProcedureInstanceReference
  **/
  @Schema(example = "COPIR764167", description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to the parent Customer Offer Procedure instance ")
  public String getCustomerOfferProcedureInstanceReference() {
    return customerOfferProcedureInstanceReference;
  }

  public void setCustomerOfferProcedureInstanceReference(String customerOfferProcedureInstanceReference) {
    this.customerOfferProcedureInstanceReference = customerOfferProcedureInstanceReference;
  }

  public BQUnderwritingUpdateInputModel underwritingInstanceReference(String underwritingInstanceReference) {
    this.underwritingInstanceReference = underwritingInstanceReference;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to the Underwriting instance 
   * @return underwritingInstanceReference
  **/
  @Schema(example = "UIR711787", description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to the Underwriting instance ")
  public String getUnderwritingInstanceReference() {
    return underwritingInstanceReference;
  }

  public void setUnderwritingInstanceReference(String underwritingInstanceReference) {
    this.underwritingInstanceReference = underwritingInstanceReference;
  }

  public BQUnderwritingUpdateInputModel underwritingInstanceRecord(CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateUnderwritingInstanceRecord underwritingInstanceRecord) {
    this.underwritingInstanceRecord = underwritingInstanceRecord;
    return this;
  }

   /**
   * Get underwritingInstanceRecord
   * @return underwritingInstanceRecord
  **/
  @Schema(description = "")
  public CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateUnderwritingInstanceRecord getUnderwritingInstanceRecord() {
    return underwritingInstanceRecord;
  }

  public void setUnderwritingInstanceRecord(CustomeroffersdreferenceidcustomerofferprocedurecrreferenceidunderwritingbqreferenceidupdateUnderwritingInstanceRecord underwritingInstanceRecord) {
    this.underwritingInstanceRecord = underwritingInstanceRecord;
  }

  public BQUnderwritingUpdateInputModel underwritingUpdateActionTaskRecord(Object underwritingUpdateActionTaskRecord) {
    this.underwritingUpdateActionTaskRecord = underwritingUpdateActionTaskRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The update service call consolidated processing record 
   * @return underwritingUpdateActionTaskRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The update service call consolidated processing record ")
  public Object getUnderwritingUpdateActionTaskRecord() {
    return underwritingUpdateActionTaskRecord;
  }

  public void setUnderwritingUpdateActionTaskRecord(Object underwritingUpdateActionTaskRecord) {
    this.underwritingUpdateActionTaskRecord = underwritingUpdateActionTaskRecord;
  }

  public BQUnderwritingUpdateInputModel underwritingUpdateActionRequest(String underwritingUpdateActionRequest) {
    this.underwritingUpdateActionRequest = underwritingUpdateActionRequest;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the update action service request 
   * @return underwritingUpdateActionRequest
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the update action service request ")
  public String getUnderwritingUpdateActionRequest() {
    return underwritingUpdateActionRequest;
  }

  public void setUnderwritingUpdateActionRequest(String underwritingUpdateActionRequest) {
    this.underwritingUpdateActionRequest = underwritingUpdateActionRequest;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BQUnderwritingUpdateInputModel bqUnderwritingUpdateInputModel = (BQUnderwritingUpdateInputModel) o;
    return Objects.equals(this.customerOfferProcedureInstanceRecord, bqUnderwritingUpdateInputModel.customerOfferProcedureInstanceRecord) &&
        Objects.equals(this.customerOfferProcedureInstanceReference, bqUnderwritingUpdateInputModel.customerOfferProcedureInstanceReference) &&
        Objects.equals(this.underwritingInstanceReference, bqUnderwritingUpdateInputModel.underwritingInstanceReference) &&
        Objects.equals(this.underwritingInstanceRecord, bqUnderwritingUpdateInputModel.underwritingInstanceRecord) &&
        Objects.equals(this.underwritingUpdateActionTaskRecord, bqUnderwritingUpdateInputModel.underwritingUpdateActionTaskRecord) &&
        Objects.equals(this.underwritingUpdateActionRequest, bqUnderwritingUpdateInputModel.underwritingUpdateActionRequest);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerOfferProcedureInstanceRecord, customerOfferProcedureInstanceReference, underwritingInstanceReference, underwritingInstanceRecord, underwritingUpdateActionTaskRecord, underwritingUpdateActionRequest);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BQUnderwritingUpdateInputModel {\n");
    
    sb.append("    customerOfferProcedureInstanceRecord: ").append(toIndentedString(customerOfferProcedureInstanceRecord)).append("\n");
    sb.append("    customerOfferProcedureInstanceReference: ").append(toIndentedString(customerOfferProcedureInstanceReference)).append("\n");
    sb.append("    underwritingInstanceReference: ").append(toIndentedString(underwritingInstanceReference)).append("\n");
    sb.append("    underwritingInstanceRecord: ").append(toIndentedString(underwritingInstanceRecord)).append("\n");
    sb.append("    underwritingUpdateActionTaskRecord: ").append(toIndentedString(underwritingUpdateActionTaskRecord)).append("\n");
    sb.append("    underwritingUpdateActionRequest: ").append(toIndentedString(underwritingUpdateActionRequest)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
