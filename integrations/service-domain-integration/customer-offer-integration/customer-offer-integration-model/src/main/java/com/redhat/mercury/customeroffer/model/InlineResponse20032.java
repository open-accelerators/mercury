/*
 * Customer Offer
 * This service domain orchestrates the processing of a product offer for a new/established  customer.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.customeroffer.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * InlineResponse20032
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-19T11:10:08.827631+01:00[Europe/Madrid]")
public class InlineResponse20032 {
  @SerializedName("agreementExchangeActionTaskReference")
  private String agreementExchangeActionTaskReference = null;

  @SerializedName("agreementExchangeActionTaskRecord")
  private Object agreementExchangeActionTaskRecord = null;

  @SerializedName("agreementExchangeActionResponse")
  private String agreementExchangeActionResponse = null;

  @SerializedName("agreementInstanceStatus")
  private String agreementInstanceStatus = null;

  public InlineResponse20032 agreementExchangeActionTaskReference(String agreementExchangeActionTaskReference) {
    this.agreementExchangeActionTaskReference = agreementExchangeActionTaskReference;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to a Agreement instance exchange service call 
   * @return agreementExchangeActionTaskReference
  **/
  @Schema(example = "AEATR770257", description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to a Agreement instance exchange service call ")
  public String getAgreementExchangeActionTaskReference() {
    return agreementExchangeActionTaskReference;
  }

  public void setAgreementExchangeActionTaskReference(String agreementExchangeActionTaskReference) {
    this.agreementExchangeActionTaskReference = agreementExchangeActionTaskReference;
  }

  public InlineResponse20032 agreementExchangeActionTaskRecord(Object agreementExchangeActionTaskRecord) {
    this.agreementExchangeActionTaskRecord = agreementExchangeActionTaskRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The exchange service call consolidated processing record 
   * @return agreementExchangeActionTaskRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The exchange service call consolidated processing record ")
  public Object getAgreementExchangeActionTaskRecord() {
    return agreementExchangeActionTaskRecord;
  }

  public void setAgreementExchangeActionTaskRecord(Object agreementExchangeActionTaskRecord) {
    this.agreementExchangeActionTaskRecord = agreementExchangeActionTaskRecord;
  }

  public InlineResponse20032 agreementExchangeActionResponse(String agreementExchangeActionResponse) {
    this.agreementExchangeActionResponse = agreementExchangeActionResponse;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the exchange action service response 
   * @return agreementExchangeActionResponse
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the exchange action service response ")
  public String getAgreementExchangeActionResponse() {
    return agreementExchangeActionResponse;
  }

  public void setAgreementExchangeActionResponse(String agreementExchangeActionResponse) {
    this.agreementExchangeActionResponse = agreementExchangeActionResponse;
  }

  public InlineResponse20032 agreementInstanceStatus(String agreementInstanceStatus) {
    this.agreementInstanceStatus = agreementInstanceStatus;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The status of the Agreement instance (e.g. accepted, rejected, verified) 
   * @return agreementInstanceStatus
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The status of the Agreement instance (e.g. accepted, rejected, verified) ")
  public String getAgreementInstanceStatus() {
    return agreementInstanceStatus;
  }

  public void setAgreementInstanceStatus(String agreementInstanceStatus) {
    this.agreementInstanceStatus = agreementInstanceStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20032 inlineResponse20032 = (InlineResponse20032) o;
    return Objects.equals(this.agreementExchangeActionTaskReference, inlineResponse20032.agreementExchangeActionTaskReference) &&
        Objects.equals(this.agreementExchangeActionTaskRecord, inlineResponse20032.agreementExchangeActionTaskRecord) &&
        Objects.equals(this.agreementExchangeActionResponse, inlineResponse20032.agreementExchangeActionResponse) &&
        Objects.equals(this.agreementInstanceStatus, inlineResponse20032.agreementInstanceStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agreementExchangeActionTaskReference, agreementExchangeActionTaskRecord, agreementExchangeActionResponse, agreementInstanceStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20032 {\n");
    
    sb.append("    agreementExchangeActionTaskReference: ").append(toIndentedString(agreementExchangeActionTaskReference)).append("\n");
    sb.append("    agreementExchangeActionTaskRecord: ").append(toIndentedString(agreementExchangeActionTaskRecord)).append("\n");
    sb.append("    agreementExchangeActionResponse: ").append(toIndentedString(agreementExchangeActionResponse)).append("\n");
    sb.append("    agreementInstanceStatus: ").append(toIndentedString(agreementInstanceStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
