/*
 * Customer Offer
 * This service domain orchestrates the processing of a product offer for a new/established  customer.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.customeroffer.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BQProductInitializationRetrieveOutputModelProductInitializationInstanceAnalysis1
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-19T11:10:08.827631+01:00[Europe/Madrid]")
public class BQProductInitializationRetrieveOutputModelProductInitializationInstanceAnalysis1 {
  @SerializedName("productInitializationInstanceAnalysisRecord")
  private Object productInitializationInstanceAnalysisRecord = null;

  @SerializedName("productInitializationInstanceAnalysisReportType")
  private String productInitializationInstanceAnalysisReportType = null;

  @SerializedName("productInitializationInstanceAnalysisParameters")
  private String productInitializationInstanceAnalysisParameters = null;

  @SerializedName("productInitializationInstanceAnalysisReport")
  private Object productInitializationInstanceAnalysisReport = null;

  public BQProductInitializationRetrieveOutputModelProductInitializationInstanceAnalysis1 productInitializationInstanceAnalysisRecord(Object productInitializationInstanceAnalysisRecord) {
    this.productInitializationInstanceAnalysisRecord = productInitializationInstanceAnalysisRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The inputs and results of the instance analysis that can be on-going, periodic and actual and projected 
   * @return productInitializationInstanceAnalysisRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The inputs and results of the instance analysis that can be on-going, periodic and actual and projected ")
  public Object getProductInitializationInstanceAnalysisRecord() {
    return productInitializationInstanceAnalysisRecord;
  }

  public void setProductInitializationInstanceAnalysisRecord(Object productInitializationInstanceAnalysisRecord) {
    this.productInitializationInstanceAnalysisRecord = productInitializationInstanceAnalysisRecord;
  }

  public BQProductInitializationRetrieveOutputModelProductInitializationInstanceAnalysis1 productInitializationInstanceAnalysisReportType(String productInitializationInstanceAnalysisReportType) {
    this.productInitializationInstanceAnalysisReportType = productInitializationInstanceAnalysisReportType;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Code  general-info: The type of external performance analysis report available 
   * @return productInitializationInstanceAnalysisReportType
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Code  general-info: The type of external performance analysis report available ")
  public String getProductInitializationInstanceAnalysisReportType() {
    return productInitializationInstanceAnalysisReportType;
  }

  public void setProductInitializationInstanceAnalysisReportType(String productInitializationInstanceAnalysisReportType) {
    this.productInitializationInstanceAnalysisReportType = productInitializationInstanceAnalysisReportType;
  }

  public BQProductInitializationRetrieveOutputModelProductInitializationInstanceAnalysis1 productInitializationInstanceAnalysisParameters(String productInitializationInstanceAnalysisParameters) {
    this.productInitializationInstanceAnalysisParameters = productInitializationInstanceAnalysisParameters;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The selection parameters for the analysis (e.g. period, algorithm type) 
   * @return productInitializationInstanceAnalysisParameters
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The selection parameters for the analysis (e.g. period, algorithm type) ")
  public String getProductInitializationInstanceAnalysisParameters() {
    return productInitializationInstanceAnalysisParameters;
  }

  public void setProductInitializationInstanceAnalysisParameters(String productInitializationInstanceAnalysisParameters) {
    this.productInitializationInstanceAnalysisParameters = productInitializationInstanceAnalysisParameters;
  }

  public BQProductInitializationRetrieveOutputModelProductInitializationInstanceAnalysis1 productInitializationInstanceAnalysisReport(Object productInitializationInstanceAnalysisReport) {
    this.productInitializationInstanceAnalysisReport = productInitializationInstanceAnalysisReport;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The external analysis report in any suitable form including selection filters where appropriate 
   * @return productInitializationInstanceAnalysisReport
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The external analysis report in any suitable form including selection filters where appropriate ")
  public Object getProductInitializationInstanceAnalysisReport() {
    return productInitializationInstanceAnalysisReport;
  }

  public void setProductInitializationInstanceAnalysisReport(Object productInitializationInstanceAnalysisReport) {
    this.productInitializationInstanceAnalysisReport = productInitializationInstanceAnalysisReport;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BQProductInitializationRetrieveOutputModelProductInitializationInstanceAnalysis1 bqProductInitializationRetrieveOutputModelProductInitializationInstanceAnalysis1 = (BQProductInitializationRetrieveOutputModelProductInitializationInstanceAnalysis1) o;
    return Objects.equals(this.productInitializationInstanceAnalysisRecord, bqProductInitializationRetrieveOutputModelProductInitializationInstanceAnalysis1.productInitializationInstanceAnalysisRecord) &&
        Objects.equals(this.productInitializationInstanceAnalysisReportType, bqProductInitializationRetrieveOutputModelProductInitializationInstanceAnalysis1.productInitializationInstanceAnalysisReportType) &&
        Objects.equals(this.productInitializationInstanceAnalysisParameters, bqProductInitializationRetrieveOutputModelProductInitializationInstanceAnalysis1.productInitializationInstanceAnalysisParameters) &&
        Objects.equals(this.productInitializationInstanceAnalysisReport, bqProductInitializationRetrieveOutputModelProductInitializationInstanceAnalysis1.productInitializationInstanceAnalysisReport);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productInitializationInstanceAnalysisRecord, productInitializationInstanceAnalysisReportType, productInitializationInstanceAnalysisParameters, productInitializationInstanceAnalysisReport);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BQProductInitializationRetrieveOutputModelProductInitializationInstanceAnalysis1 {\n");
    
    sb.append("    productInitializationInstanceAnalysisRecord: ").append(toIndentedString(productInitializationInstanceAnalysisRecord)).append("\n");
    sb.append("    productInitializationInstanceAnalysisReportType: ").append(toIndentedString(productInitializationInstanceAnalysisReportType)).append("\n");
    sb.append("    productInitializationInstanceAnalysisParameters: ").append(toIndentedString(productInitializationInstanceAnalysisParameters)).append("\n");
    sb.append("    productInitializationInstanceAnalysisReport: ").append(toIndentedString(productInitializationInstanceAnalysisReport)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
