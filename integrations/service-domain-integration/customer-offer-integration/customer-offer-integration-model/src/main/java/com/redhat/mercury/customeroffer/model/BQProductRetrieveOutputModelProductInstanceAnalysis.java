/*
 * Customer Offer
 * This service domain orchestrates the processing of a product offer for a new/established  customer.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.customeroffer.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BQProductRetrieveOutputModelProductInstanceAnalysis
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-19T11:10:08.827631+01:00[Europe/Madrid]")
public class BQProductRetrieveOutputModelProductInstanceAnalysis {
  @SerializedName("productInstanceAnalysisRecord")
  private Object productInstanceAnalysisRecord = null;

  @SerializedName("productInstanceAnalysisReportType")
  private String productInstanceAnalysisReportType = null;

  @SerializedName("productInstanceAnalysisParameters")
  private String productInstanceAnalysisParameters = null;

  @SerializedName("productInstanceAnalysisReport")
  private Object productInstanceAnalysisReport = null;

  public BQProductRetrieveOutputModelProductInstanceAnalysis productInstanceAnalysisRecord(Object productInstanceAnalysisRecord) {
    this.productInstanceAnalysisRecord = productInstanceAnalysisRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The inputs and results of the instance analysis that can be on-going, periodic and actual and projected 
   * @return productInstanceAnalysisRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The inputs and results of the instance analysis that can be on-going, periodic and actual and projected ")
  public Object getProductInstanceAnalysisRecord() {
    return productInstanceAnalysisRecord;
  }

  public void setProductInstanceAnalysisRecord(Object productInstanceAnalysisRecord) {
    this.productInstanceAnalysisRecord = productInstanceAnalysisRecord;
  }

  public BQProductRetrieveOutputModelProductInstanceAnalysis productInstanceAnalysisReportType(String productInstanceAnalysisReportType) {
    this.productInstanceAnalysisReportType = productInstanceAnalysisReportType;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Code  general-info: The type of external performance analysis report available 
   * @return productInstanceAnalysisReportType
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Code  general-info: The type of external performance analysis report available ")
  public String getProductInstanceAnalysisReportType() {
    return productInstanceAnalysisReportType;
  }

  public void setProductInstanceAnalysisReportType(String productInstanceAnalysisReportType) {
    this.productInstanceAnalysisReportType = productInstanceAnalysisReportType;
  }

  public BQProductRetrieveOutputModelProductInstanceAnalysis productInstanceAnalysisParameters(String productInstanceAnalysisParameters) {
    this.productInstanceAnalysisParameters = productInstanceAnalysisParameters;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The selection parameters for the analysis (e.g. period, algorithm type) 
   * @return productInstanceAnalysisParameters
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The selection parameters for the analysis (e.g. period, algorithm type) ")
  public String getProductInstanceAnalysisParameters() {
    return productInstanceAnalysisParameters;
  }

  public void setProductInstanceAnalysisParameters(String productInstanceAnalysisParameters) {
    this.productInstanceAnalysisParameters = productInstanceAnalysisParameters;
  }

  public BQProductRetrieveOutputModelProductInstanceAnalysis productInstanceAnalysisReport(Object productInstanceAnalysisReport) {
    this.productInstanceAnalysisReport = productInstanceAnalysisReport;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The external analysis report in any suitable form including selection filters where appropriate 
   * @return productInstanceAnalysisReport
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The external analysis report in any suitable form including selection filters where appropriate ")
  public Object getProductInstanceAnalysisReport() {
    return productInstanceAnalysisReport;
  }

  public void setProductInstanceAnalysisReport(Object productInstanceAnalysisReport) {
    this.productInstanceAnalysisReport = productInstanceAnalysisReport;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BQProductRetrieveOutputModelProductInstanceAnalysis bqProductRetrieveOutputModelProductInstanceAnalysis = (BQProductRetrieveOutputModelProductInstanceAnalysis) o;
    return Objects.equals(this.productInstanceAnalysisRecord, bqProductRetrieveOutputModelProductInstanceAnalysis.productInstanceAnalysisRecord) &&
        Objects.equals(this.productInstanceAnalysisReportType, bqProductRetrieveOutputModelProductInstanceAnalysis.productInstanceAnalysisReportType) &&
        Objects.equals(this.productInstanceAnalysisParameters, bqProductRetrieveOutputModelProductInstanceAnalysis.productInstanceAnalysisParameters) &&
        Objects.equals(this.productInstanceAnalysisReport, bqProductRetrieveOutputModelProductInstanceAnalysis.productInstanceAnalysisReport);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productInstanceAnalysisRecord, productInstanceAnalysisReportType, productInstanceAnalysisParameters, productInstanceAnalysisReport);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BQProductRetrieveOutputModelProductInstanceAnalysis {\n");
    
    sb.append("    productInstanceAnalysisRecord: ").append(toIndentedString(productInstanceAnalysisRecord)).append("\n");
    sb.append("    productInstanceAnalysisReportType: ").append(toIndentedString(productInstanceAnalysisReportType)).append("\n");
    sb.append("    productInstanceAnalysisParameters: ").append(toIndentedString(productInstanceAnalysisParameters)).append("\n");
    sb.append("    productInstanceAnalysisReport: ").append(toIndentedString(productInstanceAnalysisReport)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
