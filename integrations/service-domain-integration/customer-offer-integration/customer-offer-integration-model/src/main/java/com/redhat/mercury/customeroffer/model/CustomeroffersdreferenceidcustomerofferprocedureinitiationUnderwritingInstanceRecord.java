/*
 * Customer Offer
 * This service domain orchestrates the processing of a product offer for a new/established  customer.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.customeroffer.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CustomeroffersdreferenceidcustomerofferprocedureinitiationUnderwritingInstanceRecord
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-19T11:10:08.827631+01:00[Europe/Madrid]")
public class CustomeroffersdreferenceidcustomerofferprocedureinitiationUnderwritingInstanceRecord {
  @SerializedName("customerIncomeStatement")
  private String customerIncomeStatement = null;

  @SerializedName("customerDebtStatement")
  private String customerDebtStatement = null;

  @SerializedName("customerAssetStatement")
  private String customerAssetStatement = null;

  public CustomeroffersdreferenceidcustomerofferprocedureinitiationUnderwritingInstanceRecord customerIncomeStatement(String customerIncomeStatement) {
    this.customerIncomeStatement = customerIncomeStatement;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: A statement of income over a required duration in a suitable format 
   * @return customerIncomeStatement
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: A statement of income over a required duration in a suitable format ")
  public String getCustomerIncomeStatement() {
    return customerIncomeStatement;
  }

  public void setCustomerIncomeStatement(String customerIncomeStatement) {
    this.customerIncomeStatement = customerIncomeStatement;
  }

  public CustomeroffersdreferenceidcustomerofferprocedureinitiationUnderwritingInstanceRecord customerDebtStatement(String customerDebtStatement) {
    this.customerDebtStatement = customerDebtStatement;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The provided debt statements may combine bank and non-bank managed debt details 
   * @return customerDebtStatement
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The provided debt statements may combine bank and non-bank managed debt details ")
  public String getCustomerDebtStatement() {
    return customerDebtStatement;
  }

  public void setCustomerDebtStatement(String customerDebtStatement) {
    this.customerDebtStatement = customerDebtStatement;
  }

  public CustomeroffersdreferenceidcustomerofferprocedureinitiationUnderwritingInstanceRecord customerAssetStatement(String customerAssetStatement) {
    this.customerAssetStatement = customerAssetStatement;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The provided asset statement may combine bank and known non-bank managed assets 
   * @return customerAssetStatement
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The provided asset statement may combine bank and known non-bank managed assets ")
  public String getCustomerAssetStatement() {
    return customerAssetStatement;
  }

  public void setCustomerAssetStatement(String customerAssetStatement) {
    this.customerAssetStatement = customerAssetStatement;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomeroffersdreferenceidcustomerofferprocedureinitiationUnderwritingInstanceRecord customeroffersdreferenceidcustomerofferprocedureinitiationUnderwritingInstanceRecord = (CustomeroffersdreferenceidcustomerofferprocedureinitiationUnderwritingInstanceRecord) o;
    return Objects.equals(this.customerIncomeStatement, customeroffersdreferenceidcustomerofferprocedureinitiationUnderwritingInstanceRecord.customerIncomeStatement) &&
        Objects.equals(this.customerDebtStatement, customeroffersdreferenceidcustomerofferprocedureinitiationUnderwritingInstanceRecord.customerDebtStatement) &&
        Objects.equals(this.customerAssetStatement, customeroffersdreferenceidcustomerofferprocedureinitiationUnderwritingInstanceRecord.customerAssetStatement);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerIncomeStatement, customerDebtStatement, customerAssetStatement);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomeroffersdreferenceidcustomerofferprocedureinitiationUnderwritingInstanceRecord {\n");
    
    sb.append("    customerIncomeStatement: ").append(toIndentedString(customerIncomeStatement)).append("\n");
    sb.append("    customerDebtStatement: ").append(toIndentedString(customerDebtStatement)).append("\n");
    sb.append("    customerAssetStatement: ").append(toIndentedString(customerAssetStatement)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
