/*
 * Customer Offer
 * This service domain orchestrates the processing of a product offer for a new/established  customer.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.customeroffer.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BQProductInitializationRetrieveOutputModelProductInitializationInstanceReport
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-19T11:10:08.827631+01:00[Europe/Madrid]")
public class BQProductInitializationRetrieveOutputModelProductInitializationInstanceReport {
  @SerializedName("productInitializationInstanceReportRecord")
  private Object productInitializationInstanceReportRecord = null;

  @SerializedName("productInitializationInstanceReportType")
  private String productInitializationInstanceReportType = null;

  @SerializedName("productInitializationInstanceReportParameters")
  private String productInitializationInstanceReportParameters = null;

  @SerializedName("productInitializationInstanceReport")
  private Object productInitializationInstanceReport = null;

  public BQProductInitializationRetrieveOutputModelProductInitializationInstanceReport productInitializationInstanceReportRecord(Object productInitializationInstanceReportRecord) {
    this.productInitializationInstanceReportRecord = productInitializationInstanceReportRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The input information used to assemble the report that can be on-going, periodic and actual and projected 
   * @return productInitializationInstanceReportRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The input information used to assemble the report that can be on-going, periodic and actual and projected ")
  public Object getProductInitializationInstanceReportRecord() {
    return productInitializationInstanceReportRecord;
  }

  public void setProductInitializationInstanceReportRecord(Object productInitializationInstanceReportRecord) {
    this.productInitializationInstanceReportRecord = productInitializationInstanceReportRecord;
  }

  public BQProductInitializationRetrieveOutputModelProductInitializationInstanceReport productInitializationInstanceReportType(String productInitializationInstanceReportType) {
    this.productInitializationInstanceReportType = productInitializationInstanceReportType;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Code  general-info: The type of external report available 
   * @return productInitializationInstanceReportType
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Code  general-info: The type of external report available ")
  public String getProductInitializationInstanceReportType() {
    return productInitializationInstanceReportType;
  }

  public void setProductInitializationInstanceReportType(String productInitializationInstanceReportType) {
    this.productInitializationInstanceReportType = productInitializationInstanceReportType;
  }

  public BQProductInitializationRetrieveOutputModelProductInitializationInstanceReport productInitializationInstanceReportParameters(String productInitializationInstanceReportParameters) {
    this.productInitializationInstanceReportParameters = productInitializationInstanceReportParameters;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The selection parameters for the report (e.g. period, content type) 
   * @return productInitializationInstanceReportParameters
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The selection parameters for the report (e.g. period, content type) ")
  public String getProductInitializationInstanceReportParameters() {
    return productInitializationInstanceReportParameters;
  }

  public void setProductInitializationInstanceReportParameters(String productInitializationInstanceReportParameters) {
    this.productInitializationInstanceReportParameters = productInitializationInstanceReportParameters;
  }

  public BQProductInitializationRetrieveOutputModelProductInitializationInstanceReport productInitializationInstanceReport(Object productInitializationInstanceReport) {
    this.productInitializationInstanceReport = productInitializationInstanceReport;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The external report in any suitable form including selection filters where appropriate 
   * @return productInitializationInstanceReport
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The external report in any suitable form including selection filters where appropriate ")
  public Object getProductInitializationInstanceReport() {
    return productInitializationInstanceReport;
  }

  public void setProductInitializationInstanceReport(Object productInitializationInstanceReport) {
    this.productInitializationInstanceReport = productInitializationInstanceReport;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BQProductInitializationRetrieveOutputModelProductInitializationInstanceReport bqProductInitializationRetrieveOutputModelProductInitializationInstanceReport = (BQProductInitializationRetrieveOutputModelProductInitializationInstanceReport) o;
    return Objects.equals(this.productInitializationInstanceReportRecord, bqProductInitializationRetrieveOutputModelProductInitializationInstanceReport.productInitializationInstanceReportRecord) &&
        Objects.equals(this.productInitializationInstanceReportType, bqProductInitializationRetrieveOutputModelProductInitializationInstanceReport.productInitializationInstanceReportType) &&
        Objects.equals(this.productInitializationInstanceReportParameters, bqProductInitializationRetrieveOutputModelProductInitializationInstanceReport.productInitializationInstanceReportParameters) &&
        Objects.equals(this.productInitializationInstanceReport, bqProductInitializationRetrieveOutputModelProductInitializationInstanceReport.productInitializationInstanceReport);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productInitializationInstanceReportRecord, productInitializationInstanceReportType, productInitializationInstanceReportParameters, productInitializationInstanceReport);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BQProductInitializationRetrieveOutputModelProductInitializationInstanceReport {\n");
    
    sb.append("    productInitializationInstanceReportRecord: ").append(toIndentedString(productInitializationInstanceReportRecord)).append("\n");
    sb.append("    productInitializationInstanceReportType: ").append(toIndentedString(productInitializationInstanceReportType)).append("\n");
    sb.append("    productInitializationInstanceReportParameters: ").append(toIndentedString(productInitializationInstanceReportParameters)).append("\n");
    sb.append("    productInitializationInstanceReport: ").append(toIndentedString(productInitializationInstanceReport)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
