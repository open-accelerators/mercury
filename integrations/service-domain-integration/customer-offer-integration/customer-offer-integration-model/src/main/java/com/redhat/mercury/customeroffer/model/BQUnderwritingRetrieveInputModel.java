/*
 * Customer Offer
 * This service domain orchestrates the processing of a product offer for a new/established  customer.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.redhat.mercury.customeroffer.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.redhat.mercury.customeroffer.model.BQUnderwritingRetrieveInputModelUnderwritingInstanceAnalysis1;
import com.redhat.mercury.customeroffer.model.BQUnderwritingRetrieveInputModelUnderwritingInstanceReport1;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BQUnderwritingRetrieveInputModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-19T11:10:08.827631+01:00[Europe/Madrid]")
public class BQUnderwritingRetrieveInputModel {
  @SerializedName("underwritingRetrieveActionTaskRecord")
  private Object underwritingRetrieveActionTaskRecord = null;

  @SerializedName("underwritingRetrieveActionRequest")
  private String underwritingRetrieveActionRequest = null;

  @SerializedName("underwritingInstanceReport")
  private BQUnderwritingRetrieveInputModelUnderwritingInstanceReport1 underwritingInstanceReport = null;

  @SerializedName("underwritingInstanceAnalysis")
  private BQUnderwritingRetrieveInputModelUnderwritingInstanceAnalysis1 underwritingInstanceAnalysis = null;

  public BQUnderwritingRetrieveInputModel underwritingRetrieveActionTaskRecord(Object underwritingRetrieveActionTaskRecord) {
    this.underwritingRetrieveActionTaskRecord = underwritingRetrieveActionTaskRecord;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The retrieve service call consolidated processing record 
   * @return underwritingRetrieveActionTaskRecord
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The retrieve service call consolidated processing record ")
  public Object getUnderwritingRetrieveActionTaskRecord() {
    return underwritingRetrieveActionTaskRecord;
  }

  public void setUnderwritingRetrieveActionTaskRecord(Object underwritingRetrieveActionTaskRecord) {
    this.underwritingRetrieveActionTaskRecord = underwritingRetrieveActionTaskRecord;
  }

  public BQUnderwritingRetrieveInputModel underwritingRetrieveActionRequest(String underwritingRetrieveActionRequest) {
    this.underwritingRetrieveActionRequest = underwritingRetrieveActionRequest;
    return this;
  }

   /**
   * &#x60;status: Not Mapped&#x60;  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the retrieve action service request (lists requested reports) 
   * @return underwritingRetrieveActionRequest
  **/
  @Schema(description = "`status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the retrieve action service request (lists requested reports) ")
  public String getUnderwritingRetrieveActionRequest() {
    return underwritingRetrieveActionRequest;
  }

  public void setUnderwritingRetrieveActionRequest(String underwritingRetrieveActionRequest) {
    this.underwritingRetrieveActionRequest = underwritingRetrieveActionRequest;
  }

  public BQUnderwritingRetrieveInputModel underwritingInstanceReport(BQUnderwritingRetrieveInputModelUnderwritingInstanceReport1 underwritingInstanceReport) {
    this.underwritingInstanceReport = underwritingInstanceReport;
    return this;
  }

   /**
   * Get underwritingInstanceReport
   * @return underwritingInstanceReport
  **/
  @Schema(description = "")
  public BQUnderwritingRetrieveInputModelUnderwritingInstanceReport1 getUnderwritingInstanceReport() {
    return underwritingInstanceReport;
  }

  public void setUnderwritingInstanceReport(BQUnderwritingRetrieveInputModelUnderwritingInstanceReport1 underwritingInstanceReport) {
    this.underwritingInstanceReport = underwritingInstanceReport;
  }

  public BQUnderwritingRetrieveInputModel underwritingInstanceAnalysis(BQUnderwritingRetrieveInputModelUnderwritingInstanceAnalysis1 underwritingInstanceAnalysis) {
    this.underwritingInstanceAnalysis = underwritingInstanceAnalysis;
    return this;
  }

   /**
   * Get underwritingInstanceAnalysis
   * @return underwritingInstanceAnalysis
  **/
  @Schema(description = "")
  public BQUnderwritingRetrieveInputModelUnderwritingInstanceAnalysis1 getUnderwritingInstanceAnalysis() {
    return underwritingInstanceAnalysis;
  }

  public void setUnderwritingInstanceAnalysis(BQUnderwritingRetrieveInputModelUnderwritingInstanceAnalysis1 underwritingInstanceAnalysis) {
    this.underwritingInstanceAnalysis = underwritingInstanceAnalysis;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BQUnderwritingRetrieveInputModel bqUnderwritingRetrieveInputModel = (BQUnderwritingRetrieveInputModel) o;
    return Objects.equals(this.underwritingRetrieveActionTaskRecord, bqUnderwritingRetrieveInputModel.underwritingRetrieveActionTaskRecord) &&
        Objects.equals(this.underwritingRetrieveActionRequest, bqUnderwritingRetrieveInputModel.underwritingRetrieveActionRequest) &&
        Objects.equals(this.underwritingInstanceReport, bqUnderwritingRetrieveInputModel.underwritingInstanceReport) &&
        Objects.equals(this.underwritingInstanceAnalysis, bqUnderwritingRetrieveInputModel.underwritingInstanceAnalysis);
  }

  @Override
  public int hashCode() {
    return Objects.hash(underwritingRetrieveActionTaskRecord, underwritingRetrieveActionRequest, underwritingInstanceReport, underwritingInstanceAnalysis);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BQUnderwritingRetrieveInputModel {\n");
    
    sb.append("    underwritingRetrieveActionTaskRecord: ").append(toIndentedString(underwritingRetrieveActionTaskRecord)).append("\n");
    sb.append("    underwritingRetrieveActionRequest: ").append(toIndentedString(underwritingRetrieveActionRequest)).append("\n");
    sb.append("    underwritingInstanceReport: ").append(toIndentedString(underwritingInstanceReport)).append("\n");
    sb.append("    underwritingInstanceAnalysis: ").append(toIndentedString(underwritingInstanceAnalysis)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
