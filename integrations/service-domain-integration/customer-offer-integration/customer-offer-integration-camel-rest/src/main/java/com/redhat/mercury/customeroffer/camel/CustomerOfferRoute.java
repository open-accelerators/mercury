package com.redhat.mercury.customeroffer.camel;

import javax.annotation.Generated;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.rest.RestParamType;

/**
 * Generated from OpenApi specification by Camel REST DSL generator.
 */
@Generated("org.apache.camel.generator.openapi.PathGenerator")
public final class CustomerOfferRoute extends RouteBuilder {
    /**
     * Defines Apache Camel routes using REST DSL fluent API.
     */
    public void configure() {

        rest()
            .post("/customer-offer/activation")
                .id("activateSDCustomerOffer")
                .description("Activate  a  SDCustomerOffer servicing session")
                .produces("application/json")
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("SDCustomerOffer Request Payload")
                .endParam()
                .to("direct:activateSDCustomerOffer");

        rest()
            .put("/customer-offer/{sdReferenceId}/configuration")
                .id("configureSDCustomerOffer")
                .description("Update an active SDCustomerOffer session configuration")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("SDCustomerOffer Servicing Session Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("SDCustomerOffer Configure Request Payload")
                .endParam()
                .to("direct:configureSDCustomerOffer");

        rest()
            .put("/customer-offer/{sdReferenceId}/feedback")
                .id("feedbackSDCustomerOffer")
                .description("Capturing feedback against the SDCustomerOffer service that can target different levels of detail: SD/CR/BQ")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("SDCustomerOffer Servicing Session Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("SDCustomerOffer Feedback Request Payload")
                .endParam()
                .to("direct:feedbackSDCustomerOffer");

        rest()
            .get("/customer-offer/{sdReferenceId}")
                .id("retrieveSDCustomerOffer")
                .description("Analytical views maintained by the SDCustomerOffer service center for management reporting and analysis purposes")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("SDCustomerOffer Servicing Session Reference")
                .endParam()
                .param()
                    .name("queryparams")
                    .type(RestParamType.query)
                    .dataType("string")
                    .required(false)
                    .description("Query params from schema '#/definitions/SDCustomerOfferRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveSDCustomerOffer");

        rest()
            .post("/customer-offer/{sdReferenceId}/customer-offer-procedure/initiation")
                .id("initiateCustomerOfferProcedure")
                .description("Initiate the offer procedure")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("CustomerOfferProcedure Request Payload")
                .endParam()
                .to("direct:initiateCustomerOfferProcedure");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/update")
                .id("updateCustomerOfferProcedure")
                .description("Update details of an offer procedure")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Customer Offer Procedure Request Payload")
                .endParam()
                .to("direct:updateCustomerOfferProcedure");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/control")
                .id("controlCustomerOfferProcedureUpdate")
                .description("Control the processing of an offer (e.g. terminate)")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Customer Offer Procedure Request Payload")
                .endParam()
                .to("direct:controlCustomerOfferProcedureUpdate");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/exchange")
                .id("exchangeCustomerOfferProcedureUpdate")
                .description("Accept, reject, verify, etc an offer procedure")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Customer Offer Procedure Request Payload")
                .endParam()
                .to("direct:exchangeCustomerOfferProcedureUpdate");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/execution")
                .id("executeCustomerOfferProcedureUpdate")
                .description("Execute an automated task against an offer (e.g. submit data)")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Customer Offer Procedure Request Payload")
                .endParam()
                .to("direct:executeCustomerOfferProcedureUpdate");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/requisition")
                .id("requestCustomerOfferProcedureUpdate")
                .description("Request manual intervention in an offer (e.g. request specialist support)")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Customer Offer Procedure Request Payload")
                .endParam()
                .to("direct:requestCustomerOfferProcedureUpdate");

        rest()
            .get("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}")
                .id("retrieveCustomerOffer")
                .description("Retrieve details about a customer offer")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("queryparams")
                    .type(RestParamType.query)
                    .dataType("string")
                    .required(false)
                    .description("Query params from schema '#/definitions/CRCustomerOfferProcedureRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveCustomerOffer");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/product/{bqReferenceId}/update")
                .id("updateCustomerOfferProcedureProduct")
                .description("Update product options and pricing terms")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Product Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Product Request Payload")
                .endParam()
                .to("direct:updateCustomerOfferProcedureProduct");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/product/{bqReferenceId}/exchange")
                .id("exchangeCustomerOfferProcedureProductUpdate")
                .description("Accept, reject etc product options and pricing terms")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Product Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Product request payload")
                .endParam()
                .to("direct:exchangeCustomerOfferProcedureProductUpdate");

        rest()
            .get("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/product/{bqReferenceId}/")
                .id("retrieveCustomerOfferProcedureProduct")
                .description("Retrieve details about product options and pricing terms .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Product Instance Reference")
                .endParam()
                .param()
                    .name("queryparams")
                    .type(RestParamType.query)
                    .dataType("string")
                    .required(false)
                    .description("Query params from schema '#/definitions/BQProductRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveCustomerOfferProcedureProduct");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/disclosures/{bqReferenceId}/update")
                .id("updateCustomerOfferProcedureDisclosures")
                .description("Update disclosure submission")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Disclosures Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Disclosures Request Payload")
                .endParam()
                .to("direct:updateCustomerOfferProcedureDisclosures");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/disclosures/{bqReferenceId}/exchange")
                .id("exchangeCustomerOfferProcedureDisclosuresUpdate")
                .description("Accept, reject etc. disclosures")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Disclosures Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Disclosures request payload")
                .endParam()
                .to("direct:exchangeCustomerOfferProcedureDisclosuresUpdate");

        rest()
            .get("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/disclosures/{bqReferenceId}/")
                .id("retrieveCustomerOfferProcedureDisclosures")
                .description("Retrieve details about disclosure submissions .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Disclosures Instance Reference")
                .endParam()
                .param()
                    .name("queryparams")
                    .type(RestParamType.query)
                    .dataType("string")
                    .required(false)
                    .description("Query params from schema '#/definitions/BQDisclosuresRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveCustomerOfferProcedureDisclosures");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/credit/{bqReferenceId}/update")
                .id("updateCustomerOfferProcedureCredit")
                .description("Update credit submission details")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Credit Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Credit Request Payload")
                .endParam()
                .to("direct:updateCustomerOfferProcedureCredit");

        rest()
            .get("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/credit/{bqReferenceId}/")
                .id("retrieveCustomerOfferProcedureCredit")
                .description("Retrieve details about the credit submission .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Credit Instance Reference")
                .endParam()
                .param()
                    .name("queryparams")
                    .type(RestParamType.query)
                    .dataType("string")
                    .required(false)
                    .description("Query params from schema '#/definitions/BQCreditRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveCustomerOfferProcedureCredit");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/underwriting/{bqReferenceId}/update")
                .id("updateCustomerOfferProcedureUnderwriting")
                .description("Update submitted materials for the underwriting decision")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Underwriting Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Underwriting Request Payload")
                .endParam()
                .to("direct:updateCustomerOfferProcedureUnderwriting");

        rest()
            .get("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/underwriting/{bqReferenceId}/")
                .id("retrieveCustomerOfferProcedureUnderwriting")
                .description("Retrieve details about the underwriting decision .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Underwriting Instance Reference")
                .endParam()
                .param()
                    .name("queryparams")
                    .type(RestParamType.query)
                    .dataType("string")
                    .required(false)
                    .description("Query params from schema '#/definitions/BQUnderwritingRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveCustomerOfferProcedureUnderwriting");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/compliance/{bqReferenceId}/update")
                .id("updateCustomerOfferProcedureCompliance")
                .description("Update details submitted for compliance checks")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Compliance Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Compliance Request Payload")
                .endParam()
                .to("direct:updateCustomerOfferProcedureCompliance");

        rest()
            .get("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/compliance/{bqReferenceId}/")
                .id("retrieveCustomerOfferProcedureCompliance")
                .description("Retrieve details of the regulatory compliance assessment .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Compliance Instance Reference")
                .endParam()
                .param()
                    .name("queryparams")
                    .type(RestParamType.query)
                    .dataType("string")
                    .required(false)
                    .description("Query params from schema '#/definitions/BQComplianceRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveCustomerOfferProcedureCompliance");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/audit/{bqReferenceId}/update")
                .id("updateCustomerOfferProcedureAudit")
                .description("Update details of submitted materials for audit checks")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Audit Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Audit Request Payload")
                .endParam()
                .to("direct:updateCustomerOfferProcedureAudit");

        rest()
            .get("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/audit/{bqReferenceId}/")
                .id("retrieveCustomerOfferProcedureAudit")
                .description("Retrieve details of the compliance assessment .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Audit Instance Reference")
                .endParam()
                .param()
                    .name("queryparams")
                    .type(RestParamType.query)
                    .dataType("string")
                    .required(false)
                    .description("Query params from schema '#/definitions/BQAuditRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveCustomerOfferProcedureAudit");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/collateral/{bqReferenceId}/update")
                .id("updateCustomerOfferProcedureCollateral")
                .description("Update details of the collateral allocation")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Collateral Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Collateral Request Payload")
                .endParam()
                .to("direct:updateCustomerOfferProcedureCollateral");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/collateral/{bqReferenceId}/exchange")
                .id("exchangeCustomerOfferProcedureCollateralUpdate")
                .description("Accept, reject etc. the collateral allocation")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Collateral Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Collateral request payload")
                .endParam()
                .to("direct:exchangeCustomerOfferProcedureCollateralUpdate");

        rest()
            .get("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/collateral/{bqReferenceId}/")
                .id("retrieveCustomerOfferProcedureCollateral")
                .description("Retrieve details about the collateral allocation .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Collateral Instance Reference")
                .endParam()
                .param()
                    .name("queryparams")
                    .type(RestParamType.query)
                    .dataType("string")
                    .required(false)
                    .description("Query params from schema '#/definitions/BQCollateralRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveCustomerOfferProcedureCollateral");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/booking/{bqReferenceId}/update")
                .id("updateCustomerOfferProcedureBooking")
                .description("Update details of the offer asset and liability booking")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Booking Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Booking Request Payload")
                .endParam()
                .to("direct:updateCustomerOfferProcedureBooking");

        rest()
            .get("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/booking/{bqReferenceId}/")
                .id("retrieveCustomerOfferProcedureBooking")
                .description("Retrieve details about the booking .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Booking Instance Reference")
                .endParam()
                .param()
                    .name("queryparams")
                    .type(RestParamType.query)
                    .dataType("string")
                    .required(false)
                    .description("Query params from schema '#/definitions/BQBookingRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveCustomerOfferProcedureBooking");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/correspondenceanddocuments/{bqReferenceId}/update")
                .id("updateCustomerOfferProcedureCorrespondenceandDocuments")
                .description("Update details about the correspondence and documents accessed and created by the offer")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("CorrespondenceandDocuments Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("CorrespondenceandDocuments Request Payload")
                .endParam()
                .to("direct:updateCustomerOfferProcedureCorrespondenceandDocuments");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/correspondenceanddocuments/{bqReferenceId}/exchange")
                .id("exchangeCustomerOfferProcedureCorrespondenceandDocumentsUpdate")
                .description("Accept, verify, etc. correspondence and documents")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("CorrespondenceandDocuments Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("CorrespondenceandDocuments request payload")
                .endParam()
                .to("direct:exchangeCustomerOfferProcedureCorrespondenceandDocumentsUpdate");

        rest()
            .get("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/correspondenceanddocuments/{bqReferenceId}/")
                .id("retrieveCustomerOfferProcedureCorrespondenceandDocuments")
                .description("Retrieve details about correspondence and documents from the customer offer procedure .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("CorrespondenceandDocuments Instance Reference")
                .endParam()
                .param()
                    .name("queryparams")
                    .type(RestParamType.query)
                    .dataType("string")
                    .required(false)
                    .description("Query params from schema '#/definitions/BQCorrespondenceandDocumentsRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveCustomerOfferProcedureCorrespondenceandDocuments");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/agreement/{bqReferenceId}/update")
                .id("updateCustomerOfferProcedureAgreement")
                .description("Update details of the customer agreement")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Agreement Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Agreement Request Payload")
                .endParam()
                .to("direct:updateCustomerOfferProcedureAgreement");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/agreement/{bqReferenceId}/exchange")
                .id("exchangeCustomerOfferProcedureAgreementUpdate")
                .description("Accept, verify, etc. actions against the customer and product agreements")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Agreement Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Agreement request payload")
                .endParam()
                .to("direct:exchangeCustomerOfferProcedureAgreementUpdate");

        rest()
            .get("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/agreement/{bqReferenceId}/")
                .id("retrieveCustomerOfferProcedureAgreement")
                .description("Retrieve details about the agreements impacted and created as part of the offer .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Agreement Instance Reference")
                .endParam()
                .param()
                    .name("queryparams")
                    .type(RestParamType.query)
                    .dataType("string")
                    .required(false)
                    .description("Query params from schema '#/definitions/BQAgreementRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveCustomerOfferProcedureAgreement");

        rest()
            .put("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/productinitialization/{bqReferenceId}/update")
                .id("updateCustomerOfferProcedureProductInitialization")
                .description("Update details of the product initiation request")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("ProductInitialization Instance Reference")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("ProductInitialization Request Payload")
                .endParam()
                .to("direct:updateCustomerOfferProcedureProductInitialization");

        rest()
            .get("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/productinitialization/{bqReferenceId}/")
                .id("retrieveCustomerOfferProcedureProductInitialization")
                .description("Retrieve details about the product initiation request .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("bqReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("ProductInitialization Instance Reference")
                .endParam()
                .param()
                    .name("queryparams")
                    .type(RestParamType.query)
                    .dataType("string")
                    .required(false)
                    .description("Query params from schema '#/definitions/BQProductInitializationRetrieveInputModel'")
                .endParam()
                .to("direct:retrieveCustomerOfferProcedureProductInitialization");

        rest()
            .get("/customer-offer/{sdReferenceId}/customer-offer-procedure")
                .id("RetrieveCustomerOfferReferenceIds")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("collection-filter")
                    .type(RestParamType.query)
                    .dataType("string")
                    .required(false)
                    .description("Filter to refine the result set. ex- CustomerOffer Instance Status='active'")
                .endParam()
                .to("direct:RetrieveCustomerOfferReferenceIds");

        rest()
            .get("/customer-offer/customer-offer-procedure/behavior-qualifiers/")
                .id("RetrieveCustomerOfferBehaviorQualifiers")
                .produces("application/json")
                .to("direct:RetrieveCustomerOfferBehaviorQualifiers");

        rest()
            .get("/customer-offer/{sdReferenceId}/customer-offer-procedure/{crReferenceId}/{behavior-qualifier}/")
                .id("RetrieveCustomerOfferBehaviorQualifierReferenceIds")
                .produces("application/json")
                .param()
                    .name("sdReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Servicing Session Reference")
                .endParam()
                .param()
                    .name("crReferenceId")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Customer Offer Procedure Instance Reference")
                .endParam()
                .param()
                    .name("behavior-qualifier")
                    .type(RestParamType.path)
                    .dataType("string")
                    .required(true)
                    .description("Behavior Qualifier Name. ex- ProductInitialization")
                .endParam()
                .param()
                    .name("collection-filter")
                    .type(RestParamType.query)
                    .dataType("string")
                    .required(false)
                    .description("Filter to refine the result set. ex- ProductInitialization Instance Status = 'pending'")
                .endParam()
                .to("direct:RetrieveCustomerOfferBehaviorQualifierReferenceIds");

    }
}
